{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"contracts/BEP20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >0.4.0 <= 0.9.0;\\r\\n\\r\\ninterface IBEP20 {\\r\\n  /**\\r\\n   * @dev Returns the amount of tokens in existence.\\r\\n   */\\r\\n  function totalSupply() external view returns (uint256);\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the token decimals.\\r\\n   */\\r\\n  function decimals() external view returns (uint8);\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the token symbol.\\r\\n   */\\r\\n  function symbol() external view returns (string memory);\\r\\n\\r\\n  /**\\r\\n  * @dev Returns the token name.\\r\\n  */\\r\\n  function name() external view returns (string memory);\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the bep token owner.\\r\\n   */\\r\\n  function getOwner() external view returns (address);\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the amount of tokens owned by `account`.\\r\\n   */\\r\\n  function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n  /**\\r\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n   *\\r\\n   * Returns a boolean value indicating whether the operation succeeded.\\r\\n   *\\r\\n   * Emits a {Transfer} event.\\r\\n   */\\r\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the remaining number of tokens that `spender` will be\\r\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n   * zero by default.\\r\\n   *\\r\\n   * This value changes when {approve} or {transferFrom} are called.\\r\\n   */\\r\\n  function allowance(address _owner, address spender) external view returns (uint256);\\r\\n\\r\\n  /**\\r\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n   *\\r\\n   * Returns a boolean value indicating whether the operation succeeded.\\r\\n   *\\r\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n   * that someone may use both the old and the new allowance by unfortunate\\r\\n   * transaction ordering. One possible solution to mitigate this race\\r\\n   * condition is to first reduce the spender's allowance to 0 and set the\\r\\n   * desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   *\\r\\n   * Emits an {Approval} event.\\r\\n   */\\r\\n  function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n  /**\\r\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n   * allowance mechanism. `amount` is then deducted from the caller's\\r\\n   * allowance.\\r\\n   *\\r\\n   * Returns a boolean value indicating whether the operation succeeded.\\r\\n   *\\r\\n   * Emits a {Transfer} event.\\r\\n   */\\r\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n  /**\\r\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n   * another (`to`).\\r\\n   *\\r\\n   * Note that `value` may be zero.\\r\\n   */\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n  /**\\r\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n   * a call to {approve}. `value` is the new allowance.\\r\\n   */\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n/*\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with GSN meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\ncontract Context {\\r\\n  // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n  // an instance of this contract, which should be used via inheritance.\\r\\n  constructor () { }\\r\\n\\r\\n  function _msgSender() internal view returns (address) {\\r\\n    return msg.sender;\\r\\n  }\\r\\n\\r\\n  function _msgData() internal view returns (bytes memory) {\\r\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n    return msg.data;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\r\\n * checks.\\r\\n *\\r\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\r\\n * in bugs, because programmers usually assume that an overflow raises an\\r\\n * error, which is the standard behavior in high level programming languages.\\r\\n * `SafeMath` restores this intuition by reverting the transaction when an\\r\\n * operation overflows.\\r\\n *\\r\\n * Using this library instead of the unchecked operations eliminates an entire\\r\\n * class of bugs, so it's recommended to use it always.\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  /**\\r\\n   * @dev Returns the addition of two unsigned integers, reverting on\\r\\n   * overflow.\\r\\n   *\\r\\n   * Counterpart to Solidity's `+` operator.\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - Addition cannot overflow.\\r\\n   */\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n   * overflow (when the result is negative).\\r\\n   *\\r\\n   * Counterpart to Solidity's `-` operator.\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - Subtraction cannot overflow.\\r\\n   */\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n   * overflow (when the result is negative).\\r\\n   *\\r\\n   * Counterpart to Solidity's `-` operator.\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - Subtraction cannot overflow.\\r\\n   */\\r\\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n    require(b <= a, errorMessage);\\r\\n    uint256 c = a - b;\\r\\n\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n   * overflow.\\r\\n   *\\r\\n   * Counterpart to Solidity's `*` operator.\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - Multiplication cannot overflow.\\r\\n   */\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n    // benefit is lost if 'b' is also tested.\\r\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n    if (a == 0) {\\r\\n      return 0;\\r\\n    }\\r\\n\\r\\n    uint256 c = a * b;\\r\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n   * division by zero. The result is rounded towards zero.\\r\\n   *\\r\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - The divisor cannot be zero.\\r\\n   */\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n   * division by zero. The result is rounded towards zero.\\r\\n   *\\r\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - The divisor cannot be zero.\\r\\n   */\\r\\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n    // Solidity only automatically asserts when dividing by 0\\r\\n    require(b > 0, errorMessage);\\r\\n    uint256 c = a / b;\\r\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n   * Reverts when dividing by zero.\\r\\n   *\\r\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n   * invalid opcode to revert (consuming all remaining gas).\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - The divisor cannot be zero.\\r\\n   */\\r\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n   * Reverts with custom message when dividing by zero.\\r\\n   *\\r\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n   * invalid opcode to revert (consuming all remaining gas).\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - The divisor cannot be zero.\\r\\n   */\\r\\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n    require(b != 0, errorMessage);\\r\\n    return a % b;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\ncontract Ownable is Context {\\r\\n  address private _owner;\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n  /**\\r\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n   */\\r\\n  constructor ()  {\\r\\n    address msgSender = _msgSender();\\r\\n    _owner = msgSender;\\r\\n    emit OwnershipTransferred(address(0), msgSender);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the address of the current owner.\\r\\n   */\\r\\n  function owner() public view returns (address) {\\r\\n    return _owner;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Leaves the contract without owner. It will not be possible to call\\r\\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n   *\\r\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n   * thereby removing any functionality that is only available to the owner.\\r\\n   */\\r\\n  function renounceOwnership() public onlyOwner {\\r\\n    emit OwnershipTransferred(_owner, address(0));\\r\\n    _owner = address(0);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n   * Can only be called by the current owner.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) public onlyOwner {\\r\\n    _transferOwnership(newOwner);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n   */\\r\\n  function _transferOwnership(address newOwner) internal {\\r\\n    require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n    emit OwnershipTransferred(_owner, newOwner);\\r\\n    _owner = newOwner;\\r\\n  }\\r\\n}\\r\\n\\r\\ncontract BEP20Token is Context, IBEP20, Ownable {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => uint256) private _balances;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) private _allowances;\\r\\n\\r\\n  uint256 private _totalSupply;\\r\\n  uint8 private _decimals;\\r\\n  string private _symbol;\\r\\n  string private _name;\\r\\n\\r\\n  constructor() public {\\r\\n    _name = \\\"LUCKYBIRD\\\";\\r\\n    _symbol = \\\"LUCKYBIRD\\\";\\r\\n    _decimals = 18;\\r\\n    _totalSupply = 100000000000000000000000000;\\r\\n    _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n    emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the bep token owner.\\r\\n   */\\r\\n  function getOwner() external view returns (address) {\\r\\n    return owner();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the token decimals.\\r\\n   */\\r\\n  function decimals() external view returns (uint8) {\\r\\n    return _decimals;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the token symbol.\\r\\n   */\\r\\n  function symbol() external view returns (string memory) {\\r\\n    return _symbol;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Returns the token name.\\r\\n  */\\r\\n  function name() external view returns (string memory) {\\r\\n    return _name;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {BEP20-totalSupply}.\\r\\n   */\\r\\n  function totalSupply() external view returns (uint256) {\\r\\n    return _totalSupply;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {BEP20-balanceOf}.\\r\\n   */\\r\\n  function balanceOf(address account) external view returns (uint256) {\\r\\n    return _balances[account];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {BEP20-transfer}.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `recipient` cannot be the zero address.\\r\\n   * - the caller must have a balance of at least `amount`.\\r\\n   */\\r\\n  function transfer(address recipient, uint256 amount) external returns (bool) {\\r\\n    _transfer(_msgSender(), recipient, amount);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {BEP20-allowance}.\\r\\n   */\\r\\n  function allowance(address owner, address spender) external view returns (uint256) {\\r\\n    return _allowances[owner][spender];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {BEP20-approve}.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `spender` cannot be the zero address.\\r\\n   */\\r\\n  function approve(address spender, uint256 amount) external returns (bool) {\\r\\n    _approve(_msgSender(), spender, amount);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {BEP20-transferFrom}.\\r\\n   *\\r\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n   * required by the EIP. See the note at the beginning of {BEP20};\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - `sender` and `recipient` cannot be the zero address.\\r\\n   * - `sender` must have a balance of at least `amount`.\\r\\n   * - the caller must have allowance for `sender`'s tokens of at least\\r\\n   * `amount`.\\r\\n   */\\r\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\\r\\n    _transfer(sender, recipient, amount);\\r\\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n   *\\r\\n   * This is an alternative to {approve} that can be used as a mitigation for\\r\\n   * problems described in {BEP20-approve}.\\r\\n   *\\r\\n   * Emits an {Approval} event indicating the updated allowance.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `spender` cannot be the zero address.\\r\\n   */\\r\\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\r\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n   *\\r\\n   * This is an alternative to {approve} that can be used as a mitigation for\\r\\n   * problems described in {BEP20-approve}.\\r\\n   *\\r\\n   * Emits an {Approval} event indicating the updated allowance.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `spender` cannot be the zero address.\\r\\n   * - `spender` must have allowance for the caller of at least\\r\\n   * `subtractedValue`.\\r\\n   */\\r\\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\r\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\\r\\n   * the total supply.\\r\\n   *\\r\\n   * Requirements\\r\\n   *\\r\\n   * - `msg.sender` must be the token owner\\r\\n   */\\r\\n  function mint(uint256 amount) public onlyOwner returns (bool) {\\r\\n    _mint(_msgSender(), amount);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\\r\\n   *\\r\\n   * This is internal function is equivalent to {transfer}, and can be used to\\r\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n   *\\r\\n   * Emits a {Transfer} event.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `sender` cannot be the zero address.\\r\\n   * - `recipient` cannot be the zero address.\\r\\n   * - `sender` must have a balance of at least `amount`.\\r\\n   */\\r\\n  function _transfer(address sender, address recipient, uint256 amount) internal {\\r\\n    require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n    require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n    _balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n    _balances[recipient] = _balances[recipient].add(amount);\\r\\n    emit Transfer(sender, recipient, amount);\\r\\n  }\\r\\n\\r\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n   * the total supply.\\r\\n   *\\r\\n   * Emits a {Transfer} event with `from` set to the zero address.\\r\\n   *\\r\\n   * Requirements\\r\\n   *\\r\\n   * - `to` cannot be the zero address.\\r\\n   */\\r\\n  function _mint(address account, uint256 amount) internal {\\r\\n    require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n    _totalSupply = _totalSupply.add(amount);\\r\\n    _balances[account] = _balances[account].add(amount);\\r\\n    emit Transfer(address(0), account, amount);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n   * total supply.\\r\\n   *\\r\\n   * Emits a {Transfer} event with `to` set to the zero address.\\r\\n   *\\r\\n   * Requirements\\r\\n   *\\r\\n   * - `account` cannot be the zero address.\\r\\n   * - `account` must have at least `amount` tokens.\\r\\n   */\\r\\n  function _burn(address account, uint256 amount) internal {\\r\\n    require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n    _balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n    _totalSupply = _totalSupply.sub(amount);\\r\\n    emit Transfer(account, address(0), amount);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\r\\n   *\\r\\n   * This is internal function is equivalent to `approve`, and can be used to\\r\\n   * e.g. set automatic allowances for certain subsystems, etc.\\r\\n   *\\r\\n   * Emits an {Approval} event.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `owner` cannot be the zero address.\\r\\n   * - `spender` cannot be the zero address.\\r\\n   */\\r\\n  function _approve(address owner, address spender, uint256 amount) internal {\\r\\n    require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n    require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n    _allowances[owner][spender] = amount;\\r\\n    emit Approval(owner, spender, amount);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\\r\\n   * from the caller's allowance.\\r\\n   *\\r\\n   * See {_burn} and {_approve}.\\r\\n   */\\r\\n  function _burnFrom(address account, uint256 amount) internal {\\r\\n    _burn(account, amount);\\r\\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n  }\\r\\n}\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}}}}",
	"name": "BEP20Token",
	"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"BEP20Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x440d97f9dda4c6c4833f194da72975eeb5f5ac5c84d527107f16cbda818d2c62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442a683d650d92ec7d59938ac4bf47b778462af2fd541d32f2be5546a5a545e5\",\"dweb:/ipfs/QmVzMtd37zfw5BjxRkErFcdWr27EGPJBgXNGMueB7pH5rF\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_104": {
				"entryPoint": null,
				"id": 104,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_352": {
				"entryPoint": null,
				"id": 352,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_500": {
				"entryPoint": null,
				"id": 500,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_msgSender_113": {
				"entryPoint": 564,
				"id": 113,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 1437,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 1454,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"array_dataslot_t_string_storage": {
				"entryPoint": 730,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"array_length_t_string_memory_ptr": {
				"entryPoint": 572,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"clean_up_bytearray_end_slots_t_string_storage": {
				"entryPoint": 1051,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"cleanup_t_uint256": {
				"entryPoint": 866,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"clear_storage_range_t_bytes1": {
				"entryPoint": 1012,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"convert_t_uint256_to_t_uint256": {
				"entryPoint": 886,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
				"entryPoint": 1206,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"divide_by_32_ceil": {
				"entryPoint": 751,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_byte_array_length": {
				"entryPoint": 677,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_used_part_and_set_length_of_short_byte_array": {
				"entryPoint": 1176,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"identity": {
				"entryPoint": 876,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"mask_bytes_dynamic": {
				"entryPoint": 1144,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"panic_error_0x22": {
				"entryPoint": 630,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x41": {
				"entryPoint": 583,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"prepare_store_t_uint256": {
				"entryPoint": 926,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"shift_left_dynamic": {
				"entryPoint": 767,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"shift_right_unsigned_dynamic": {
				"entryPoint": 1131,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"storage_set_to_zero_t_uint256": {
				"entryPoint": 984,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"update_byte_slice_dynamic32": {
				"entryPoint": 780,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"update_storage_value_t_uint256_to_t_uint256": {
				"entryPoint": 936,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"zero_value_for_split_t_uint256": {
				"entryPoint": 979,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nodeType": "YulBlock",
					"src": "0:5583:1",
					"statements": [
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "66:40:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "77:22:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "93:5:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "87:5:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "87:12:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "77:6:1"
											}
										]
									}
								]
							},
							"name": "array_length_t_string_memory_ptr",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "49:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nodeType": "YulTypedName",
									"src": "59:6:1",
									"type": ""
								}
							],
							"src": "7:99:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "140:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "157:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "160:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "150:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "150:88:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "150:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "254:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "257:4:1",
													"type": "",
													"value": "0x41"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "247:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "247:15:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "247:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "278:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "281:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "271:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "271:15:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "271:15:1"
									}
								]
							},
							"name": "panic_error_0x41",
							"nodeType": "YulFunctionDefinition",
							"src": "112:180:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "326:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "343:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "346:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "336:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "336:88:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "336:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "440:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "443:4:1",
													"type": "",
													"value": "0x22"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "433:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "433:15:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "433:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "464:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "467:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "457:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "457:15:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "457:15:1"
									}
								]
							},
							"name": "panic_error_0x22",
							"nodeType": "YulFunctionDefinition",
							"src": "298:180:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "535:269:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "545:22:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "559:4:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "565:1:1",
													"type": "",
													"value": "2"
												}
											],
											"functionName": {
												"name": "div",
												"nodeType": "YulIdentifier",
												"src": "555:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "555:12:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "545:6:1"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "576:38:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "606:4:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "612:1:1",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "602:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "602:12:1"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulTypedName",
												"src": "580:18:1",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "653:51:1",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "667:27:1",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "681:6:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "689:4:1",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "677:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "677:17:1"
													},
													"variableNames": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "667:6:1"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "633:18:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "626:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "626:26:1"
										},
										"nodeType": "YulIf",
										"src": "623:81:1"
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "756:42:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x22",
															"nodeType": "YulIdentifier",
															"src": "770:16:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "770:18:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "770:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "720:18:1"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "743:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "751:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nodeType": "YulIdentifier",
														"src": "740:2:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "740:14:1"
												}
											],
											"functionName": {
												"name": "eq",
												"nodeType": "YulIdentifier",
												"src": "717:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "717:38:1"
										},
										"nodeType": "YulIf",
										"src": "714:84:1"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "519:4:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nodeType": "YulTypedName",
									"src": "528:6:1",
									"type": ""
								}
							],
							"src": "484:320:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "864:87:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "874:11:1",
										"value": {
											"name": "ptr",
											"nodeType": "YulIdentifier",
											"src": "882:3:1"
										},
										"variableNames": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "874:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "902:1:1",
													"type": "",
													"value": "0"
												},
												{
													"name": "ptr",
													"nodeType": "YulIdentifier",
													"src": "905:3:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "895:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "895:14:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "895:14:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "918:26:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "936:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "939:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "keccak256",
												"nodeType": "YulIdentifier",
												"src": "926:9:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "926:18:1"
										},
										"variableNames": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "918:4:1"
											}
										]
									}
								]
							},
							"name": "array_dataslot_t_string_storage",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "ptr",
									"nodeType": "YulTypedName",
									"src": "851:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "859:4:1",
									"type": ""
								}
							],
							"src": "810:141:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1001:49:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1011:33:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "1029:5:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1036:2:1",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1025:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "1025:14:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1041:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "div",
												"nodeType": "YulIdentifier",
												"src": "1021:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1021:23:1"
										},
										"variableNames": [
											{
												"name": "result",
												"nodeType": "YulIdentifier",
												"src": "1011:6:1"
											}
										]
									}
								]
							},
							"name": "divide_by_32_ceil",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "984:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nodeType": "YulTypedName",
									"src": "994:6:1",
									"type": ""
								}
							],
							"src": "957:93:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1109:54:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1119:37:1",
										"value": {
											"arguments": [
												{
													"name": "bits",
													"nodeType": "YulIdentifier",
													"src": "1144:4:1"
												},
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1150:5:1"
												}
											],
											"functionName": {
												"name": "shl",
												"nodeType": "YulIdentifier",
												"src": "1140:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1140:16:1"
										},
										"variableNames": [
											{
												"name": "newValue",
												"nodeType": "YulIdentifier",
												"src": "1119:8:1"
											}
										]
									}
								]
							},
							"name": "shift_left_dynamic",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "bits",
									"nodeType": "YulTypedName",
									"src": "1084:4:1",
									"type": ""
								},
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "1090:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "newValue",
									"nodeType": "YulTypedName",
									"src": "1100:8:1",
									"type": ""
								}
							],
							"src": "1056:107:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1245:317:1",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "1255:35:1",
										"value": {
											"arguments": [
												{
													"name": "shiftBytes",
													"nodeType": "YulIdentifier",
													"src": "1276:10:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1288:1:1",
													"type": "",
													"value": "8"
												}
											],
											"functionName": {
												"name": "mul",
												"nodeType": "YulIdentifier",
												"src": "1272:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1272:18:1"
										},
										"variables": [
											{
												"name": "shiftBits",
												"nodeType": "YulTypedName",
												"src": "1259:9:1",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "1299:109:1",
										"value": {
											"arguments": [
												{
													"name": "shiftBits",
													"nodeType": "YulIdentifier",
													"src": "1330:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1341:66:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "shift_left_dynamic",
												"nodeType": "YulIdentifier",
												"src": "1311:18:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1311:97:1"
										},
										"variables": [
											{
												"name": "mask",
												"nodeType": "YulTypedName",
												"src": "1303:4:1",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "1417:51:1",
										"value": {
											"arguments": [
												{
													"name": "shiftBits",
													"nodeType": "YulIdentifier",
													"src": "1448:9:1"
												},
												{
													"name": "toInsert",
													"nodeType": "YulIdentifier",
													"src": "1459:8:1"
												}
											],
											"functionName": {
												"name": "shift_left_dynamic",
												"nodeType": "YulIdentifier",
												"src": "1429:18:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1429:39:1"
										},
										"variableNames": [
											{
												"name": "toInsert",
												"nodeType": "YulIdentifier",
												"src": "1417:8:1"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "1477:30:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1490:5:1"
												},
												{
													"arguments": [
														{
															"name": "mask",
															"nodeType": "YulIdentifier",
															"src": "1501:4:1"
														}
													],
													"functionName": {
														"name": "not",
														"nodeType": "YulIdentifier",
														"src": "1497:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "1497:9:1"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "1486:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1486:21:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1477:5:1"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "1516:40:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1529:5:1"
												},
												{
													"arguments": [
														{
															"name": "toInsert",
															"nodeType": "YulIdentifier",
															"src": "1540:8:1"
														},
														{
															"name": "mask",
															"nodeType": "YulIdentifier",
															"src": "1550:4:1"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "1536:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "1536:19:1"
												}
											],
											"functionName": {
												"name": "or",
												"nodeType": "YulIdentifier",
												"src": "1526:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1526:30:1"
										},
										"variableNames": [
											{
												"name": "result",
												"nodeType": "YulIdentifier",
												"src": "1516:6:1"
											}
										]
									}
								]
							},
							"name": "update_byte_slice_dynamic32",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "1206:5:1",
									"type": ""
								},
								{
									"name": "shiftBytes",
									"nodeType": "YulTypedName",
									"src": "1213:10:1",
									"type": ""
								},
								{
									"name": "toInsert",
									"nodeType": "YulTypedName",
									"src": "1225:8:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nodeType": "YulTypedName",
									"src": "1238:6:1",
									"type": ""
								}
							],
							"src": "1169:393:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1613:32:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1623:16:1",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "1634:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nodeType": "YulIdentifier",
												"src": "1623:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "1595:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nodeType": "YulTypedName",
									"src": "1605:7:1",
									"type": ""
								}
							],
							"src": "1568:77:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1683:28:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1693:12:1",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "1700:5:1"
										},
										"variableNames": [
											{
												"name": "ret",
												"nodeType": "YulIdentifier",
												"src": "1693:3:1"
											}
										]
									}
								]
							},
							"name": "identity",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "1669:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "ret",
									"nodeType": "YulTypedName",
									"src": "1679:3:1",
									"type": ""
								}
							],
							"src": "1651:60:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1777:82:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1787:66:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1845:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nodeType": "YulIdentifier",
																"src": "1827:17:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "1827:24:1"
														}
													],
													"functionName": {
														"name": "identity",
														"nodeType": "YulIdentifier",
														"src": "1818:8:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "1818:34:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nodeType": "YulIdentifier",
												"src": "1800:17:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1800:53:1"
										},
										"variableNames": [
											{
												"name": "converted",
												"nodeType": "YulIdentifier",
												"src": "1787:9:1"
											}
										]
									}
								]
							},
							"name": "convert_t_uint256_to_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "1757:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "converted",
									"nodeType": "YulTypedName",
									"src": "1767:9:1",
									"type": ""
								}
							],
							"src": "1717:142:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1912:28:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1922:12:1",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "1929:5:1"
										},
										"variableNames": [
											{
												"name": "ret",
												"nodeType": "YulIdentifier",
												"src": "1922:3:1"
											}
										]
									}
								]
							},
							"name": "prepare_store_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "1898:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "ret",
									"nodeType": "YulTypedName",
									"src": "1908:3:1",
									"type": ""
								}
							],
							"src": "1865:75:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2022:193:1",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2032:63:1",
										"value": {
											"arguments": [
												{
													"name": "value_0",
													"nodeType": "YulIdentifier",
													"src": "2087:7:1"
												}
											],
											"functionName": {
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulIdentifier",
												"src": "2056:30:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2056:39:1"
										},
										"variables": [
											{
												"name": "convertedValue_0",
												"nodeType": "YulTypedName",
												"src": "2036:16:1",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nodeType": "YulIdentifier",
													"src": "2111:4:1"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "2151:4:1"
																}
															],
															"functionName": {
																"name": "sload",
																"nodeType": "YulIdentifier",
																"src": "2145:5:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "2145:11:1"
														},
														{
															"name": "offset",
															"nodeType": "YulIdentifier",
															"src": "2158:6:1"
														},
														{
															"arguments": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulIdentifier",
																	"src": "2190:16:1"
																}
															],
															"functionName": {
																"name": "prepare_store_t_uint256",
																"nodeType": "YulIdentifier",
																"src": "2166:23:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "2166:41:1"
														}
													],
													"functionName": {
														"name": "update_byte_slice_dynamic32",
														"nodeType": "YulIdentifier",
														"src": "2117:27:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "2117:91:1"
												}
											],
											"functionName": {
												"name": "sstore",
												"nodeType": "YulIdentifier",
												"src": "2104:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2104:105:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2104:105:1"
									}
								]
							},
							"name": "update_storage_value_t_uint256_to_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nodeType": "YulTypedName",
									"src": "1999:4:1",
									"type": ""
								},
								{
									"name": "offset",
									"nodeType": "YulTypedName",
									"src": "2005:6:1",
									"type": ""
								},
								{
									"name": "value_0",
									"nodeType": "YulTypedName",
									"src": "2013:7:1",
									"type": ""
								}
							],
							"src": "1946:269:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2270:24:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "2280:8:1",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "2287:1:1",
											"type": "",
											"value": "0"
										},
										"variableNames": [
											{
												"name": "ret",
												"nodeType": "YulIdentifier",
												"src": "2280:3:1"
											}
										]
									}
								]
							},
							"name": "zero_value_for_split_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "ret",
									"nodeType": "YulTypedName",
									"src": "2266:3:1",
									"type": ""
								}
							],
							"src": "2221:73:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2353:136:1",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2363:46:1",
										"value": {
											"arguments": [],
											"functionName": {
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulIdentifier",
												"src": "2377:30:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2377:32:1"
										},
										"variables": [
											{
												"name": "zero_0",
												"nodeType": "YulTypedName",
												"src": "2367:6:1",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nodeType": "YulIdentifier",
													"src": "2462:4:1"
												},
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "2468:6:1"
												},
												{
													"name": "zero_0",
													"nodeType": "YulIdentifier",
													"src": "2476:6:1"
												}
											],
											"functionName": {
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulIdentifier",
												"src": "2418:43:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2418:65:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2418:65:1"
									}
								]
							},
							"name": "storage_set_to_zero_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nodeType": "YulTypedName",
									"src": "2339:4:1",
									"type": ""
								},
								{
									"name": "offset",
									"nodeType": "YulTypedName",
									"src": "2345:6:1",
									"type": ""
								}
							],
							"src": "2300:189:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2545:136:1",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2612:63:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"name": "start",
																"nodeType": "YulIdentifier",
																"src": "2656:5:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2663:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "storage_set_to_zero_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "2626:29:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "2626:39:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2626:39:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "start",
													"nodeType": "YulIdentifier",
													"src": "2565:5:1"
												},
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "2572:3:1"
												}
											],
											"functionName": {
												"name": "lt",
												"nodeType": "YulIdentifier",
												"src": "2562:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2562:14:1"
										},
										"nodeType": "YulForLoop",
										"post": {
											"nodeType": "YulBlock",
											"src": "2577:26:1",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "2579:22:1",
													"value": {
														"arguments": [
															{
																"name": "start",
																"nodeType": "YulIdentifier",
																"src": "2592:5:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2599:1:1",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2588:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "2588:13:1"
													},
													"variableNames": [
														{
															"name": "start",
															"nodeType": "YulIdentifier",
															"src": "2579:5:1"
														}
													]
												}
											]
										},
										"pre": {
											"nodeType": "YulBlock",
											"src": "2559:2:1",
											"statements": []
										},
										"src": "2555:120:1"
									}
								]
							},
							"name": "clear_storage_range_t_bytes1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "start",
									"nodeType": "YulTypedName",
									"src": "2533:5:1",
									"type": ""
								},
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "2540:3:1",
									"type": ""
								}
							],
							"src": "2495:186:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2766:464:1",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2792:431:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "2806:54:1",
													"value": {
														"arguments": [
															{
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "2854:5:1"
															}
														],
														"functionName": {
															"name": "array_dataslot_t_string_storage",
															"nodeType": "YulIdentifier",
															"src": "2822:31:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "2822:38:1"
													},
													"variables": [
														{
															"name": "dataArea",
															"nodeType": "YulTypedName",
															"src": "2810:8:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "2873:63:1",
													"value": {
														"arguments": [
															{
																"name": "dataArea",
																"nodeType": "YulIdentifier",
																"src": "2896:8:1"
															},
															{
																"arguments": [
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "2924:10:1"
																	}
																],
																"functionName": {
																	"name": "divide_by_32_ceil",
																	"nodeType": "YulIdentifier",
																	"src": "2906:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:29:1"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2892:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "2892:44:1"
													},
													"variables": [
														{
															"name": "deleteStart",
															"nodeType": "YulTypedName",
															"src": "2877:11:1",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "3093:27:1",
														"statements": [
															{
																"nodeType": "YulAssignment",
																"src": "3095:23:1",
																"value": {
																	"name": "dataArea",
																	"nodeType": "YulIdentifier",
																	"src": "3110:8:1"
																},
																"variableNames": [
																	{
																		"name": "deleteStart",
																		"nodeType": "YulIdentifier",
																		"src": "3095:11:1"
																	}
																]
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "startIndex",
																"nodeType": "YulIdentifier",
																"src": "3077:10:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3089:2:1",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "lt",
															"nodeType": "YulIdentifier",
															"src": "3074:2:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "3074:18:1"
													},
													"nodeType": "YulIf",
													"src": "3071:49:1"
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "deleteStart",
																"nodeType": "YulIdentifier",
																"src": "3162:11:1"
															},
															{
																"arguments": [
																	{
																		"name": "dataArea",
																		"nodeType": "YulIdentifier",
																		"src": "3179:8:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3207:3:1"
																			}
																		],
																		"functionName": {
																			"name": "divide_by_32_ceil",
																			"nodeType": "YulIdentifier",
																			"src": "3189:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:22:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3175:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3175:37:1"
															}
														],
														"functionName": {
															"name": "clear_storage_range_t_bytes1",
															"nodeType": "YulIdentifier",
															"src": "3133:28:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "3133:80:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3133:80:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "len",
													"nodeType": "YulIdentifier",
													"src": "2783:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2788:2:1",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "2780:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2780:11:1"
										},
										"nodeType": "YulIf",
										"src": "2777:446:1"
									}
								]
							},
							"name": "clean_up_bytearray_end_slots_t_string_storage",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "array",
									"nodeType": "YulTypedName",
									"src": "2742:5:1",
									"type": ""
								},
								{
									"name": "len",
									"nodeType": "YulTypedName",
									"src": "2749:3:1",
									"type": ""
								},
								{
									"name": "startIndex",
									"nodeType": "YulTypedName",
									"src": "2754:10:1",
									"type": ""
								}
							],
							"src": "2687:543:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3299:54:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "3309:37:1",
										"value": {
											"arguments": [
												{
													"name": "bits",
													"nodeType": "YulIdentifier",
													"src": "3334:4:1"
												},
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "3340:5:1"
												}
											],
											"functionName": {
												"name": "shr",
												"nodeType": "YulIdentifier",
												"src": "3330:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3330:16:1"
										},
										"variableNames": [
											{
												"name": "newValue",
												"nodeType": "YulIdentifier",
												"src": "3309:8:1"
											}
										]
									}
								]
							},
							"name": "shift_right_unsigned_dynamic",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "bits",
									"nodeType": "YulTypedName",
									"src": "3274:4:1",
									"type": ""
								},
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "3280:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "newValue",
									"nodeType": "YulTypedName",
									"src": "3290:8:1",
									"type": ""
								}
							],
							"src": "3236:117:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3410:118:1",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "3420:68:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3469:1:1",
																	"type": "",
																	"value": "8"
																},
																{
																	"name": "bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3472:5:1"
																}
															],
															"functionName": {
																"name": "mul",
																"nodeType": "YulIdentifier",
																"src": "3465:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "3465:13:1"
														},
														{
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3484:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "not",
																"nodeType": "YulIdentifier",
																"src": "3480:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "3480:6:1"
														}
													],
													"functionName": {
														"name": "shift_right_unsigned_dynamic",
														"nodeType": "YulIdentifier",
														"src": "3436:28:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "3436:51:1"
												}
											],
											"functionName": {
												"name": "not",
												"nodeType": "YulIdentifier",
												"src": "3432:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3432:56:1"
										},
										"variables": [
											{
												"name": "mask",
												"nodeType": "YulTypedName",
												"src": "3424:4:1",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "3497:25:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "3511:4:1"
												},
												{
													"name": "mask",
													"nodeType": "YulIdentifier",
													"src": "3517:4:1"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "3507:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3507:15:1"
										},
										"variableNames": [
											{
												"name": "result",
												"nodeType": "YulIdentifier",
												"src": "3497:6:1"
											}
										]
									}
								]
							},
							"name": "mask_bytes_dynamic",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "3387:4:1",
									"type": ""
								},
								{
									"name": "bytes",
									"nodeType": "YulTypedName",
									"src": "3393:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nodeType": "YulTypedName",
									"src": "3403:6:1",
									"type": ""
								}
							],
							"src": "3359:169:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3614:214:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "3747:37:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "3774:4:1"
												},
												{
													"name": "len",
													"nodeType": "YulIdentifier",
													"src": "3780:3:1"
												}
											],
											"functionName": {
												"name": "mask_bytes_dynamic",
												"nodeType": "YulIdentifier",
												"src": "3755:18:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3755:29:1"
										},
										"variableNames": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "3747:4:1"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "3793:29:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "3804:4:1"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3814:1:1",
															"type": "",
															"value": "2"
														},
														{
															"name": "len",
															"nodeType": "YulIdentifier",
															"src": "3817:3:1"
														}
													],
													"functionName": {
														"name": "mul",
														"nodeType": "YulIdentifier",
														"src": "3810:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "3810:11:1"
												}
											],
											"functionName": {
												"name": "or",
												"nodeType": "YulIdentifier",
												"src": "3801:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3801:21:1"
										},
										"variableNames": [
											{
												"name": "used",
												"nodeType": "YulIdentifier",
												"src": "3793:4:1"
											}
										]
									}
								]
							},
							"name": "extract_used_part_and_set_length_of_short_byte_array",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "3595:4:1",
									"type": ""
								},
								{
									"name": "len",
									"nodeType": "YulTypedName",
									"src": "3601:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "used",
									"nodeType": "YulTypedName",
									"src": "3609:4:1",
									"type": ""
								}
							],
							"src": "3533:295:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3925:1303:1",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "3936:51:1",
										"value": {
											"arguments": [
												{
													"name": "src",
													"nodeType": "YulIdentifier",
													"src": "3983:3:1"
												}
											],
											"functionName": {
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulIdentifier",
												"src": "3950:32:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3950:37:1"
										},
										"variables": [
											{
												"name": "newLen",
												"nodeType": "YulTypedName",
												"src": "3940:6:1",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "4072:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nodeType": "YulIdentifier",
															"src": "4074:16:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "4074:18:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "4074:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "newLen",
													"nodeType": "YulIdentifier",
													"src": "4044:6:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4052:18:1",
													"type": "",
													"value": "0xffffffffffffffff"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "4041:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "4041:30:1"
										},
										"nodeType": "YulIf",
										"src": "4038:56:1"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "4104:52:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "slot",
															"nodeType": "YulIdentifier",
															"src": "4150:4:1"
														}
													],
													"functionName": {
														"name": "sload",
														"nodeType": "YulIdentifier",
														"src": "4144:5:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "4144:11:1"
												}
											],
											"functionName": {
												"name": "extract_byte_array_length",
												"nodeType": "YulIdentifier",
												"src": "4118:25:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "4118:38:1"
										},
										"variables": [
											{
												"name": "oldLen",
												"nodeType": "YulTypedName",
												"src": "4108:6:1",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nodeType": "YulIdentifier",
													"src": "4249:4:1"
												},
												{
													"name": "oldLen",
													"nodeType": "YulIdentifier",
													"src": "4255:6:1"
												},
												{
													"name": "newLen",
													"nodeType": "YulIdentifier",
													"src": "4263:6:1"
												}
											],
											"functionName": {
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulIdentifier",
												"src": "4203:45:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "4203:67:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4203:67:1"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "4280:18:1",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "4297:1:1",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "srcOffset",
												"nodeType": "YulTypedName",
												"src": "4284:9:1",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "4308:17:1",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "4321:4:1",
											"type": "",
											"value": "0x20"
										},
										"variableNames": [
											{
												"name": "srcOffset",
												"nodeType": "YulIdentifier",
												"src": "4308:9:1"
											}
										]
									},
									{
										"cases": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4372:611:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4386:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4405:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4417:4:1",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4413:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4413:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4401:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:22:1"
															},
															"variables": [
																{
																	"name": "loopEnd",
																	"nodeType": "YulTypedName",
																	"src": "4390:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4437:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4483:4:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4451:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4451:37:1"
															},
															"variables": [
																{
																	"name": "dstPtr",
																	"nodeType": "YulTypedName",
																	"src": "4441:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4501:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4510:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4505:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4569:163:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4594:6:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4612:3:1"
																								},
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4617:9:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4608:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4608:19:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4602:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4602:26:1"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "4587:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4587:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4587:42:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4646:24:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4660:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4668:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4656:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dstPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4687:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcOffset",
																					"nodeType": "YulIdentifier",
																					"src": "4704:9:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4715:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4700:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcOffset",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4535:1:1"
																	},
																	{
																		"name": "loopEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4538:7:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4547:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4549:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4558:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4561:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4554:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4554:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4549:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4528:3:1",
																"statements": []
															},
															"src": "4524:208:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4768:156:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4786:43:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4813:3:1"
																						},
																						{
																							"name": "srcOffset",
																							"nodeType": "YulIdentifier",
																							"src": "4818:9:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4809:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4809:19:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4803:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4803:26:1"
																		},
																		"variables": [
																			{
																				"name": "lastValue",
																				"nodeType": "YulTypedName",
																				"src": "4790:9:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4853:6:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "lastValue",
																							"nodeType": "YulIdentifier",
																							"src": "4880:9:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4895:6:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4903:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "4891:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4891:17:1"
																						}
																					],
																					"functionName": {
																						"name": "mask_bytes_dynamic",
																						"nodeType": "YulIdentifier",
																						"src": "4861:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4861:48:1"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "4846:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4846:64:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4846:64:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "loopEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4751:7:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4760:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4748:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4748:19:1"
															},
															"nodeType": "YulIf",
															"src": "4745:179:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4944:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "newLen",
																						"nodeType": "YulIdentifier",
																						"src": "4958:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4966:1:1",
																						"type": "",
																						"value": "2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4954:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4954:14:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4970:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4950:22:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4937:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4937:36:1"
														}
													]
												},
												"nodeType": "YulCase",
												"src": "4365:618:1",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4370:1:1",
													"type": "",
													"value": "1"
												}
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5000:222:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5014:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5027:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5018:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5051:67:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5069:35:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5088:3:1"
																						},
																						{
																							"name": "srcOffset",
																							"nodeType": "YulIdentifier",
																							"src": "5093:9:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5084:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5084:19:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5078:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5078:26:1"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5069:5:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"name": "newLen",
																"nodeType": "YulIdentifier",
																"src": "5044:6:1"
															},
															"nodeType": "YulIf",
															"src": "5041:77:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5138:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5197:5:1"
																			},
																			{
																				"name": "newLen",
																				"nodeType": "YulIdentifier",
																				"src": "5204:6:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_used_part_and_set_length_of_short_byte_array",
																			"nodeType": "YulIdentifier",
																			"src": "5144:52:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:67:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:81:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5131:81:1"
														}
													]
												},
												"nodeType": "YulCase",
												"src": "4992:230:1",
												"value": "default"
											}
										],
										"expression": {
											"arguments": [
												{
													"name": "newLen",
													"nodeType": "YulIdentifier",
													"src": "4345:6:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4353:2:1",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "4342:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "4342:14:1"
										},
										"nodeType": "YulSwitch",
										"src": "4335:887:1"
									}
								]
							},
							"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nodeType": "YulTypedName",
									"src": "3914:4:1",
									"type": ""
								},
								{
									"name": "src",
									"nodeType": "YulTypedName",
									"src": "3920:3:1",
									"type": ""
								}
							],
							"src": "3833:1395:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5299:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "5316:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "5339:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nodeType": "YulIdentifier",
														"src": "5321:17:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "5321:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5309:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "5309:37:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5309:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "5287:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "5294:3:1",
									"type": ""
								}
							],
							"src": "5234:118:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5456:124:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "5466:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5478:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5489:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "5474:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "5474:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5466:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "5546:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5559:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5570:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5555:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "5555:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulIdentifier",
												"src": "5502:43:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "5502:71:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5502:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5428:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "5440:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "5451:4:1",
									"type": ""
								}
							],
							"src": "5358:222:1"
						}
					]
				},
				"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "60806040523480156200001157600080fd5b506000620000246200023460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600981526020017f4c55434b5942495244000000000000000000000000000000000000000000000081525060069081620001089190620004b6565b506040518060400160405280600981526020017f4c55434b59424952440000000000000000000000000000000000000000000000815250600590816200014f9190620004b6565b506012600460006101000a81548160ff021916908360ff1602179055506a52b7d2dcc80cd2e4000000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600354604051620002269190620005ae565b60405180910390a3620005cb565b600033905090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002be57607f821691505b602082108103620002d457620002d362000276565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200033e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002ff565b6200034a8683620002ff565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000397620003916200038b8462000362565b6200036c565b62000362565b9050919050565b6000819050919050565b620003b38362000376565b620003cb620003c2826200039e565b8484546200030c565b825550505050565b600090565b620003e2620003d3565b620003ef818484620003a8565b505050565b5b8181101562000417576200040b600082620003d8565b600181019050620003f5565b5050565b601f82111562000466576200043081620002da565b6200043b84620002ef565b810160208510156200044b578190505b620004636200045a85620002ef565b830182620003f4565b50505b505050565b600082821c905092915050565b60006200048b600019846008026200046b565b1980831691505092915050565b6000620004a6838362000478565b9150826002028217905092915050565b620004c1826200023c565b67ffffffffffffffff811115620004dd57620004dc62000247565b5b620004e98254620002a5565b620004f68282856200041b565b600060209050601f8311600181146200052e576000841562000519578287015190505b62000525858262000498565b86555062000595565b601f1984166200053e86620002da565b60005b82811015620005685784890151825560018201915060208501945060208101905062000541565b8683101562000588578489015162000584601f89168262000478565b8355505b6001600288020188555050505b505050505050565b620005a88162000362565b82525050565b6000602082019050620005c560008301846200059d565b92915050565b611bb180620005db6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a919061134a565b60405180910390f35b61013d60048036038101906101389190611405565b6103f1565b60405161014a9190611460565b60405180910390f35b61015b61040f565b604051610168919061148a565b60405180910390f35b61018b600480360381019061018691906114a5565b610419565b6040516101989190611460565b60405180910390f35b6101a96104f2565b6040516101b69190611514565b60405180910390f35b6101d960048036038101906101d49190611405565b610509565b6040516101e69190611460565b60405180910390f35b6102096004803603810190610204919061152f565b6105bc565b604051610216919061148a565b60405180910390f35b610227610605565b005b610231610758565b60405161023e919061156b565b60405180910390f35b61024f610767565b60405161025c919061156b565b60405180910390f35b61026d610790565b60405161027a919061134a565b60405180910390f35b61029d60048036038101906102989190611586565b610822565b6040516102aa9190611460565b60405180910390f35b6102cd60048036038101906102c89190611405565b6108d3565b6040516102da9190611460565b60405180910390f35b6102fd60048036038101906102f89190611405565b6109a0565b60405161030a9190611460565b60405180910390f35b61032d600480360381019061032891906115b3565b6109be565b60405161033a919061148a565b60405180910390f35b61035d6004803603810190610358919061152f565b610a45565b005b60606006805461036e90611622565b80601f016020809104026020016040519081016040528092919081815260200182805461039a90611622565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610ae6565b8484610aee565b6001905092915050565b6000600354905090565b6000610426848484610cb7565b6104e784610432610ae6565b6104e285604051806060016040528060288152602001611b0960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f439092919063ffffffff16565b610aee565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610ae6565b846105ad8560026000610527610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa790919063ffffffff16565b610aee565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106919061169f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610762610767565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461079f90611622565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb90611622565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050505050905090565b600061082c610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b09061169f565b60405180910390fd5b6108ca6108c4610ae6565b83611005565b60019050919050565b60006109966108e0610ae6565b8461099185604051806060016040528060258152602001611b57602591396002600061090a610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f439092919063ffffffff16565b610aee565b6001905092915050565b60006109b46109ad610ae6565b8484610cb7565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad19061169f565b60405180910390fd5b610ae38161118e565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5490611731565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc3906117c3565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610caa919061148a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1d90611855565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8c906118e7565b60405180910390fd5b610e0181604051806060016040528060268152602001611b3160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f439092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f36919061148a565b60405180910390a3505050565b6000838311158290610f8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f82919061134a565b60405180910390fd5b5060008385610f9a9190611936565b9050809150509392505050565b6000808284610fb6919061196a565b905083811015610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff2906119ea565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106b90611a56565b60405180910390fd5b61108981600354610fa790919063ffffffff16565b6003819055506110e181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611182919061148a565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f490611ae8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112f45780820151818401526020810190506112d9565b60008484015250505050565b6000601f19601f8301169050919050565b600061131c826112ba565b61132681856112c5565b93506113368185602086016112d6565b61133f81611300565b840191505092915050565b600060208201905081810360008301526113648184611311565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061139c82611371565b9050919050565b6113ac81611391565b81146113b757600080fd5b50565b6000813590506113c9816113a3565b92915050565b6000819050919050565b6113e2816113cf565b81146113ed57600080fd5b50565b6000813590506113ff816113d9565b92915050565b6000806040838503121561141c5761141b61136c565b5b600061142a858286016113ba565b925050602061143b858286016113f0565b9150509250929050565b60008115159050919050565b61145a81611445565b82525050565b60006020820190506114756000830184611451565b92915050565b611484816113cf565b82525050565b600060208201905061149f600083018461147b565b92915050565b6000806000606084860312156114be576114bd61136c565b5b60006114cc868287016113ba565b93505060206114dd868287016113ba565b92505060406114ee868287016113f0565b9150509250925092565b600060ff82169050919050565b61150e816114f8565b82525050565b60006020820190506115296000830184611505565b92915050565b6000602082840312156115455761154461136c565b5b6000611553848285016113ba565b91505092915050565b61156581611391565b82525050565b6000602082019050611580600083018461155c565b92915050565b60006020828403121561159c5761159b61136c565b5b60006115aa848285016113f0565b91505092915050565b600080604083850312156115ca576115c961136c565b5b60006115d8858286016113ba565b92505060206115e9858286016113ba565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061163a57607f821691505b60208210810361164d5761164c6115f3565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116896020836112c5565b915061169482611653565b602082019050919050565b600060208201905081810360008301526116b88161167c565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061171b6024836112c5565b9150611726826116bf565b604082019050919050565b6000602082019050818103600083015261174a8161170e565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006117ad6022836112c5565b91506117b882611751565b604082019050919050565b600060208201905081810360008301526117dc816117a0565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061183f6025836112c5565b915061184a826117e3565b604082019050919050565b6000602082019050818103600083015261186e81611832565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118d16023836112c5565b91506118dc82611875565b604082019050919050565b60006020820190508181036000830152611900816118c4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611941826113cf565b915061194c836113cf565b925082820390508181111561196457611963611907565b5b92915050565b6000611975826113cf565b9150611980836113cf565b925082820190508082111561199857611997611907565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b60006119d4601b836112c5565b91506119df8261199e565b602082019050919050565b60006020820190508181036000830152611a03816119c7565b9050919050565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611a40601f836112c5565b9150611a4b82611a0a565b602082019050919050565b60006020820190508181036000830152611a6f81611a33565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ad26026836112c5565b9150611add82611a76565b604082019050919050565b60006020820190508181036000830152611b0181611ac5565b905091905056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122045e7046c155955b4c69770c4ebb64f2e2b0a26aad28672c59cd4be2b24e58af164736f6c63430008120033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x234 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C55434B59424952440000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH3 0x108 SWAP2 SWAP1 PUSH3 0x4B6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C55434B59424952440000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP2 PUSH3 0x14F SWAP2 SWAP1 PUSH3 0x4B6 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH3 0x226 SWAP2 SWAP1 PUSH3 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x5CB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2BE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D4 JUMPI PUSH3 0x2D3 PUSH3 0x276 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x33E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2FF JUMP JUMPDEST PUSH3 0x34A DUP7 DUP4 PUSH3 0x2FF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x397 PUSH3 0x391 PUSH3 0x38B DUP5 PUSH3 0x362 JUMP JUMPDEST PUSH3 0x36C JUMP JUMPDEST PUSH3 0x362 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B3 DUP4 PUSH3 0x376 JUMP JUMPDEST PUSH3 0x3CB PUSH3 0x3C2 DUP3 PUSH3 0x39E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x30C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3E2 PUSH3 0x3D3 JUMP JUMPDEST PUSH3 0x3EF DUP2 DUP5 DUP5 PUSH3 0x3A8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x417 JUMPI PUSH3 0x40B PUSH1 0x0 DUP3 PUSH3 0x3D8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3F5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x466 JUMPI PUSH3 0x430 DUP2 PUSH3 0x2DA JUMP JUMPDEST PUSH3 0x43B DUP5 PUSH3 0x2EF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x44B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x463 PUSH3 0x45A DUP6 PUSH3 0x2EF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3F4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x48B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x46B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A6 DUP4 DUP4 PUSH3 0x478 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4C1 DUP3 PUSH3 0x23C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4DD JUMPI PUSH3 0x4DC PUSH3 0x247 JUMP JUMPDEST JUMPDEST PUSH3 0x4E9 DUP3 SLOAD PUSH3 0x2A5 JUMP JUMPDEST PUSH3 0x4F6 DUP3 DUP3 DUP6 PUSH3 0x41B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x52E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x519 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x525 DUP6 DUP3 PUSH3 0x498 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x595 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x53E DUP7 PUSH3 0x2DA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x568 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x541 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x588 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x584 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x478 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x5A8 DUP2 PUSH3 0x362 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5C5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x59D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB1 DUP1 PUSH3 0x5DB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0x1622 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39A SWAP1 PUSH2 0x1622 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0x3FE PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP5 DUP5 DUP5 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x4E7 DUP5 PUSH2 0x432 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x4E2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B09 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x498 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x516 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x5AD DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x527 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFA7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP1 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x79F SWAP1 PUSH2 0x1622 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x1622 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x818 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x818 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH2 0x8C4 PUSH2 0xAE6 JUMP JUMPDEST DUP4 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x996 PUSH2 0x8E0 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x991 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B57 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x90A PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B4 PUSH2 0x9AD PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD1 SWAP1 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0x118E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB54 SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC3 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCAA SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1D SWAP1 PUSH2 0x1855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8C SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE01 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B31 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE96 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFA7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xF9A SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF2 SWAP1 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106B SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1089 DUP2 PUSH1 0x3 SLOAD PUSH2 0xFA7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x10E1 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFA7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12F4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131C DUP3 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1326 DUP2 DUP6 PUSH2 0x12C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1336 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x133F DUP2 PUSH2 0x1300 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1364 DUP2 DUP5 PUSH2 0x1311 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139C DUP3 PUSH2 0x1371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AC DUP2 PUSH2 0x1391 JUMP JUMPDEST DUP2 EQ PUSH2 0x13B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C9 DUP2 PUSH2 0x13A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E2 DUP2 PUSH2 0x13CF JUMP JUMPDEST DUP2 EQ PUSH2 0x13ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13FF DUP2 PUSH2 0x13D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141C JUMPI PUSH2 0x141B PUSH2 0x136C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142A DUP6 DUP3 DUP7 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143B DUP6 DUP3 DUP7 ADD PUSH2 0x13F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145A DUP2 PUSH2 0x1445 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1475 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0x13CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x149F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x147B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14BE JUMPI PUSH2 0x14BD PUSH2 0x136C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14CC DUP7 DUP3 DUP8 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14DD DUP7 DUP3 DUP8 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14EE DUP7 DUP3 DUP8 ADD PUSH2 0x13F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150E DUP2 PUSH2 0x14F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1529 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1505 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1545 JUMPI PUSH2 0x1544 PUSH2 0x136C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1553 DUP5 DUP3 DUP6 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1565 DUP2 PUSH2 0x1391 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1580 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x155C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159C JUMPI PUSH2 0x159B PUSH2 0x136C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15AA DUP5 DUP3 DUP6 ADD PUSH2 0x13F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15CA JUMPI PUSH2 0x15C9 PUSH2 0x136C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D8 DUP6 DUP3 DUP7 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E9 DUP6 DUP3 DUP7 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x163A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x164D JUMPI PUSH2 0x164C PUSH2 0x15F3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1689 PUSH1 0x20 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1694 DUP3 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16B8 DUP2 PUSH2 0x167C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171B PUSH1 0x24 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1726 DUP3 PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x174A DUP2 PUSH2 0x170E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AD PUSH1 0x22 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B8 DUP3 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17DC DUP2 PUSH2 0x17A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183F PUSH1 0x25 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x184A DUP3 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x186E DUP2 PUSH2 0x1832 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D1 PUSH1 0x23 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x18DC DUP3 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1900 DUP2 PUSH2 0x18C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1941 DUP3 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP PUSH2 0x194C DUP4 PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1964 JUMPI PUSH2 0x1963 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1975 DUP3 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP PUSH2 0x1980 DUP4 PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1998 JUMPI PUSH2 0x1997 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D4 PUSH1 0x1B DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19DF DUP3 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A03 DUP2 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A40 PUSH1 0x1F DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4B DUP3 PUSH2 0x1A0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A6F DUP2 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD2 PUSH1 0x26 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADD DUP3 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B01 DUP2 PUSH2 0x1AC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 GASLIMIT 0xE7 DIV PUSH13 0x155955B4C69770C4EBB64F2E2B EXP 0x26 0xAA 0xD2 DUP7 PUSH19 0xC59CD4BE2B24E58AF164736F6C634300081200 CALLER ",
		"sourceMap": "11323:7827:0:-:0;;;11653:254;;;;;;;;;;9832:17;9852:12;:10;;;:12;;:::i;:::-;9832:32;;9880:9;9871:6;;:18;;;;;;;;;;;;;;;;;;9934:9;9901:43;;9930:1;9901:43;;;;;;;;;;;;9825:125;11681:19;;;;;;;;;;;;;;;;;:5;:19;;;;;;:::i;:::-;;11707:21;;;;;;;;;;;;;;;;;:7;:21;;;;;;:::i;:::-;;11747:2;11735:9;;:14;;;;;;;;;;;;;;;;;;11771:27;11756:12;:42;;;;11829:12;;11805:9;:21;11815:10;11805:21;;;;;;;;;;;;;;;:36;;;;11876:10;11855:46;;11872:1;11855:46;;;11888:12;;11855:46;;;;;;:::i;:::-;;;;;;;;11323:7827;;3736:84;3781:7;3804:10;3797:17;;3736:84;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:118::-;5321:24;5339:5;5321:24;:::i;:::-;5316:3;5309:37;5234:118;;:::o;5358:222::-;5451:4;5489:2;5478:9;5474:18;5466:26;;5502:71;5570:1;5559:9;5555:17;5546:6;5502:71;:::i;:::-;5358:222;;;;:::o;11323:7827:0:-;;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "subtractedValue",
					"type": "uint256"
				}
			],
			"name": "decreaseAllowance",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getOwner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "addedValue",
					"type": "uint256"
				}
			],
			"name": "increaseAllowance",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "mint",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "recipient",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "sender",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "recipient",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 324,
				"contract": "contracts/BEP20.sol:BEP20Token",
				"label": "_owner",
				"offset": 0,
				"slot": "0",
				"type": "t_address"
			},
			{
				"astId": 449,
				"contract": "contracts/BEP20.sol:BEP20Token",
				"label": "_balances",
				"offset": 0,
				"slot": "1",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 455,
				"contract": "contracts/BEP20.sol:BEP20Token",
				"label": "_allowances",
				"offset": 0,
				"slot": "2",
				"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
			},
			{
				"astId": 457,
				"contract": "contracts/BEP20.sol:BEP20Token",
				"label": "_totalSupply",
				"offset": 0,
				"slot": "3",
				"type": "t_uint256"
			},
			{
				"astId": 459,
				"contract": "contracts/BEP20.sol:BEP20Token",
				"label": "_decimals",
				"offset": 0,
				"slot": "4",
				"type": "t_uint8"
			},
			{
				"astId": 461,
				"contract": "contracts/BEP20.sol:BEP20Token",
				"label": "_symbol",
				"offset": 0,
				"slot": "5",
				"type": "t_string_storage"
			},
			{
				"astId": 463,
				"contract": "contracts/BEP20.sol:BEP20Token",
				"label": "_name",
				"offset": 0,
				"slot": "6",
				"type": "t_string_storage"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => mapping(address => uint256))",
				"numberOfBytes": "32",
				"value": "t_mapping(t_address,t_uint256)"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_string_storage": {
				"encoding": "bytes",
				"label": "string",
				"numberOfBytes": "32"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			},
			"t_uint8": {
				"encoding": "inplace",
				"label": "uint8",
				"numberOfBytes": "1"
			}
		}
	},
	"web3Deploy": "var bep20tokenContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]);\nvar bep20token = bep20tokenContract.deploy({\n     data: '0x60806040523480156200001157600080fd5b506000620000246200023460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600981526020017f4c55434b5942495244000000000000000000000000000000000000000000000081525060069081620001089190620004b6565b506040518060400160405280600981526020017f4c55434b59424952440000000000000000000000000000000000000000000000815250600590816200014f9190620004b6565b506012600460006101000a81548160ff021916908360ff1602179055506a52b7d2dcc80cd2e4000000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600354604051620002269190620005ae565b60405180910390a3620005cb565b600033905090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002be57607f821691505b602082108103620002d457620002d362000276565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200033e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002ff565b6200034a8683620002ff565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000397620003916200038b8462000362565b6200036c565b62000362565b9050919050565b6000819050919050565b620003b38362000376565b620003cb620003c2826200039e565b8484546200030c565b825550505050565b600090565b620003e2620003d3565b620003ef818484620003a8565b505050565b5b8181101562000417576200040b600082620003d8565b600181019050620003f5565b5050565b601f82111562000466576200043081620002da565b6200043b84620002ef565b810160208510156200044b578190505b620004636200045a85620002ef565b830182620003f4565b50505b505050565b600082821c905092915050565b60006200048b600019846008026200046b565b1980831691505092915050565b6000620004a6838362000478565b9150826002028217905092915050565b620004c1826200023c565b67ffffffffffffffff811115620004dd57620004dc62000247565b5b620004e98254620002a5565b620004f68282856200041b565b600060209050601f8311600181146200052e576000841562000519578287015190505b62000525858262000498565b86555062000595565b601f1984166200053e86620002da565b60005b82811015620005685784890151825560018201915060208501945060208101905062000541565b8683101562000588578489015162000584601f89168262000478565b8355505b6001600288020188555050505b505050505050565b620005a88162000362565b82525050565b6000602082019050620005c560008301846200059d565b92915050565b611bb180620005db6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a919061134a565b60405180910390f35b61013d60048036038101906101389190611405565b6103f1565b60405161014a9190611460565b60405180910390f35b61015b61040f565b604051610168919061148a565b60405180910390f35b61018b600480360381019061018691906114a5565b610419565b6040516101989190611460565b60405180910390f35b6101a96104f2565b6040516101b69190611514565b60405180910390f35b6101d960048036038101906101d49190611405565b610509565b6040516101e69190611460565b60405180910390f35b6102096004803603810190610204919061152f565b6105bc565b604051610216919061148a565b60405180910390f35b610227610605565b005b610231610758565b60405161023e919061156b565b60405180910390f35b61024f610767565b60405161025c919061156b565b60405180910390f35b61026d610790565b60405161027a919061134a565b60405180910390f35b61029d60048036038101906102989190611586565b610822565b6040516102aa9190611460565b60405180910390f35b6102cd60048036038101906102c89190611405565b6108d3565b6040516102da9190611460565b60405180910390f35b6102fd60048036038101906102f89190611405565b6109a0565b60405161030a9190611460565b60405180910390f35b61032d600480360381019061032891906115b3565b6109be565b60405161033a919061148a565b60405180910390f35b61035d6004803603810190610358919061152f565b610a45565b005b60606006805461036e90611622565b80601f016020809104026020016040519081016040528092919081815260200182805461039a90611622565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610ae6565b8484610aee565b6001905092915050565b6000600354905090565b6000610426848484610cb7565b6104e784610432610ae6565b6104e285604051806060016040528060288152602001611b0960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f439092919063ffffffff16565b610aee565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610ae6565b846105ad8560026000610527610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa790919063ffffffff16565b610aee565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106919061169f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610762610767565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461079f90611622565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb90611622565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050505050905090565b600061082c610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b09061169f565b60405180910390fd5b6108ca6108c4610ae6565b83611005565b60019050919050565b60006109966108e0610ae6565b8461099185604051806060016040528060258152602001611b57602591396002600061090a610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f439092919063ffffffff16565b610aee565b6001905092915050565b60006109b46109ad610ae6565b8484610cb7565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad19061169f565b60405180910390fd5b610ae38161118e565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5490611731565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc3906117c3565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610caa919061148a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1d90611855565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8c906118e7565b60405180910390fd5b610e0181604051806060016040528060268152602001611b3160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f439092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f36919061148a565b60405180910390a3505050565b6000838311158290610f8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f82919061134a565b60405180910390fd5b5060008385610f9a9190611936565b9050809150509392505050565b6000808284610fb6919061196a565b905083811015610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff2906119ea565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106b90611a56565b60405180910390fd5b61108981600354610fa790919063ffffffff16565b6003819055506110e181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611182919061148a565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f490611ae8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112f45780820151818401526020810190506112d9565b60008484015250505050565b6000601f19601f8301169050919050565b600061131c826112ba565b61132681856112c5565b93506113368185602086016112d6565b61133f81611300565b840191505092915050565b600060208201905081810360008301526113648184611311565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061139c82611371565b9050919050565b6113ac81611391565b81146113b757600080fd5b50565b6000813590506113c9816113a3565b92915050565b6000819050919050565b6113e2816113cf565b81146113ed57600080fd5b50565b6000813590506113ff816113d9565b92915050565b6000806040838503121561141c5761141b61136c565b5b600061142a858286016113ba565b925050602061143b858286016113f0565b9150509250929050565b60008115159050919050565b61145a81611445565b82525050565b60006020820190506114756000830184611451565b92915050565b611484816113cf565b82525050565b600060208201905061149f600083018461147b565b92915050565b6000806000606084860312156114be576114bd61136c565b5b60006114cc868287016113ba565b93505060206114dd868287016113ba565b92505060406114ee868287016113f0565b9150509250925092565b600060ff82169050919050565b61150e816114f8565b82525050565b60006020820190506115296000830184611505565b92915050565b6000602082840312156115455761154461136c565b5b6000611553848285016113ba565b91505092915050565b61156581611391565b82525050565b6000602082019050611580600083018461155c565b92915050565b60006020828403121561159c5761159b61136c565b5b60006115aa848285016113f0565b91505092915050565b600080604083850312156115ca576115c961136c565b5b60006115d8858286016113ba565b92505060206115e9858286016113ba565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061163a57607f821691505b60208210810361164d5761164c6115f3565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116896020836112c5565b915061169482611653565b602082019050919050565b600060208201905081810360008301526116b88161167c565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061171b6024836112c5565b9150611726826116bf565b604082019050919050565b6000602082019050818103600083015261174a8161170e565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006117ad6022836112c5565b91506117b882611751565b604082019050919050565b600060208201905081810360008301526117dc816117a0565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061183f6025836112c5565b915061184a826117e3565b604082019050919050565b6000602082019050818103600083015261186e81611832565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118d16023836112c5565b91506118dc82611875565b604082019050919050565b60006020820190508181036000830152611900816118c4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611941826113cf565b915061194c836113cf565b925082820390508181111561196457611963611907565b5b92915050565b6000611975826113cf565b9150611980836113cf565b925082820190508082111561199857611997611907565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b60006119d4601b836112c5565b91506119df8261199e565b602082019050919050565b60006020820190508181036000830152611a03816119c7565b9050919050565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611a40601f836112c5565b9150611a4b82611a0a565b602082019050919050565b60006020820190508181036000830152611a6f81611a33565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ad26026836112c5565b9150611add82611a76565b604082019050919050565b60006020820190508181036000830152611b0181611ac5565b905091905056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122045e7046c155955b4c69770c4ebb64f2e2b0a26aad28672c59cd4be2b24e58af164736f6c63430008120033', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"39509351": "increaseAllowance(address,uint256)",
		"dd62ed3e": "allowance(address,address)",
		"095ea7b3": "approve(address,uint256)",
		"70a08231": "balanceOf(address)",
		"313ce567": "decimals()",
		"a457c2d7": "decreaseAllowance(address,uint256)",
		"893d20e8": "getOwner()",
		"a0712d68": "mint(uint256)",
		"06fdde03": "name()",
		"8da5cb5b": "owner()",
		"715018a6": "renounceOwnership()",
		"95d89b41": "symbol()",
		"18160ddd": "totalSupply()",
		"a9059cbb": "transfer(address,uint256)",
		"23b872dd": "transferFrom(address,address,uint256)",
		"f2fde38b": "transferOwnership(address)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "1417800",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"allowance(address,address)": "infinite",
			"approve(address,uint256)": "infinite",
			"balanceOf(address)": "2908",
			"decimals()": "2502",
			"decreaseAllowance(address,uint256)": "infinite",
			"getOwner()": "2580",
			"increaseAllowance(address,uint256)": "infinite",
			"mint(uint256)": "infinite",
			"name()": "infinite",
			"owner()": "2567",
			"renounceOwnership()": "30380",
			"symbol()": "infinite",
			"totalSupply()": "2505",
			"transfer(address,uint256)": "infinite",
			"transferFrom(address,address,uint256)": "infinite",
			"transferOwnership(address)": "30754"
		},
		"Internal": {
			"_approve(address,address,uint256)": "infinite",
			"_burn(address,uint256)": "infinite",
			"_burnFrom(address,uint256)": "infinite",
			"_mint(address,uint256)": "infinite",
			"_transfer(address,address,uint256)": "infinite"
		}
	},
	"devdoc": {
		"events": {
			"Approval(address,address,uint256)": {
				"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
			},
			"Transfer(address,address,uint256)": {
				"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
			}
		},
		"kind": "dev",
		"methods": {
			"allowance(address,address)": {
				"details": "See {BEP20-allowance}."
			},
			"approve(address,uint256)": {
				"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
			},
			"balanceOf(address)": {
				"details": "See {BEP20-balanceOf}."
			},
			"decimals()": {
				"details": "Returns the token decimals."
			},
			"decreaseAllowance(address,uint256)": {
				"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
			},
			"getOwner()": {
				"details": "Returns the bep token owner."
			},
			"increaseAllowance(address,uint256)": {
				"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
			},
			"mint(uint256)": {
				"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
			},
			"name()": {
				"details": "Returns the token name."
			},
			"owner()": {
				"details": "Returns the address of the current owner."
			},
			"renounceOwnership()": {
				"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
			},
			"symbol()": {
				"details": "Returns the token symbol."
			},
			"totalSupply()": {
				"details": "See {BEP20-totalSupply}."
			},
			"transfer(address,uint256)": {
				"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
			},
			"transferFrom(address,address,uint256)": {
				"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
			},
			"transferOwnership(address)": {
				"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@_approve_927": {
				"entryPoint": 2798,
				"id": 927,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_mint_835": {
				"entryPoint": 4101,
				"id": 835,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_msgSender_113": {
				"entryPoint": 2790,
				"id": 113,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_transferOwnership_435": {
				"entryPoint": 4494,
				"id": 435,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_transfer_789": {
				"entryPoint": 3255,
				"id": 789,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@add_152": {
				"entryPoint": 4007,
				"id": 152,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@allowance_596": {
				"entryPoint": 2494,
				"id": 596,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@approve_616": {
				"entryPoint": 1009,
				"id": 616,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@balanceOf_559": {
				"entryPoint": 1468,
				"id": 559,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@decimals_519": {
				"entryPoint": 1266,
				"id": 519,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@decreaseAllowance_710": {
				"entryPoint": 2259,
				"id": 710,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@getOwner_510": {
				"entryPoint": 1880,
				"id": 510,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@increaseAllowance_681": {
				"entryPoint": 1289,
				"id": 681,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@mint_729": {
				"entryPoint": 2082,
				"id": 729,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@name_537": {
				"entryPoint": 863,
				"id": 537,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@owner_361": {
				"entryPoint": 1895,
				"id": 361,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@renounceOwnership_396": {
				"entryPoint": 1541,
				"id": 396,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@sub_197": {
				"entryPoint": 3907,
				"id": 197,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@symbol_528": {
				"entryPoint": 1936,
				"id": 528,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@totalSupply_546": {
				"entryPoint": 1039,
				"id": 546,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@transferFrom_653": {
				"entryPoint": 1049,
				"id": 653,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@transferOwnership_409": {
				"entryPoint": 2629,
				"id": 409,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@transfer_579": {
				"entryPoint": 2464,
				"id": 579,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_address": {
				"entryPoint": 5050,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_uint256": {
				"entryPoint": 5104,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 5423,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_address": {
				"entryPoint": 5555,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_addresst_uint256": {
				"entryPoint": 5285,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"abi_decode_tuple_t_addresst_uint256": {
				"entryPoint": 5125,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_uint256": {
				"entryPoint": 5510,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_address_to_t_address_fromStack": {
				"entryPoint": 5468,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_bool_to_t_bool_fromStack": {
				"entryPoint": 5201,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4881,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6194,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 5902,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6853,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6599,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6707,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 5756,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6340,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6048,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 5243,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_uint8_to_t_uint8_fromStack": {
				"entryPoint": 5381,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": 5483,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": 5216,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4938,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6229,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 5937,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6888,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6634,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6742,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 5791,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6375,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6083,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 5258,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
				"entryPoint": 5396,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"array_length_t_string_memory_ptr": {
				"entryPoint": 4794,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 4805,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 6506,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_sub_t_uint256": {
				"entryPoint": 6454,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 5009,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_bool": {
				"entryPoint": 5189,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 4977,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 5071,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint8": {
				"entryPoint": 5368,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"copy_memory_to_memory_with_cleanup": {
				"entryPoint": 4822,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"extract_byte_array_length": {
				"entryPoint": 5666,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 6407,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x22": {
				"entryPoint": 5619,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 4972,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"round_up_to_mul_of_32": {
				"entryPoint": 4864,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57": {
				"entryPoint": 6115,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4": {
				"entryPoint": 5823,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
				"entryPoint": 6774,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
				"entryPoint": 6558,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3": {
				"entryPoint": 6666,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
				"entryPoint": 5715,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2": {
				"entryPoint": 6261,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5": {
				"entryPoint": 5969,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_address": {
				"entryPoint": 5027,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_uint256": {
				"entryPoint": 5081,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nodeType": "YulBlock",
					"src": "0:15526:1",
					"statements": [
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "66:40:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "77:22:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "93:5:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "87:5:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "87:12:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "77:6:1"
											}
										]
									}
								]
							},
							"name": "array_length_t_string_memory_ptr",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "49:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nodeType": "YulTypedName",
									"src": "59:6:1",
									"type": ""
								}
							],
							"src": "7:99:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "208:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "225:3:1"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "230:6:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "218:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "218:19:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "218:19:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "246:29:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "265:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "270:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "261:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "261:14:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nodeType": "YulIdentifier",
												"src": "246:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "180:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nodeType": "YulTypedName",
									"src": "185:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nodeType": "YulTypedName",
									"src": "196:11:1",
									"type": ""
								}
							],
							"src": "112:169:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "349:184:1",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "359:10:1",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "368:1:1",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "i",
												"nodeType": "YulTypedName",
												"src": "363:1:1",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "428:63:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "453:3:1"
																	},
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "458:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "449:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "449:11:1"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "472:3:1"
																			},
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "477:1:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "468:11:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "462:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "462:18:1"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "442:6:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "442:39:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "442:39:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nodeType": "YulIdentifier",
													"src": "389:1:1"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "392:6:1"
												}
											],
											"functionName": {
												"name": "lt",
												"nodeType": "YulIdentifier",
												"src": "386:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "386:13:1"
										},
										"nodeType": "YulForLoop",
										"post": {
											"nodeType": "YulBlock",
											"src": "400:19:1",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "402:15:1",
													"value": {
														"arguments": [
															{
																"name": "i",
																"nodeType": "YulIdentifier",
																"src": "411:1:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "414:2:1",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "407:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "407:10:1"
													},
													"variableNames": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "402:1:1"
														}
													]
												}
											]
										},
										"pre": {
											"nodeType": "YulBlock",
											"src": "382:3:1",
											"statements": []
										},
										"src": "378:113:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dst",
															"nodeType": "YulIdentifier",
															"src": "511:3:1"
														},
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "516:6:1"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "507:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "507:16:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "525:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "500:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "500:27:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "500:27:1"
									}
								]
							},
							"name": "copy_memory_to_memory_with_cleanup",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "src",
									"nodeType": "YulTypedName",
									"src": "331:3:1",
									"type": ""
								},
								{
									"name": "dst",
									"nodeType": "YulTypedName",
									"src": "336:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nodeType": "YulTypedName",
									"src": "341:6:1",
									"type": ""
								}
							],
							"src": "287:246:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "587:54:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "597:38:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "615:5:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "622:2:1",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "611:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "611:14:1"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "631:2:1",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "not",
														"nodeType": "YulIdentifier",
														"src": "627:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "627:7:1"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "607:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "607:28:1"
										},
										"variableNames": [
											{
												"name": "result",
												"nodeType": "YulIdentifier",
												"src": "597:6:1"
											}
										]
									}
								]
							},
							"name": "round_up_to_mul_of_32",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "570:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nodeType": "YulTypedName",
									"src": "580:6:1",
									"type": ""
								}
							],
							"src": "539:102:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "739:285:1",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "749:53:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "796:5:1"
												}
											],
											"functionName": {
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulIdentifier",
												"src": "763:32:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "763:39:1"
										},
										"variables": [
											{
												"name": "length",
												"nodeType": "YulTypedName",
												"src": "753:6:1",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "811:78:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "877:3:1"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "882:6:1"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "818:58:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "818:71:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "811:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "937:5:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "944:4:1",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "933:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "933:16:1"
												},
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "951:3:1"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "956:6:1"
												}
											],
											"functionName": {
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulIdentifier",
												"src": "898:34:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "898:65:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "898:65:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "972:46:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "983:3:1"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "1010:6:1"
														}
													],
													"functionName": {
														"name": "round_up_to_mul_of_32",
														"nodeType": "YulIdentifier",
														"src": "988:21:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "988:29:1"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "979:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "979:39:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "972:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "720:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "727:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "735:3:1",
									"type": ""
								}
							],
							"src": "647:377:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1148:195:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1158:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1170:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1181:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "1166:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1166:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1158:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1205:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1216:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1201:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "1201:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "1224:4:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1230:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "1220:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "1220:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1194:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1194:47:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1194:47:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "1250:86:1",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1322:6:1"
												},
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1331:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "1258:63:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1258:78:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1250:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1120:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1132:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "1143:4:1",
									"type": ""
								}
							],
							"src": "1030:313:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1389:35:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1399:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1415:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "1409:5:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1409:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nodeType": "YulIdentifier",
												"src": "1399:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nodeType": "YulTypedName",
									"src": "1382:6:1",
									"type": ""
								}
							],
							"src": "1349:75:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1519:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1536:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1539:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "1529:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1529:12:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1529:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nodeType": "YulFunctionDefinition",
							"src": "1430:117:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1642:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1659:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1662:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "1652:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1652:12:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1652:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nodeType": "YulFunctionDefinition",
							"src": "1553:117:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1721:81:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1731:65:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1746:5:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1753:42:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "1742:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1742:54:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nodeType": "YulIdentifier",
												"src": "1731:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "1703:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nodeType": "YulTypedName",
									"src": "1713:7:1",
									"type": ""
								}
							],
							"src": "1676:126:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1853:51:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1863:35:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1892:5:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nodeType": "YulIdentifier",
												"src": "1874:17:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1874:24:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nodeType": "YulIdentifier",
												"src": "1863:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "1835:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nodeType": "YulTypedName",
									"src": "1845:7:1",
									"type": ""
								}
							],
							"src": "1808:96:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1953:79:1",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2010:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2019:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2022:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2012:6:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "2012:12:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2012:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "1976:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2001:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nodeType": "YulIdentifier",
																"src": "1983:17:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "1983:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nodeType": "YulIdentifier",
														"src": "1973:2:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "1973:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "1966:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "1966:43:1"
										},
										"nodeType": "YulIf",
										"src": "1963:63:1"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "1946:5:1",
									"type": ""
								}
							],
							"src": "1910:122:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2090:87:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "2100:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "2122:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "2109:12:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2109:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "2100:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "2165:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nodeType": "YulIdentifier",
												"src": "2138:26:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2138:33:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2138:33:1"
									}
								]
							},
							"name": "abi_decode_t_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nodeType": "YulTypedName",
									"src": "2068:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "2076:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "2084:5:1",
									"type": ""
								}
							],
							"src": "2038:139:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2228:32:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "2238:16:1",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "2249:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nodeType": "YulIdentifier",
												"src": "2238:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "2210:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nodeType": "YulTypedName",
									"src": "2220:7:1",
									"type": ""
								}
							],
							"src": "2183:77:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2309:79:1",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2366:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2375:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2378:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2368:6:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "2368:12:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2368:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "2332:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2357:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nodeType": "YulIdentifier",
																"src": "2339:17:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "2339:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nodeType": "YulIdentifier",
														"src": "2329:2:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "2329:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "2322:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2322:43:1"
										},
										"nodeType": "YulIf",
										"src": "2319:63:1"
									}
								]
							},
							"name": "validator_revert_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "2302:5:1",
									"type": ""
								}
							],
							"src": "2266:122:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2446:87:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "2456:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "2478:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "2465:12:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2465:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "2456:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "2521:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nodeType": "YulIdentifier",
												"src": "2494:26:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2494:33:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2494:33:1"
									}
								]
							},
							"name": "abi_decode_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nodeType": "YulTypedName",
									"src": "2424:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "2432:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "2440:5:1",
									"type": ""
								}
							],
							"src": "2394:139:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2622:391:1",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2668:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nodeType": "YulIdentifier",
															"src": "2670:77:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "2670:79:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2670:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "2643:7:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2652:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "2639:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "2639:23:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2664:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "2635:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "2635:32:1"
										},
										"nodeType": "YulIf",
										"src": "2632:119:1"
									},
									{
										"nodeType": "YulBlock",
										"src": "2761:117:1",
										"statements": [
											{
												"nodeType": "YulVariableDeclaration",
												"src": "2776:15:1",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2790:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2780:6:1",
														"type": ""
													}
												]
											},
											{
												"nodeType": "YulAssignment",
												"src": "2805:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "2840:9:1"
																},
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2836:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "2836:22:1"
														},
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "2860:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nodeType": "YulIdentifier",
														"src": "2815:20:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "2815:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2805:6:1"
													}
												]
											}
										]
									},
									{
										"nodeType": "YulBlock",
										"src": "2888:118:1",
										"statements": [
											{
												"nodeType": "YulVariableDeclaration",
												"src": "2903:16:1",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2917:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2907:6:1",
														"type": ""
													}
												]
											},
											{
												"nodeType": "YulAssignment",
												"src": "2933:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "2968:9:1"
																},
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "2979:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2964:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "2964:22:1"
														},
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "2988:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nodeType": "YulIdentifier",
														"src": "2943:20:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "2943:53:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "2933:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "2584:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "2595:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "2607:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "2615:6:1",
									"type": ""
								}
							],
							"src": "2539:474:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3061:48:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "3071:32:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "3096:5:1"
														}
													],
													"functionName": {
														"name": "iszero",
														"nodeType": "YulIdentifier",
														"src": "3089:6:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "3089:13:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "3082:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3082:21:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nodeType": "YulIdentifier",
												"src": "3071:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_bool",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "3043:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nodeType": "YulTypedName",
									"src": "3053:7:1",
									"type": ""
								}
							],
							"src": "3019:90:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3174:50:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "3191:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "3211:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_bool",
														"nodeType": "YulIdentifier",
														"src": "3196:14:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "3196:21:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3184:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3184:34:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3184:34:1"
									}
								]
							},
							"name": "abi_encode_t_bool_to_t_bool_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "3162:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "3169:3:1",
									"type": ""
								}
							],
							"src": "3115:109:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3322:118:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "3332:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3344:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3355:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "3340:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3340:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "3332:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "3406:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3419:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3430:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3415:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "3415:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulIdentifier",
												"src": "3368:37:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3368:65:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3368:65:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "3294:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "3306:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "3317:4:1",
									"type": ""
								}
							],
							"src": "3230:210:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3511:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "3528:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "3551:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nodeType": "YulIdentifier",
														"src": "3533:17:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "3533:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3521:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3521:37:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3521:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "3499:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "3506:3:1",
									"type": ""
								}
							],
							"src": "3446:118:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3668:124:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "3678:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3690:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3701:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "3686:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3686:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "3678:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "3758:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3771:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3782:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3767:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "3767:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulIdentifier",
												"src": "3714:43:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3714:71:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3714:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "3640:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "3652:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "3663:4:1",
									"type": ""
								}
							],
							"src": "3570:222:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3898:519:1",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "3944:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nodeType": "YulIdentifier",
															"src": "3946:77:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "3946:79:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3946:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "3919:7:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3928:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "3915:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "3915:23:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3940:2:1",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "3911:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "3911:32:1"
										},
										"nodeType": "YulIf",
										"src": "3908:119:1"
									},
									{
										"nodeType": "YulBlock",
										"src": "4037:117:1",
										"statements": [
											{
												"nodeType": "YulVariableDeclaration",
												"src": "4052:15:1",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4066:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4056:6:1",
														"type": ""
													}
												]
											},
											{
												"nodeType": "YulAssignment",
												"src": "4081:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "4116:9:1"
																},
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "4127:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "4112:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "4112:22:1"
														},
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "4136:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nodeType": "YulIdentifier",
														"src": "4091:20:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "4091:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "4081:6:1"
													}
												]
											}
										]
									},
									{
										"nodeType": "YulBlock",
										"src": "4164:118:1",
										"statements": [
											{
												"nodeType": "YulVariableDeclaration",
												"src": "4179:16:1",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4193:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4183:6:1",
														"type": ""
													}
												]
											},
											{
												"nodeType": "YulAssignment",
												"src": "4209:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "4244:9:1"
																},
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "4255:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "4240:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "4240:22:1"
														},
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "4264:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nodeType": "YulIdentifier",
														"src": "4219:20:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "4219:53:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "4209:6:1"
													}
												]
											}
										]
									},
									{
										"nodeType": "YulBlock",
										"src": "4292:118:1",
										"statements": [
											{
												"nodeType": "YulVariableDeclaration",
												"src": "4307:16:1",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4321:2:1",
													"type": "",
													"value": "64"
												},
												"variables": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4311:6:1",
														"type": ""
													}
												]
											},
											{
												"nodeType": "YulAssignment",
												"src": "4337:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "4372:9:1"
																},
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "4383:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "4368:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "4368:22:1"
														},
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "4392:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nodeType": "YulIdentifier",
														"src": "4347:20:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "4347:53:1"
												},
												"variableNames": [
													{
														"name": "value2",
														"nodeType": "YulIdentifier",
														"src": "4337:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_addresst_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "3852:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "3863:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "3875:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "3883:6:1",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "3891:6:1",
									"type": ""
								}
							],
							"src": "3798:619:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4466:43:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "4476:27:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "4491:5:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4498:4:1",
													"type": "",
													"value": "0xff"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "4487:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "4487:16:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nodeType": "YulIdentifier",
												"src": "4476:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "4448:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nodeType": "YulTypedName",
									"src": "4458:7:1",
									"type": ""
								}
							],
							"src": "4423:86:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4576:51:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "4593:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "4614:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint8",
														"nodeType": "YulIdentifier",
														"src": "4598:15:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "4598:22:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4586:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "4586:35:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4586:35:1"
									}
								]
							},
							"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "4564:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "4571:3:1",
									"type": ""
								}
							],
							"src": "4515:112:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4727:120:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "4737:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4749:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4760:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "4745:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "4745:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4737:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "4813:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4826:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4837:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4822:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "4822:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulIdentifier",
												"src": "4773:39:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "4773:67:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4773:67:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "4699:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "4711:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "4722:4:1",
									"type": ""
								}
							],
							"src": "4633:214:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4919:263:1",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "4965:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nodeType": "YulIdentifier",
															"src": "4967:77:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "4967:79:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "4967:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "4940:7:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4949:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "4936:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "4936:23:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4961:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "4932:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "4932:32:1"
										},
										"nodeType": "YulIf",
										"src": "4929:119:1"
									},
									{
										"nodeType": "YulBlock",
										"src": "5058:117:1",
										"statements": [
											{
												"nodeType": "YulVariableDeclaration",
												"src": "5073:15:1",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5087:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5077:6:1",
														"type": ""
													}
												]
											},
											{
												"nodeType": "YulAssignment",
												"src": "5102:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "5137:9:1"
																},
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "5133:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "5133:22:1"
														},
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "5157:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nodeType": "YulIdentifier",
														"src": "5112:20:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "5112:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "5102:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "4889:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "4900:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "4912:6:1",
									"type": ""
								}
							],
							"src": "4853:329:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5253:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "5270:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "5293:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_address",
														"nodeType": "YulIdentifier",
														"src": "5275:17:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "5275:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5263:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "5263:37:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5263:37:1"
									}
								]
							},
							"name": "abi_encode_t_address_to_t_address_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "5241:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "5248:3:1",
									"type": ""
								}
							],
							"src": "5188:118:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5410:124:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "5420:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5432:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5443:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "5428:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "5428:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5420:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "5500:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5513:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5524:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5509:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "5509:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulIdentifier",
												"src": "5456:43:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "5456:71:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5456:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5382:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "5394:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "5405:4:1",
									"type": ""
								}
							],
							"src": "5312:222:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5606:263:1",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "5652:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nodeType": "YulIdentifier",
															"src": "5654:77:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "5654:79:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "5654:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "5627:7:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5636:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "5623:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "5623:23:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5648:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "5619:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "5619:32:1"
										},
										"nodeType": "YulIf",
										"src": "5616:119:1"
									},
									{
										"nodeType": "YulBlock",
										"src": "5745:117:1",
										"statements": [
											{
												"nodeType": "YulVariableDeclaration",
												"src": "5760:15:1",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5774:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5764:6:1",
														"type": ""
													}
												]
											},
											{
												"nodeType": "YulAssignment",
												"src": "5789:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "5824:9:1"
																},
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "5835:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "5820:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "5820:22:1"
														},
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "5844:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nodeType": "YulIdentifier",
														"src": "5799:20:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "5799:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "5789:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5576:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "5587:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "5599:6:1",
									"type": ""
								}
							],
							"src": "5540:329:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5958:391:1",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "6004:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nodeType": "YulIdentifier",
															"src": "6006:77:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "6006:79:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6006:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "5979:7:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5988:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "5975:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "5975:23:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6000:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "5971:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "5971:32:1"
										},
										"nodeType": "YulIf",
										"src": "5968:119:1"
									},
									{
										"nodeType": "YulBlock",
										"src": "6097:117:1",
										"statements": [
											{
												"nodeType": "YulVariableDeclaration",
												"src": "6112:15:1",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6126:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6116:6:1",
														"type": ""
													}
												]
											},
											{
												"nodeType": "YulAssignment",
												"src": "6141:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "6176:9:1"
																},
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "6187:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "6172:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "6172:22:1"
														},
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "6196:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nodeType": "YulIdentifier",
														"src": "6151:20:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "6151:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "6141:6:1"
													}
												]
											}
										]
									},
									{
										"nodeType": "YulBlock",
										"src": "6224:118:1",
										"statements": [
											{
												"nodeType": "YulVariableDeclaration",
												"src": "6239:16:1",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6253:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6243:6:1",
														"type": ""
													}
												]
											},
											{
												"nodeType": "YulAssignment",
												"src": "6269:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "6304:9:1"
																},
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "6300:3:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "6300:22:1"
														},
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "6324:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nodeType": "YulIdentifier",
														"src": "6279:20:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "6279:53:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "6269:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5920:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "5931:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "5943:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "5951:6:1",
									"type": ""
								}
							],
							"src": "5875:474:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "6383:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6400:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6403:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6393:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "6393:88:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6393:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6497:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6500:4:1",
													"type": "",
													"value": "0x22"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6490:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "6490:15:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6490:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6521:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6524:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "6514:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "6514:15:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6514:15:1"
									}
								]
							},
							"name": "panic_error_0x22",
							"nodeType": "YulFunctionDefinition",
							"src": "6355:180:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "6592:269:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "6602:22:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "6616:4:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6622:1:1",
													"type": "",
													"value": "2"
												}
											],
											"functionName": {
												"name": "div",
												"nodeType": "YulIdentifier",
												"src": "6612:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "6612:12:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "6602:6:1"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "6633:38:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "6663:4:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6669:1:1",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "6659:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "6659:12:1"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulTypedName",
												"src": "6637:18:1",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "6710:51:1",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "6724:27:1",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "6738:6:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6746:4:1",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "6734:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "6734:17:1"
													},
													"variableNames": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "6724:6:1"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "6690:18:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "6683:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "6683:26:1"
										},
										"nodeType": "YulIf",
										"src": "6680:81:1"
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "6813:42:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x22",
															"nodeType": "YulIdentifier",
															"src": "6827:16:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "6827:18:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6827:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "6777:18:1"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "6800:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6808:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nodeType": "YulIdentifier",
														"src": "6797:2:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "6797:14:1"
												}
											],
											"functionName": {
												"name": "eq",
												"nodeType": "YulIdentifier",
												"src": "6774:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "6774:38:1"
										},
										"nodeType": "YulIf",
										"src": "6771:84:1"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "6576:4:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nodeType": "YulTypedName",
									"src": "6585:6:1",
									"type": ""
								}
							],
							"src": "6541:320:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "6973:76:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "6995:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7003:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6991:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "6991:14:1"
												},
												{
													"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "7007:34:1",
													"type": "",
													"value": "Ownable: caller is not the owner"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6984:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "6984:58:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6984:58:1"
									}
								]
							},
							"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nodeType": "YulTypedName",
									"src": "6965:6:1",
									"type": ""
								}
							],
							"src": "6867:182:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "7201:220:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "7211:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "7277:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7282:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "7218:58:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "7218:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "7211:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "7383:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulIdentifier",
												"src": "7294:88:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "7294:93:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7294:93:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "7396:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "7407:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7412:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "7403:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "7403:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "7396:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "7189:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "7197:3:1",
									"type": ""
								}
							],
							"src": "7055:366:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "7598:248:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "7608:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "7620:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7631:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "7616:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "7616:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "7608:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7655:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7666:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7651:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "7651:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "7674:4:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7680:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "7670:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "7670:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7644:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "7644:47:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7644:47:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "7700:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "7834:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "7708:124:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "7708:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "7700:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "7578:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "7593:4:1",
									"type": ""
								}
							],
							"src": "7427:419:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "7958:117:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "7980:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7988:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7976:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "7976:14:1"
												},
												{
													"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "7992:34:1",
													"type": "",
													"value": "BEP20: approve from the zero add"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7969:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "7969:58:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7969:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "8048:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "8056:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "8044:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "8044:15:1"
												},
												{
													"hexValue": "72657373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "8061:6:1",
													"type": "",
													"value": "ress"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "8037:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "8037:31:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "8037:31:1"
									}
								]
							},
							"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nodeType": "YulTypedName",
									"src": "7950:6:1",
									"type": ""
								}
							],
							"src": "7852:223:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "8227:220:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "8237:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "8303:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "8308:2:1",
													"type": "",
													"value": "36"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "8244:58:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "8244:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "8237:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "8409:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulIdentifier",
												"src": "8320:88:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "8320:93:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "8320:93:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "8422:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "8433:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "8438:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "8429:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "8429:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "8422:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "8215:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "8223:3:1",
									"type": ""
								}
							],
							"src": "8081:366:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "8624:248:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "8634:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "8646:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "8657:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "8642:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "8642:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "8634:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "8681:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "8692:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "8677:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "8677:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "8700:4:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "8706:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "8696:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "8696:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "8670:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "8670:47:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "8670:47:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "8726:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "8860:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "8734:124:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "8734:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "8726:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "8604:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "8619:4:1",
									"type": ""
								}
							],
							"src": "8453:419:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "8984:115:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "9006:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9014:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "9002:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "9002:14:1"
												},
												{
													"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "9018:34:1",
													"type": "",
													"value": "BEP20: approve to the zero addre"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "8995:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "8995:58:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "8995:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "9074:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9082:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "9070:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "9070:15:1"
												},
												{
													"hexValue": "7373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "9087:4:1",
													"type": "",
													"value": "ss"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "9063:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "9063:29:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "9063:29:1"
									}
								]
							},
							"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nodeType": "YulTypedName",
									"src": "8976:6:1",
									"type": ""
								}
							],
							"src": "8878:221:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "9251:220:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "9261:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "9327:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "9332:2:1",
													"type": "",
													"value": "34"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "9268:58:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "9268:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "9261:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "9433:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulIdentifier",
												"src": "9344:88:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "9344:93:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "9344:93:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "9446:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "9457:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "9462:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "9453:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "9453:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "9446:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "9239:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "9247:3:1",
									"type": ""
								}
							],
							"src": "9105:366:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "9648:248:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "9658:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "9670:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "9681:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "9666:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "9666:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "9658:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "9705:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9716:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "9701:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "9701:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "9724:4:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "9730:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "9720:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "9720:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "9694:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "9694:47:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "9694:47:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "9750:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "9884:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "9758:124:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "9758:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "9750:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "9628:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "9643:4:1",
									"type": ""
								}
							],
							"src": "9477:419:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "10008:118:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "10030:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10038:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "10026:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "10026:14:1"
												},
												{
													"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "10042:34:1",
													"type": "",
													"value": "BEP20: transfer from the zero ad"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10019:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "10019:58:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10019:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "10098:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10106:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "10094:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "10094:15:1"
												},
												{
													"hexValue": "6472657373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "10111:7:1",
													"type": "",
													"value": "dress"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10087:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "10087:32:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10087:32:1"
									}
								]
							},
							"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nodeType": "YulTypedName",
									"src": "10000:6:1",
									"type": ""
								}
							],
							"src": "9902:224:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "10278:220:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "10288:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "10354:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "10359:2:1",
													"type": "",
													"value": "37"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "10295:58:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "10295:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "10288:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "10460:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulIdentifier",
												"src": "10371:88:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "10371:93:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10371:93:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "10473:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "10484:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "10489:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "10480:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "10480:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "10473:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "10266:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "10274:3:1",
									"type": ""
								}
							],
							"src": "10132:366:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "10675:248:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "10685:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "10697:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "10708:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "10693:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "10693:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "10685:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "10732:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10743:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "10728:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "10728:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "10751:4:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "10757:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "10747:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "10747:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10721:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "10721:47:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10721:47:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "10777:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "10911:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "10785:124:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "10785:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "10777:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "10655:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "10670:4:1",
									"type": ""
								}
							],
							"src": "10504:419:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "11035:116:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "11057:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "11065:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "11053:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "11053:14:1"
												},
												{
													"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "11069:34:1",
													"type": "",
													"value": "BEP20: transfer to the zero addr"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "11046:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "11046:58:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "11046:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "11125:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "11133:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "11121:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "11121:15:1"
												},
												{
													"hexValue": "657373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "11138:5:1",
													"type": "",
													"value": "ess"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "11114:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "11114:30:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "11114:30:1"
									}
								]
							},
							"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nodeType": "YulTypedName",
									"src": "11027:6:1",
									"type": ""
								}
							],
							"src": "10929:222:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "11303:220:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "11313:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "11379:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "11384:2:1",
													"type": "",
													"value": "35"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "11320:58:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "11320:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "11313:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "11485:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulIdentifier",
												"src": "11396:88:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "11396:93:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "11396:93:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "11498:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "11509:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "11514:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "11505:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "11505:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "11498:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "11291:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "11299:3:1",
									"type": ""
								}
							],
							"src": "11157:366:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "11700:248:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "11710:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "11722:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "11733:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "11718:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "11718:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "11710:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "11757:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "11768:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "11753:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "11753:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "11776:4:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "11782:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "11772:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "11772:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "11746:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "11746:47:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "11746:47:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "11802:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "11936:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "11810:124:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "11810:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "11802:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "11680:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "11695:4:1",
									"type": ""
								}
							],
							"src": "11529:419:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "11982:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "11999:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12002:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "11992:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "11992:88:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "11992:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12096:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12099:4:1",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12089:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12089:15:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12089:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12120:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12123:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "12113:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12113:15:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12113:15:1"
									}
								]
							},
							"name": "panic_error_0x11",
							"nodeType": "YulFunctionDefinition",
							"src": "11954:180:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "12185:149:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "12195:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "12218:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nodeType": "YulIdentifier",
												"src": "12200:17:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12200:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "12195:1:1"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "12229:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "12252:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nodeType": "YulIdentifier",
												"src": "12234:17:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12234:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "12229:1:1"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "12263:17:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "12275:1:1"
												},
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "12278:1:1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "12271:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12271:9:1"
										},
										"variableNames": [
											{
												"name": "diff",
												"nodeType": "YulIdentifier",
												"src": "12263:4:1"
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "12305:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nodeType": "YulIdentifier",
															"src": "12307:16:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "12307:18:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "12307:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
													"src": "12296:4:1"
												},
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "12302:1:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "12293:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12293:11:1"
										},
										"nodeType": "YulIf",
										"src": "12290:37:1"
									}
								]
							},
							"name": "checked_sub_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nodeType": "YulTypedName",
									"src": "12171:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nodeType": "YulTypedName",
									"src": "12174:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "diff",
									"nodeType": "YulTypedName",
									"src": "12180:4:1",
									"type": ""
								}
							],
							"src": "12140:194:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "12384:147:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "12394:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "12417:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nodeType": "YulIdentifier",
												"src": "12399:17:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12399:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "12394:1:1"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "12428:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "12451:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nodeType": "YulIdentifier",
												"src": "12433:17:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12433:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "12428:1:1"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "12462:16:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "12473:1:1"
												},
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "12476:1:1"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "12469:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12469:9:1"
										},
										"variableNames": [
											{
												"name": "sum",
												"nodeType": "YulIdentifier",
												"src": "12462:3:1"
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "12502:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nodeType": "YulIdentifier",
															"src": "12504:16:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "12504:18:1"
													},
													"nodeType": "YulExpressionStatement",
													"src": "12504:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "12494:1:1"
												},
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "12497:3:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "12491:2:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12491:10:1"
										},
										"nodeType": "YulIf",
										"src": "12488:36:1"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nodeType": "YulTypedName",
									"src": "12371:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nodeType": "YulTypedName",
									"src": "12374:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nodeType": "YulTypedName",
									"src": "12380:3:1",
									"type": ""
								}
							],
							"src": "12340:191:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "12643:71:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "12665:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "12673:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "12661:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "12661:14:1"
												},
												{
													"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "12677:29:1",
													"type": "",
													"value": "SafeMath: addition overflow"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12654:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12654:53:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12654:53:1"
									}
								]
							},
							"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nodeType": "YulTypedName",
									"src": "12635:6:1",
									"type": ""
								}
							],
							"src": "12537:177:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "12866:220:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "12876:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "12942:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12947:2:1",
													"type": "",
													"value": "27"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "12883:58:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12883:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "12876:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "13048:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulIdentifier",
												"src": "12959:88:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "12959:93:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12959:93:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "13061:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "13072:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13077:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "13068:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "13068:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "13061:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "12854:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "12862:3:1",
									"type": ""
								}
							],
							"src": "12720:366:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "13263:248:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "13273:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "13285:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13296:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "13281:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "13281:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "13273:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "13320:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13331:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "13316:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "13316:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "13339:4:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "13345:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "13335:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "13335:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13309:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "13309:47:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13309:47:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "13365:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "13499:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "13373:124:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "13373:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "13365:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "13243:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "13258:4:1",
									"type": ""
								}
							],
							"src": "13092:419:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "13623:75:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "13645:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13653:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "13641:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "13641:14:1"
												},
												{
													"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "13657:33:1",
													"type": "",
													"value": "BEP20: mint to the zero address"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13634:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "13634:57:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13634:57:1"
									}
								]
							},
							"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nodeType": "YulTypedName",
									"src": "13615:6:1",
									"type": ""
								}
							],
							"src": "13517:181:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "13850:220:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "13860:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "13926:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13931:2:1",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "13867:58:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "13867:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "13860:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "14032:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
												"nodeType": "YulIdentifier",
												"src": "13943:88:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "13943:93:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13943:93:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "14045:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "14056:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "14061:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "14052:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "14052:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "14045:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "13838:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "13846:3:1",
									"type": ""
								}
							],
							"src": "13704:366:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "14247:248:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "14257:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "14269:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "14280:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "14265:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "14265:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "14257:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "14304:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "14315:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "14300:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "14300:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "14323:4:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "14329:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "14319:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "14319:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14293:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "14293:47:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14293:47:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "14349:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "14483:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "14357:124:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "14357:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "14349:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "14227:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "14242:4:1",
									"type": ""
								}
							],
							"src": "14076:419:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "14607:119:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "14629:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "14637:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "14625:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "14625:14:1"
												},
												{
													"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "14641:34:1",
													"type": "",
													"value": "Ownable: new owner is the zero a"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14618:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "14618:58:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14618:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "14697:6:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "14705:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "14693:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "14693:15:1"
												},
												{
													"hexValue": "646472657373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "14710:8:1",
													"type": "",
													"value": "ddress"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14686:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "14686:33:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14686:33:1"
									}
								]
							},
							"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nodeType": "YulTypedName",
									"src": "14599:6:1",
									"type": ""
								}
							],
							"src": "14501:225:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "14878:220:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "14888:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "14954:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "14959:2:1",
													"type": "",
													"value": "38"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "14895:58:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "14895:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "14888:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "15060:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulIdentifier",
												"src": "14971:88:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "14971:93:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14971:93:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "15073:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "15084:3:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15089:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "15080:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "15080:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "15073:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nodeType": "YulTypedName",
									"src": "14866:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "14874:3:1",
									"type": ""
								}
							],
							"src": "14732:366:1"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "15275:248:1",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "15285:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "15297:9:1"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15308:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "15293:3:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "15293:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "15285:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "15332:9:1"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "15343:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "15328:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "15328:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "15351:4:1"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "15357:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "15347:3:1"
													},
													"nodeType": "YulFunctionCall",
													"src": "15347:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "15321:6:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "15321:47:1"
										},
										"nodeType": "YulExpressionStatement",
										"src": "15321:47:1"
									},
									{
										"nodeType": "YulAssignment",
										"src": "15377:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "15511:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulIdentifier",
												"src": "15385:124:1"
											},
											"nodeType": "YulFunctionCall",
											"src": "15385:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "15377:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "15255:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "15270:4:1",
									"type": ""
								}
							],
							"src": "15104:419:1"
						}
					]
				},
				"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a919061134a565b60405180910390f35b61013d60048036038101906101389190611405565b6103f1565b60405161014a9190611460565b60405180910390f35b61015b61040f565b604051610168919061148a565b60405180910390f35b61018b600480360381019061018691906114a5565b610419565b6040516101989190611460565b60405180910390f35b6101a96104f2565b6040516101b69190611514565b60405180910390f35b6101d960048036038101906101d49190611405565b610509565b6040516101e69190611460565b60405180910390f35b6102096004803603810190610204919061152f565b6105bc565b604051610216919061148a565b60405180910390f35b610227610605565b005b610231610758565b60405161023e919061156b565b60405180910390f35b61024f610767565b60405161025c919061156b565b60405180910390f35b61026d610790565b60405161027a919061134a565b60405180910390f35b61029d60048036038101906102989190611586565b610822565b6040516102aa9190611460565b60405180910390f35b6102cd60048036038101906102c89190611405565b6108d3565b6040516102da9190611460565b60405180910390f35b6102fd60048036038101906102f89190611405565b6109a0565b60405161030a9190611460565b60405180910390f35b61032d600480360381019061032891906115b3565b6109be565b60405161033a919061148a565b60405180910390f35b61035d6004803603810190610358919061152f565b610a45565b005b60606006805461036e90611622565b80601f016020809104026020016040519081016040528092919081815260200182805461039a90611622565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610ae6565b8484610aee565b6001905092915050565b6000600354905090565b6000610426848484610cb7565b6104e784610432610ae6565b6104e285604051806060016040528060288152602001611b0960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f439092919063ffffffff16565b610aee565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610ae6565b846105ad8560026000610527610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa790919063ffffffff16565b610aee565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106919061169f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610762610767565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461079f90611622565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb90611622565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050505050905090565b600061082c610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b09061169f565b60405180910390fd5b6108ca6108c4610ae6565b83611005565b60019050919050565b60006109966108e0610ae6565b8461099185604051806060016040528060258152602001611b57602591396002600061090a610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f439092919063ffffffff16565b610aee565b6001905092915050565b60006109b46109ad610ae6565b8484610cb7565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad19061169f565b60405180910390fd5b610ae38161118e565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5490611731565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc3906117c3565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610caa919061148a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1d90611855565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8c906118e7565b60405180910390fd5b610e0181604051806060016040528060268152602001611b3160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f439092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f36919061148a565b60405180910390a3505050565b6000838311158290610f8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f82919061134a565b60405180910390fd5b5060008385610f9a9190611936565b9050809150509392505050565b6000808284610fb6919061196a565b905083811015610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff2906119ea565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106b90611a56565b60405180910390fd5b61108981600354610fa790919063ffffffff16565b6003819055506110e181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611182919061148a565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f490611ae8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112f45780820151818401526020810190506112d9565b60008484015250505050565b6000601f19601f8301169050919050565b600061131c826112ba565b61132681856112c5565b93506113368185602086016112d6565b61133f81611300565b840191505092915050565b600060208201905081810360008301526113648184611311565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061139c82611371565b9050919050565b6113ac81611391565b81146113b757600080fd5b50565b6000813590506113c9816113a3565b92915050565b6000819050919050565b6113e2816113cf565b81146113ed57600080fd5b50565b6000813590506113ff816113d9565b92915050565b6000806040838503121561141c5761141b61136c565b5b600061142a858286016113ba565b925050602061143b858286016113f0565b9150509250929050565b60008115159050919050565b61145a81611445565b82525050565b60006020820190506114756000830184611451565b92915050565b611484816113cf565b82525050565b600060208201905061149f600083018461147b565b92915050565b6000806000606084860312156114be576114bd61136c565b5b60006114cc868287016113ba565b93505060206114dd868287016113ba565b92505060406114ee868287016113f0565b9150509250925092565b600060ff82169050919050565b61150e816114f8565b82525050565b60006020820190506115296000830184611505565b92915050565b6000602082840312156115455761154461136c565b5b6000611553848285016113ba565b91505092915050565b61156581611391565b82525050565b6000602082019050611580600083018461155c565b92915050565b60006020828403121561159c5761159b61136c565b5b60006115aa848285016113f0565b91505092915050565b600080604083850312156115ca576115c961136c565b5b60006115d8858286016113ba565b92505060206115e9858286016113ba565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061163a57607f821691505b60208210810361164d5761164c6115f3565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116896020836112c5565b915061169482611653565b602082019050919050565b600060208201905081810360008301526116b88161167c565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061171b6024836112c5565b9150611726826116bf565b604082019050919050565b6000602082019050818103600083015261174a8161170e565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006117ad6022836112c5565b91506117b882611751565b604082019050919050565b600060208201905081810360008301526117dc816117a0565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061183f6025836112c5565b915061184a826117e3565b604082019050919050565b6000602082019050818103600083015261186e81611832565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118d16023836112c5565b91506118dc82611875565b604082019050919050565b60006020820190508181036000830152611900816118c4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611941826113cf565b915061194c836113cf565b925082820390508181111561196457611963611907565b5b92915050565b6000611975826113cf565b9150611980836113cf565b925082820190508082111561199857611997611907565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b60006119d4601b836112c5565b91506119df8261199e565b602082019050919050565b60006020820190508181036000830152611a03816119c7565b9050919050565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611a40601f836112c5565b9150611a4b82611a0a565b602082019050919050565b60006020820190508181036000830152611a6f81611a33565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ad26026836112c5565b9150611add82611a76565b604082019050919050565b60006020820190508181036000830152611b0181611ac5565b905091905056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122045e7046c155955b4c69770c4ebb64f2e2b0a26aad28672c59cd4be2b24e58af164736f6c63430008120033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0x1622 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39A SWAP1 PUSH2 0x1622 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0x3FE PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP5 DUP5 DUP5 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x4E7 DUP5 PUSH2 0x432 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x4E2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B09 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x498 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x516 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x5AD DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x527 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFA7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP1 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x79F SWAP1 PUSH2 0x1622 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x1622 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x818 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x818 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH2 0x8C4 PUSH2 0xAE6 JUMP JUMPDEST DUP4 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x996 PUSH2 0x8E0 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x991 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B57 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x90A PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B4 PUSH2 0x9AD PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD1 SWAP1 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0x118E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB54 SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC3 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCAA SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1D SWAP1 PUSH2 0x1855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8C SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE01 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B31 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE96 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFA7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xF9A SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF2 SWAP1 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106B SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1089 DUP2 PUSH1 0x3 SLOAD PUSH2 0xFA7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x10E1 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFA7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12F4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131C DUP3 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1326 DUP2 DUP6 PUSH2 0x12C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1336 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x133F DUP2 PUSH2 0x1300 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1364 DUP2 DUP5 PUSH2 0x1311 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139C DUP3 PUSH2 0x1371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AC DUP2 PUSH2 0x1391 JUMP JUMPDEST DUP2 EQ PUSH2 0x13B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C9 DUP2 PUSH2 0x13A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E2 DUP2 PUSH2 0x13CF JUMP JUMPDEST DUP2 EQ PUSH2 0x13ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13FF DUP2 PUSH2 0x13D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141C JUMPI PUSH2 0x141B PUSH2 0x136C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142A DUP6 DUP3 DUP7 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143B DUP6 DUP3 DUP7 ADD PUSH2 0x13F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145A DUP2 PUSH2 0x1445 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1475 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0x13CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x149F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x147B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14BE JUMPI PUSH2 0x14BD PUSH2 0x136C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14CC DUP7 DUP3 DUP8 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14DD DUP7 DUP3 DUP8 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14EE DUP7 DUP3 DUP8 ADD PUSH2 0x13F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150E DUP2 PUSH2 0x14F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1529 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1505 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1545 JUMPI PUSH2 0x1544 PUSH2 0x136C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1553 DUP5 DUP3 DUP6 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1565 DUP2 PUSH2 0x1391 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1580 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x155C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159C JUMPI PUSH2 0x159B PUSH2 0x136C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15AA DUP5 DUP3 DUP6 ADD PUSH2 0x13F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15CA JUMPI PUSH2 0x15C9 PUSH2 0x136C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D8 DUP6 DUP3 DUP7 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E9 DUP6 DUP3 DUP7 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x163A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x164D JUMPI PUSH2 0x164C PUSH2 0x15F3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1689 PUSH1 0x20 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1694 DUP3 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16B8 DUP2 PUSH2 0x167C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171B PUSH1 0x24 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1726 DUP3 PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x174A DUP2 PUSH2 0x170E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AD PUSH1 0x22 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B8 DUP3 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17DC DUP2 PUSH2 0x17A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183F PUSH1 0x25 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x184A DUP3 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x186E DUP2 PUSH2 0x1832 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D1 PUSH1 0x23 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x18DC DUP3 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1900 DUP2 PUSH2 0x18C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1941 DUP3 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP PUSH2 0x194C DUP4 PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1964 JUMPI PUSH2 0x1963 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1975 DUP3 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP PUSH2 0x1980 DUP4 PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1998 JUMPI PUSH2 0x1997 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D4 PUSH1 0x1B DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19DF DUP3 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A03 DUP2 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A40 PUSH1 0x1F DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4B DUP3 PUSH2 0x1A0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A6F DUP2 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD2 PUSH1 0x26 DUP4 PUSH2 0x12C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADD DUP3 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B01 DUP2 PUSH2 0x1AC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 GASLIMIT 0xE7 DIV PUSH13 0x155955B4C69770C4EBB64F2E2B EXP 0x26 0xAA 0xD2 DUP7 PUSH19 0xC59CD4BE2B24E58AF164736F6C634300081200 CALLER ",
		"sourceMap": "11323:7827:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12377:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13417:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12512:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14006:292;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12105:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14680:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12653:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10625:130;;;:::i;:::-;;11967:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10023:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12241:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15803:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15352:251;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12953:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13157:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10900:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12377:79;12416:13;12445:5;12438:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12377:79;:::o;13417:144::-;13485:4;13498:39;13507:12;:10;:12::i;:::-;13521:7;13530:6;13498:8;:39::i;:::-;13551:4;13544:11;;13417:144;;;;:::o;12512:87::-;12558:7;12581:12;;12574:19;;12512:87;:::o;14006:292::-;14097:4;14110:36;14120:6;14128:9;14139:6;14110:9;:36::i;:::-;14153:121;14162:6;14170:12;:10;:12::i;:::-;14184:89;14222:6;14184:89;;;;;;;;;;;;;;;;;:11;:19;14196:6;14184:19;;;;;;;;;;;;;;;:33;14204:12;:10;:12::i;:::-;14184:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;14153:8;:121::i;:::-;14288:4;14281:11;;14006:292;;;;;:::o;12105:79::-;12148:5;12169:9;;;;;;;;;;;12162:16;;12105:79;:::o;14680:200::-;14760:4;14773:83;14782:12;:10;:12::i;:::-;14796:7;14805:50;14844:10;14805:11;:25;14817:12;:10;:12::i;:::-;14805:25;;;;;;;;;;;;;;;:34;14831:7;14805:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14773:8;:83::i;:::-;14870:4;14863:11;;14680:200;;;;:::o;12653:106::-;12712:7;12735:9;:18;12745:7;12735:18;;;;;;;;;;;;;;;;12728:25;;12653:106;;;:::o;10625:130::-;10227:12;:10;:12::i;:::-;10217:22;;:6;;;;;;;;;;:22;;;10209:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10720:1:::1;10683:40;;10704:6;::::0;::::1;;;;;;;;10683:40;;;;;;;;;;;;10747:1;10730:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;10625:130::o:0;11967:79::-;12010:7;12033;:5;:7::i;:::-;12026:14;;11967:79;:::o;10023:73::-;10061:7;10084:6;;;;;;;;;;;10077:13;;10023:73;:::o;12241:83::-;12282:13;12311:7;12304:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12241:83;:::o;15803:120::-;15859:4;10227:12;:10;:12::i;:::-;10217:22;;:6;;;;;;;;;;:22;;;10209:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;15872:27:::1;15878:12;:10;:12::i;:::-;15892:6;15872:5;:27::i;:::-;15913:4;15906:11;;15803:120:::0;;;:::o;15352:251::-;15437:4;15450:129;15459:12;:10;:12::i;:::-;15473:7;15482:96;15521:15;15482:96;;;;;;;;;;;;;;;;;:11;:25;15494:12;:10;:12::i;:::-;15482:25;;;;;;;;;;;;;;;:34;15508:7;15482:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;15450:8;:129::i;:::-;15593:4;15586:11;;15352:251;;;;:::o;12953:150::-;13024:4;13037:42;13047:12;:10;:12::i;:::-;13061:9;13072:6;13037:9;:42::i;:::-;13093:4;13086:11;;12953:150;;;;:::o;13157:130::-;13231:7;13254:11;:18;13266:5;13254:18;;;;;;;;;;;;;;;:27;13273:7;13254:27;;;;;;;;;;;;;;;;13247:34;;13157:130;;;;:::o;10900:103::-;10227:12;:10;:12::i;:::-;10217:22;;:6;;;;;;;;;;:22;;;10209:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10969:28:::1;10988:8;10969:18;:28::i;:::-;10900:103:::0;:::o;3736:84::-;3781:7;3804:10;3797:17;;3736:84;:::o;18433:320::-;18540:1;18523:19;;:5;:19;;;18515:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;18617:1;18598:21;;:7;:21;;;18590:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;18697:6;18667:11;:18;18679:5;18667:18;;;;;;;;;;;;;;;:27;18686:7;18667:27;;;;;;;;;;;;;;;:36;;;;18731:7;18715:32;;18724:5;18715:32;;;18740:6;18715:32;;;;;;:::i;:::-;;;;;;;;18433:320;;;:::o;16383:449::-;16495:1;16477:20;;:6;:20;;;16469:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;16575:1;16554:23;;:9;:23;;;16546:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;16646;16668:6;16646:71;;;;;;;;;;;;;;;;;:9;:17;16656:6;16646:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16626:9;:17;16636:6;16626:17;;;;;;;;;;;;;;;:91;;;;16747:32;16772:6;16747:9;:20;16757:9;16747:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16724:9;:20;16734:9;16724:20;;;;;;;;;;;;;;;:55;;;;16808:9;16791:35;;16800:6;16791:35;;;16819:6;16791:35;;;;;;:::i;:::-;;;;;;;;16383:449;;;:::o;5687:178::-;5773:7;5802:1;5797;:6;;5805:12;5789:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5825:9;5841:1;5837;:5;;;;:::i;:::-;5825:17;;5858:1;5851:8;;;5687:178;;;;;:::o;4860:167::-;4918:7;4934:9;4950:1;4946;:5;;;;:::i;:::-;4934:17;;4971:1;4966;:6;;4958:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;5020:1;5013:8;;;4860:167;;;;:::o;17093:290::-;17184:1;17165:21;;:7;:21;;;17157:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;17246:24;17263:6;17246:12;;:16;;:24;;;;:::i;:::-;17231:12;:39;;;;17298:30;17321:6;17298:9;:18;17308:7;17298:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;17277:9;:18;17287:7;17277:18;;;;;;;;;;;;;;;:51;;;;17361:7;17340:37;;17357:1;17340:37;;;17370:6;17340:37;;;;;;:::i;:::-;;;;;;;;17093:290;;:::o;11101:215::-;11191:1;11171:22;;:8;:22;;;11163:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;11277:8;11248:38;;11269:6;;;;;;;;;;11248:38;;;;;;;;;;;;11302:8;11293:6;;:17;;;;;;;;;;;;;;;;;;11101:215;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:329::-;5599:6;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5540:329;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:180::-;6403:77;6400:1;6393:88;6500:4;6497:1;6490:15;6524:4;6521:1;6514:15;6541:320;6585:6;6622:1;6616:4;6612:12;6602:22;;6669:1;6663:4;6659:12;6690:18;6680:81;;6746:4;6738:6;6734:17;6724:27;;6680:81;6808:2;6800:6;6797:14;6777:18;6774:38;6771:84;;6827:18;;:::i;:::-;6771:84;6592:269;6541:320;;;:::o;6867:182::-;7007:34;7003:1;6995:6;6991:14;6984:58;6867:182;:::o;7055:366::-;7197:3;7218:67;7282:2;7277:3;7218:67;:::i;:::-;7211:74;;7294:93;7383:3;7294:93;:::i;:::-;7412:2;7407:3;7403:12;7396:19;;7055:366;;;:::o;7427:419::-;7593:4;7631:2;7620:9;7616:18;7608:26;;7680:9;7674:4;7670:20;7666:1;7655:9;7651:17;7644:47;7708:131;7834:4;7708:131;:::i;:::-;7700:139;;7427:419;;;:::o;7852:223::-;7992:34;7988:1;7980:6;7976:14;7969:58;8061:6;8056:2;8048:6;8044:15;8037:31;7852:223;:::o;8081:366::-;8223:3;8244:67;8308:2;8303:3;8244:67;:::i;:::-;8237:74;;8320:93;8409:3;8320:93;:::i;:::-;8438:2;8433:3;8429:12;8422:19;;8081:366;;;:::o;8453:419::-;8619:4;8657:2;8646:9;8642:18;8634:26;;8706:9;8700:4;8696:20;8692:1;8681:9;8677:17;8670:47;8734:131;8860:4;8734:131;:::i;:::-;8726:139;;8453:419;;;:::o;8878:221::-;9018:34;9014:1;9006:6;9002:14;8995:58;9087:4;9082:2;9074:6;9070:15;9063:29;8878:221;:::o;9105:366::-;9247:3;9268:67;9332:2;9327:3;9268:67;:::i;:::-;9261:74;;9344:93;9433:3;9344:93;:::i;:::-;9462:2;9457:3;9453:12;9446:19;;9105:366;;;:::o;9477:419::-;9643:4;9681:2;9670:9;9666:18;9658:26;;9730:9;9724:4;9720:20;9716:1;9705:9;9701:17;9694:47;9758:131;9884:4;9758:131;:::i;:::-;9750:139;;9477:419;;;:::o;9902:224::-;10042:34;10038:1;10030:6;10026:14;10019:58;10111:7;10106:2;10098:6;10094:15;10087:32;9902:224;:::o;10132:366::-;10274:3;10295:67;10359:2;10354:3;10295:67;:::i;:::-;10288:74;;10371:93;10460:3;10371:93;:::i;:::-;10489:2;10484:3;10480:12;10473:19;;10132:366;;;:::o;10504:419::-;10670:4;10708:2;10697:9;10693:18;10685:26;;10757:9;10751:4;10747:20;10743:1;10732:9;10728:17;10721:47;10785:131;10911:4;10785:131;:::i;:::-;10777:139;;10504:419;;;:::o;10929:222::-;11069:34;11065:1;11057:6;11053:14;11046:58;11138:5;11133:2;11125:6;11121:15;11114:30;10929:222;:::o;11157:366::-;11299:3;11320:67;11384:2;11379:3;11320:67;:::i;:::-;11313:74;;11396:93;11485:3;11396:93;:::i;:::-;11514:2;11509:3;11505:12;11498:19;;11157:366;;;:::o;11529:419::-;11695:4;11733:2;11722:9;11718:18;11710:26;;11782:9;11776:4;11772:20;11768:1;11757:9;11753:17;11746:47;11810:131;11936:4;11810:131;:::i;:::-;11802:139;;11529:419;;;:::o;11954:180::-;12002:77;11999:1;11992:88;12099:4;12096:1;12089:15;12123:4;12120:1;12113:15;12140:194;12180:4;12200:20;12218:1;12200:20;:::i;:::-;12195:25;;12234:20;12252:1;12234:20;:::i;:::-;12229:25;;12278:1;12275;12271:9;12263:17;;12302:1;12296:4;12293:11;12290:37;;;12307:18;;:::i;:::-;12290:37;12140:194;;;;:::o;12340:191::-;12380:3;12399:20;12417:1;12399:20;:::i;:::-;12394:25;;12433:20;12451:1;12433:20;:::i;:::-;12428:25;;12476:1;12473;12469:9;12462:16;;12497:3;12494:1;12491:10;12488:36;;;12504:18;;:::i;:::-;12488:36;12340:191;;;;:::o;12537:177::-;12677:29;12673:1;12665:6;12661:14;12654:53;12537:177;:::o;12720:366::-;12862:3;12883:67;12947:2;12942:3;12883:67;:::i;:::-;12876:74;;12959:93;13048:3;12959:93;:::i;:::-;13077:2;13072:3;13068:12;13061:19;;12720:366;;;:::o;13092:419::-;13258:4;13296:2;13285:9;13281:18;13273:26;;13345:9;13339:4;13335:20;13331:1;13320:9;13316:17;13309:47;13373:131;13499:4;13373:131;:::i;:::-;13365:139;;13092:419;;;:::o;13517:181::-;13657:33;13653:1;13645:6;13641:14;13634:57;13517:181;:::o;13704:366::-;13846:3;13867:67;13931:2;13926:3;13867:67;:::i;:::-;13860:74;;13943:93;14032:3;13943:93;:::i;:::-;14061:2;14056:3;14052:12;14045:19;;13704:366;;;:::o;14076:419::-;14242:4;14280:2;14269:9;14265:18;14257:26;;14329:9;14323:4;14319:20;14315:1;14304:9;14300:17;14293:47;14357:131;14483:4;14357:131;:::i;:::-;14349:139;;14076:419;;;:::o;14501:225::-;14641:34;14637:1;14629:6;14625:14;14618:58;14710:8;14705:2;14697:6;14693:15;14686:33;14501:225;:::o;14732:366::-;14874:3;14895:67;14959:2;14954:3;14895:67;:::i;:::-;14888:74;;14971:93;15060:3;14971:93;:::i;:::-;15089:2;15084:3;15080:12;15073:19;;14732:366;;;:::o;15104:419::-;15270:4;15308:2;15297:9;15293:18;15285:26;;15357:9;15351:4;15347:20;15343:1;15332:9;15328:17;15321:47;15385:131;15511:4;15385:131;:::i;:::-;15377:139;;15104:419;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract BEP20Token is Context...\n  PUSH 40\t\t\tcontract BEP20Token is Context...\n  MSTORE \t\t\tcontract BEP20Token is Context...\n  CALLVALUE \t\t\tconstructor() public {\\r\\n    ...\n  DUP1 \t\t\tconstructor() public {\\r\\n    ...\n  ISZERO \t\t\tconstructor() public {\\r\\n    ...\n  PUSH [tag] 1\t\t\tconstructor() public {\\r\\n    ...\n  JUMPI \t\t\tconstructor() public {\\r\\n    ...\n  PUSH 0\t\t\tconstructor() public {\\r\\n    ...\n  DUP1 \t\t\tconstructor() public {\\r\\n    ...\n  REVERT \t\t\tconstructor() public {\\r\\n    ...\ntag 1\t\t\tconstructor() public {\\r\\n    ...\n  JUMPDEST \t\t\tconstructor() public {\\r\\n    ...\n  POP \t\t\tconstructor() public {\\r\\n    ...\n  PUSH 0\t\t\taddress msgSender\n  PUSH [tag] 7\t\t\t_msgSender()\n  PUSH [tag] 8\t\t\t_msgSender\n  PUSH 20\t\t\t_msgSender\n  SHL \t\t\t_msgSender\n  PUSH 20\t\t\t_msgSender()\n  SHR \t\t\t_msgSender()\n  JUMP \t\t\t_msgSender()\ntag 7\t\t\t_msgSender()\n  JUMPDEST \t\t\t_msgSender()\n  SWAP1 \t\t\taddress msgSender = _msgSender...\n  POP \t\t\taddress msgSender = _msgSender...\n  DUP1 \t\t\tmsgSender\n  PUSH 0\t\t\t_owner\n  DUP1 \t\t\t_owner\n  PUSH 100\t\t\t_owner = msgSender\n  EXP \t\t\t_owner = msgSender\n  DUP2 \t\t\t_owner = msgSender\n  SLOAD \t\t\t_owner = msgSender\n  DUP2 \t\t\t_owner = msgSender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner = msgSender\n  MUL \t\t\t_owner = msgSender\n  NOT \t\t\t_owner = msgSender\n  AND \t\t\t_owner = msgSender\n  SWAP1 \t\t\t_owner = msgSender\n  DUP4 \t\t\t_owner = msgSender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner = msgSender\n  AND \t\t\t_owner = msgSender\n  MUL \t\t\t_owner = msgSender\n  OR \t\t\t_owner = msgSender\n  SWAP1 \t\t\t_owner = msgSender\n  SSTORE \t\t\t_owner = msgSender\n  POP \t\t\t_owner = msgSender\n  DUP1 \t\t\tmsgSender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tOwnershipTransferred(address(0...\n  AND \t\t\tOwnershipTransferred(address(0...\n  PUSH 0\t\t\t0\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tOwnershipTransferred(address(0...\n  AND \t\t\tOwnershipTransferred(address(0...\n  PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\tOwnershipTransferred(address(0...\n  PUSH 40\t\t\tOwnershipTransferred(address(0...\n  MLOAD \t\t\tOwnershipTransferred(address(0...\n  PUSH 40\t\t\tOwnershipTransferred(address(0...\n  MLOAD \t\t\tOwnershipTransferred(address(0...\n  DUP1 \t\t\tOwnershipTransferred(address(0...\n  SWAP2 \t\t\tOwnershipTransferred(address(0...\n  SUB \t\t\tOwnershipTransferred(address(0...\n  SWAP1 \t\t\tOwnershipTransferred(address(0...\n  LOG3 \t\t\tOwnershipTransferred(address(0...\n  POP \t\t\t{\\r\\n    address msgSender = _...\n  PUSH 40\t\t\t_name = \"LUCKYBIRD\"\n  MLOAD \t\t\t_name = \"LUCKYBIRD\"\n  DUP1 \t\t\t_name = \"LUCKYBIRD\"\n  PUSH 40\t\t\t_name = \"LUCKYBIRD\"\n  ADD \t\t\t_name = \"LUCKYBIRD\"\n  PUSH 40\t\t\t_name = \"LUCKYBIRD\"\n  MSTORE \t\t\t_name = \"LUCKYBIRD\"\n  DUP1 \t\t\t_name = \"LUCKYBIRD\"\n  PUSH 9\t\t\t_name = \"LUCKYBIRD\"\n  DUP2 \t\t\t_name = \"LUCKYBIRD\"\n  MSTORE \t\t\t_name = \"LUCKYBIRD\"\n  PUSH 20\t\t\t_name = \"LUCKYBIRD\"\n  ADD \t\t\t_name = \"LUCKYBIRD\"\n  PUSH 4C55434B59424952440000000000000000000000000000000000000000000000\t\t\t_name = \"LUCKYBIRD\"\n  DUP2 \t\t\t_name = \"LUCKYBIRD\"\n  MSTORE \t\t\t_name = \"LUCKYBIRD\"\n  POP \t\t\t_name = \"LUCKYBIRD\"\n  PUSH 6\t\t\t_name\n  SWAP1 \t\t\t_name = \"LUCKYBIRD\"\n  DUP2 \t\t\t_name = \"LUCKYBIRD\"\n  PUSH [tag] 10\t\t\t_name = \"LUCKYBIRD\"\n  SWAP2 \t\t\t_name = \"LUCKYBIRD\"\n  SWAP1 \t\t\t_name = \"LUCKYBIRD\"\n  PUSH [tag] 11\t\t\t_name = \"LUCKYBIRD\"\n  JUMP \t\t\t_name = \"LUCKYBIRD\"\ntag 10\t\t\t_name = \"LUCKYBIRD\"\n  JUMPDEST \t\t\t_name = \"LUCKYBIRD\"\n  POP \t\t\t_name = \"LUCKYBIRD\"\n  PUSH 40\t\t\t_symbol = \"LUCKYBIRD\"\n  MLOAD \t\t\t_symbol = \"LUCKYBIRD\"\n  DUP1 \t\t\t_symbol = \"LUCKYBIRD\"\n  PUSH 40\t\t\t_symbol = \"LUCKYBIRD\"\n  ADD \t\t\t_symbol = \"LUCKYBIRD\"\n  PUSH 40\t\t\t_symbol = \"LUCKYBIRD\"\n  MSTORE \t\t\t_symbol = \"LUCKYBIRD\"\n  DUP1 \t\t\t_symbol = \"LUCKYBIRD\"\n  PUSH 9\t\t\t_symbol = \"LUCKYBIRD\"\n  DUP2 \t\t\t_symbol = \"LUCKYBIRD\"\n  MSTORE \t\t\t_symbol = \"LUCKYBIRD\"\n  PUSH 20\t\t\t_symbol = \"LUCKYBIRD\"\n  ADD \t\t\t_symbol = \"LUCKYBIRD\"\n  PUSH 4C55434B59424952440000000000000000000000000000000000000000000000\t\t\t_symbol = \"LUCKYBIRD\"\n  DUP2 \t\t\t_symbol = \"LUCKYBIRD\"\n  MSTORE \t\t\t_symbol = \"LUCKYBIRD\"\n  POP \t\t\t_symbol = \"LUCKYBIRD\"\n  PUSH 5\t\t\t_symbol\n  SWAP1 \t\t\t_symbol = \"LUCKYBIRD\"\n  DUP2 \t\t\t_symbol = \"LUCKYBIRD\"\n  PUSH [tag] 12\t\t\t_symbol = \"LUCKYBIRD\"\n  SWAP2 \t\t\t_symbol = \"LUCKYBIRD\"\n  SWAP1 \t\t\t_symbol = \"LUCKYBIRD\"\n  PUSH [tag] 11\t\t\t_symbol = \"LUCKYBIRD\"\n  JUMP \t\t\t_symbol = \"LUCKYBIRD\"\ntag 12\t\t\t_symbol = \"LUCKYBIRD\"\n  JUMPDEST \t\t\t_symbol = \"LUCKYBIRD\"\n  POP \t\t\t_symbol = \"LUCKYBIRD\"\n  PUSH 12\t\t\t18\n  PUSH 4\t\t\t_decimals\n  PUSH 0\t\t\t_decimals\n  PUSH 100\t\t\t_decimals = 18\n  EXP \t\t\t_decimals = 18\n  DUP2 \t\t\t_decimals = 18\n  SLOAD \t\t\t_decimals = 18\n  DUP2 \t\t\t_decimals = 18\n  PUSH FF\t\t\t_decimals = 18\n  MUL \t\t\t_decimals = 18\n  NOT \t\t\t_decimals = 18\n  AND \t\t\t_decimals = 18\n  SWAP1 \t\t\t_decimals = 18\n  DUP4 \t\t\t_decimals = 18\n  PUSH FF\t\t\t_decimals = 18\n  AND \t\t\t_decimals = 18\n  MUL \t\t\t_decimals = 18\n  OR \t\t\t_decimals = 18\n  SWAP1 \t\t\t_decimals = 18\n  SSTORE \t\t\t_decimals = 18\n  POP \t\t\t_decimals = 18\n  PUSH 52B7D2DCC80CD2E4000000\t\t\t100000000000000000000000000\n  PUSH 3\t\t\t_totalSupply\n  DUP2 \t\t\t_totalSupply = 100000000000000...\n  SWAP1 \t\t\t_totalSupply = 100000000000000...\n  SSTORE \t\t\t_totalSupply = 100000000000000...\n  POP \t\t\t_totalSupply = 100000000000000...\n  PUSH 3\t\t\t_totalSupply\n  SLOAD \t\t\t_totalSupply\n  PUSH 1\t\t\t_balances\n  PUSH 0\t\t\t_balances[msg.sender]\n  CALLER \t\t\tmsg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[msg.sender]\n  AND \t\t\t_balances[msg.sender]\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[msg.sender]\n  AND \t\t\t_balances[msg.sender]\n  DUP2 \t\t\t_balances[msg.sender]\n  MSTORE \t\t\t_balances[msg.sender]\n  PUSH 20\t\t\t_balances[msg.sender]\n  ADD \t\t\t_balances[msg.sender]\n  SWAP1 \t\t\t_balances[msg.sender]\n  DUP2 \t\t\t_balances[msg.sender]\n  MSTORE \t\t\t_balances[msg.sender]\n  PUSH 20\t\t\t_balances[msg.sender]\n  ADD \t\t\t_balances[msg.sender]\n  PUSH 0\t\t\t_balances[msg.sender]\n  KECCAK256 \t\t\t_balances[msg.sender]\n  DUP2 \t\t\t_balances[msg.sender] = _total...\n  SWAP1 \t\t\t_balances[msg.sender] = _total...\n  SSTORE \t\t\t_balances[msg.sender] = _total...\n  POP \t\t\t_balances[msg.sender] = _total...\n  CALLER \t\t\tmsg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(address(0), msg.sende...\n  AND \t\t\tTransfer(address(0), msg.sende...\n  PUSH 0\t\t\t0\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(address(0), msg.sende...\n  AND \t\t\tTransfer(address(0), msg.sende...\n  PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\tTransfer(address(0), msg.sende...\n  PUSH 3\t\t\t_totalSupply\n  SLOAD \t\t\t_totalSupply\n  PUSH 40\t\t\tTransfer(address(0), msg.sende...\n  MLOAD \t\t\tTransfer(address(0), msg.sende...\n  PUSH [tag] 13\t\t\tTransfer(address(0), msg.sende...\n  SWAP2 \t\t\tTransfer(address(0), msg.sende...\n  SWAP1 \t\t\tTransfer(address(0), msg.sende...\n  PUSH [tag] 14\t\t\tTransfer(address(0), msg.sende...\n  JUMP \t\t\tTransfer(address(0), msg.sende...\ntag 13\t\t\tTransfer(address(0), msg.sende...\n  JUMPDEST \t\t\tTransfer(address(0), msg.sende...\n  PUSH 40\t\t\tTransfer(address(0), msg.sende...\n  MLOAD \t\t\tTransfer(address(0), msg.sende...\n  DUP1 \t\t\tTransfer(address(0), msg.sende...\n  SWAP2 \t\t\tTransfer(address(0), msg.sende...\n  SUB \t\t\tTransfer(address(0), msg.sende...\n  SWAP1 \t\t\tTransfer(address(0), msg.sende...\n  LOG3 \t\t\tTransfer(address(0), msg.sende...\n  PUSH [tag] 15\t\t\tcontract BEP20Token is Context...\n  JUMP \t\t\tcontract BEP20Token is Context...\ntag 8\t\t\tfunction _msgSender() internal...\n  JUMPDEST \t\t\tfunction _msgSender() internal...\n  PUSH 0\t\t\taddress\n  CALLER \t\t\tmsg.sender\n  SWAP1 \t\t\treturn msg.sender\n  POP \t\t\treturn msg.sender\n  SWAP1 \t\t\tfunction _msgSender() internal...\n  JUMP \t\t\tfunction _msgSender() internal...\ntag 17\t\t\t-License-Identifier: MIT\\r\\npr...\n  JUMPDEST \t\t\t-License-Identifier: MIT\\r\\npr...\n  PUSH 0\t\t\t0.9.0;\n  DUP2 \t\t\t*\\r\\n  \n  MLOAD \t\t\t\\r\\n  /**\\r\\n   \n  SWAP1 \t\t\te IBEP20 {\\r\\n  /**\\r\\n   \n  POP \t\t\te IBEP20 {\\r\\n  /**\\r\\n   \n  SWAP2 \t\t\t-License-Identifier: MIT\\r\\npr...\n  SWAP1 \t\t\t-License-Identifier: MIT\\r\\npr...\n  POP \t\t\t-License-Identifier: MIT\\r\\npr...\n  JUMP \t\t\t-License-Identifier: MIT\\r\\npr...\ntag 18\t\t\ts the amount of tokens in exis...\n  JUMPDEST \t\t\ts the amount of tokens in exis...\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\tunction totalSupply() external...\n  PUSH 0\t\t\t \n  MSTORE \t\t\t   */\\r\\n  function totalSuppl...\n  PUSH 41\t\t\tmals\n  PUSH 4\t\t\te\n  MSTORE \t\t\ttoken decimals.\n  PUSH 24\t\t\t dec\n  PUSH 0\t\t\ti\n  REVERT \t\t\t  function deci\ntag 19\t\t\tnal view returns (uint8);\\r\\n\\...\n  JUMPDEST \t\t\tnal view returns (uint8);\\r\\n\\...\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\tturns the token symbol.\\r\\n   ...\n  PUSH 0\t\t\t \n  MSTORE \t\t\t * @dev Returns the token symb...\n  PUSH 22\t\t\t**\\r\\n\n  PUSH 4\t\t\t \n  MSTORE \t\t\ty);\\r\\n\\r\\n  /**\\r\\n \n  PUSH 24\t\t\t tok\n  PUSH 0\t\t\tt\n  REVERT \t\t\teturns the toke\ntag 20\t\t\t/\\r\\n  function name() externa...\n  JUMPDEST \t\t\t/\\r\\n  function name() externa...\n  PUSH 0\t\t\tstring\n  PUSH 2\t\t\te\n  DUP3 \t\t\t@dev\n  DIV \t\t\t  * @dev Ret\n  SWAP1 \t\t\t\\r\\n  /**\\r\\n   * @dev Ret\n  POP \t\t\t\\r\\n  /**\\r\\n   * @dev Ret\n  PUSH 1\t\t\tg\n  DUP3 \t\t\tctio\n  AND \t\t\t function ge\n  DUP1 \t\t\tiew returns (addre\n  PUSH [tag] 43\t\t\texternal view returns (address...\n  JUMPI \t\t\texternal view returns (address...\n  PUSH 7F\t\t\tmoun\n  DUP3 \t\t\tns the\n  AND \t\t\teturns the amount\n  SWAP2 \t\t\t  * @dev Returns the amount\n  POP \t\t\t  * @dev Returns the amount\ntag 43\t\t\texternal view returns (address...\n  JUMPDEST \t\t\texternal view returns (address...\n  PUSH 20\t\t\tOf\n  DUP3 \t\t\t balan\n  LT \t\t\tion balanceOf(\n  DUP2 \t\t\tnt`.\\r\\n   */\\r\\n  fun\n  SUB \t\t\tcount`.\\r\\n   */\\r\\n  function...\n  PUSH [tag] 44\t\t\t`account`.\\r\\n   */\\r\\n  funct...\n  JUMPI \t\t\t`account`.\\r\\n   */\\r\\n  funct...\n  PUSH [tag] 45\t\t\t external view ret\n  PUSH [tag] 19\t\t\t external view ret\n  JUMP \t\t\t external view ret\ntag 45\t\t\t external view ret\n  JUMPDEST \t\t\t external view ret\ntag 44\t\t\t`account`.\\r\\n   */\\r\\n  funct...\n  JUMPDEST \t\t\t`account`.\\r\\n   */\\r\\n  funct...\n  POP \t\t\tmemory);\\r\\n\\r\\n  /**\\r\\n   * ...\n  SWAP2 \t\t\t/\\r\\n  function name() externa...\n  SWAP1 \t\t\t/\\r\\n  function name() externa...\n  POP \t\t\t/\\r\\n  function name() externa...\n  JUMP \t\t\t/\\r\\n  function name() externa...\ntag 21\t\t\t**\\r\\n   * @dev Moves `amount`...\n  JUMPDEST \t\t\t**\\r\\n   * @dev Moves `amount`...\n  PUSH 0\t\t\ter's\n  DUP2 \t\t\tent\n  SWAP1 \t\t\t `recipient\n  POP \t\t\t `recipient\n  DUP2 \t\t\tns \n  PUSH 0\t\t\tt\n  MSTORE \t\t\t   * Returns a\n  PUSH 20\t\t\ther \n  PUSH 0\t\t\th\n  KECCAK256 \t\t\tdicating whether t\n  SWAP1 \t\t\tvalue indicating whether t\n  POP \t\t\tvalue indicating whether t\n  SWAP2 \t\t\t**\\r\\n   * @dev Moves `amount`...\n  SWAP1 \t\t\t**\\r\\n   * @dev Moves `amount`...\n  POP \t\t\t**\\r\\n   * @dev Moves `amount`...\n  JUMP \t\t\t**\\r\\n   * @dev Moves `amount`...\ntag 22\t\t\tsucceeded.\\r\\n   *\\r\\n   * Emi...\n  JUMPDEST \t\t\tsucceeded.\\r\\n   *\\r\\n   * Emi...\n  PUSH 0\t\t\tfer} e\n  PUSH 20\t\t\t r\n  PUSH 1F\t\t\tdr\n  DUP4 \t\t\tsfer(\n  ADD \t\t\ttransfer(addre\n  DIV \t\t\tion transfer(address re\n  SWAP1 \t\t\t/\\r\\n  function transfer(addre...\n  POP \t\t\t/\\r\\n  function transfer(addre...\n  SWAP2 \t\t\tsucceeded.\\r\\n   *\\r\\n   * Emi...\n  SWAP1 \t\t\tsucceeded.\\r\\n   *\\r\\n   * Emi...\n  POP \t\t\tsucceeded.\\r\\n   *\\r\\n   * Emi...\n  JUMP \t\t\tsucceeded.\\r\\n   *\\r\\n   * Emi...\ntag 23\t\t\tt256 amount) external returns ...\n  JUMPDEST \t\t\tt256 amount) external returns ...\n  PUSH 0\t\t\t**\\r\\n   *\n  DUP3 \t\t\tns th\n  DUP3 \t\t\tf to\n  SHL \t\t\ter of tokens tha\n  SWAP1 \t\t\tns the remaining number of tok...\n  POP \t\t\tns the remaining number of tok...\n  SWAP3 \t\t\tt256 amount) external returns ...\n  SWAP2 \t\t\tt256 amount) external returns ...\n  POP \t\t\tt256 amount) external returns ...\n  POP \t\t\tt256 amount) external returns ...\n  JUMP \t\t\tt256 amount) external returns ...\ntag 24\t\t\till be\\r\\n   * allowed to spen...\n  JUMPDEST \t\t\till be\\r\\n   * allowed to spen...\n  PUSH 0\t\t\trom}. \n  PUSH 8\t\t\th\n  DUP4 \t\t\t   *\\r\\n   *\n  MUL \t\t\tt.\\r\\n   *\\r\\n   * Thi\n  PUSH [tag] 50\t\t\t{approve} or {transferFrom} ar...\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\te called.\\r\\n   */\\r\\n  functi...\n  DUP3 \t\t\tferFrom} \n  PUSH [tag] 23\t\t\t{approve} or {transferFrom} ar...\n  JUMP \t\t\t{approve} or {transferFrom} ar...\ntag 50\t\t\t{approve} or {transferFrom} ar...\n  JUMPDEST \t\t\t{approve} or {transferFrom} ar...\n  PUSH [tag] 51\t\t\tturns (uint256);\\r\\n\\r\\n  /**\\...\n  DUP7 \t\t\t* @dev S\n  DUP4 \t\t\t\\n  /**\\r\\n \n  PUSH [tag] 23\t\t\tturns (uint256);\\r\\n\\r\\n  /**\\...\n  JUMP \t\t\tturns (uint256);\\r\\n\\r\\n  /**\\...\ntag 51\t\t\tturns (uint256);\\r\\n\\r\\n  /**\\...\n  JUMPDEST \t\t\tturns (uint256);\\r\\n\\r\\n  /**\\...\n  SWAP6 \t\t\trnal view returns (uint256);\\r...\n  POP \t\t\trnal view returns (uint256);\\r...\n  DUP1 \t\t\tspen\n  NOT \t\t\tof `spend\n  DUP5 \t\t\towanc\n  AND \t\t\t allowance of `spende\n  SWAP4 \t\t\tt` as the allowance of `spende\n  POP \t\t\tt` as the allowance of `spende\n  DUP1 \t\t\tturn\n  DUP7 \t\t\t*\\r\\n   * \n  AND \t\t\t\\n   *\\r\\n   * Returns\n  DUP5 \t\t\tokens\n  OR \t\t\ts tokens.\\r\\n   *\\r\\n   * Retu...\n  SWAP3 \t\t\the caller's tokens.\\r\\n   *\\r\\...\n  POP \t\t\the caller's tokens.\\r\\n   *\\r\\...\n  POP \t\t\this is\\r\\n   * zero by default...\n  POP \t\t\this is\\r\\n   * zero by default...\n  SWAP4 \t\t\till be\\r\\n   * allowed to spen...\n  SWAP3 \t\t\till be\\r\\n   * allowed to spen...\n  POP \t\t\till be\\r\\n   * allowed to spen...\n  POP \t\t\till be\\r\\n   * allowed to spen...\n  POP \t\t\till be\\r\\n   * allowed to spen...\n  JUMP \t\t\till be\\r\\n   * allowed to spen...\ntag 25\t\t\tlue indicating whether the ope...\n  JUMPDEST \t\t\tlue indicating whether the ope...\n  PUSH 0\t\t\tsucceed\n  DUP2 \t\t\tANT: \n  SWAP1 \t\t\t   * IMPORTANT: \n  POP \t\t\t   * IMPORTANT: \n  SWAP2 \t\t\tlue indicating whether the ope...\n  SWAP1 \t\t\tlue indicating whether the ope...\n  POP \t\t\tlue indicating whether the ope...\n  JUMP \t\t\tlue indicating whether the ope...\ntag 26\t\t\tchanging an allowance with thi...\n  JUMPDEST \t\t\tchanging an allowance with thi...\n  PUSH 0\t\t\this\n  DUP2 \t\t\t risk\n  SWAP1 \t\t\tngs the risk\n  POP \t\t\tngs the risk\n  SWAP2 \t\t\tchanging an allowance with thi...\n  SWAP1 \t\t\tchanging an allowance with thi...\n  POP \t\t\tchanging an allowance with thi...\n  JUMP \t\t\tchanging an allowance with thi...\ntag 27\t\t\tsomeone may use both the old a...\n  JUMPDEST \t\t\tsomeone may use both the old a...\n  PUSH 0\t\t\t by unfor\n  PUSH [tag] 55\t\t\t ordering. One possible soluti...\n  PUSH [tag] 56\t\t\tsible solution to mitigate thi...\n  PUSH [tag] 57\t\t\tution to mitigate this r\n  DUP5 \t\t\tthis \n  PUSH [tag] 25\t\t\tution to mitigate this r\n  JUMP \t\t\tution to mitigate this r\ntag 57\t\t\tution to mitigate this r\n  JUMPDEST \t\t\tution to mitigate this r\n  PUSH [tag] 26\t\t\tsible solution to mitigate thi...\n  JUMP \t\t\tsible solution to mitigate thi...\ntag 56\t\t\tsible solution to mitigate thi...\n  JUMPDEST \t\t\tsible solution to mitigate thi...\n  PUSH [tag] 25\t\t\t ordering. One possible soluti...\n  JUMP \t\t\t ordering. One possible soluti...\ntag 55\t\t\t ordering. One possible soluti...\n  JUMPDEST \t\t\t ordering. One possible soluti...\n  SWAP1 \t\t\t* transaction ordering. One po...\n  POP \t\t\t* transaction ordering. One po...\n  SWAP2 \t\t\tsomeone may use both the old a...\n  SWAP1 \t\t\tsomeone may use both the old a...\n  POP \t\t\tsomeone may use both the old a...\n  JUMP \t\t\tsomeone may use both the old a...\ntag 28\t\t\tition is to first reduce the s...\n  JUMPDEST \t\t\tition is to first reduce the s...\n  PUSH 0\t\t\twan\n  DUP2 \t\t\te\\r\\n  \n  SWAP1 \t\t\t set the\\r\\n  \n  POP \t\t\t set the\\r\\n  \n  SWAP2 \t\t\tition is to first reduce the s...\n  SWAP1 \t\t\tition is to first reduce the s...\n  POP \t\t\tition is to first reduce the s...\n  JUMP \t\t\tition is to first reduce the s...\ntag 29\t\t\talue afterwards:\\r\\n   * https...\n  JUMPDEST \t\t\talue afterwards:\\r\\n   * https...\n  PUSH [tag] 60\t\t\t{Approval} event.\\r\\n   */\\r\\n...\n  DUP4 \t\t\tction a\n  PUSH [tag] 27\t\t\t{Approval} event.\\r\\n   */\\r\\n...\n  JUMP \t\t\t{Approval} event.\\r\\n   */\\r\\n...\ntag 60\t\t\t{Approval} event.\\r\\n   */\\r\\n...\n  JUMPDEST \t\t\t{Approval} event.\\r\\n   */\\r\\n...\n  PUSH [tag] 61\t\t\t uint256 amount) external retu...\n  PUSH [tag] 62\t\t\t*\\r\\n   * @dev Moves `amount` ...\n  DUP3 \t\t\tnt` tokens from \n  PUSH [tag] 28\t\t\t*\\r\\n   * @dev Moves `amount` ...\n  JUMP \t\t\t*\\r\\n   * @dev Moves `amount` ...\ntag 62\t\t\t*\\r\\n   * @dev Moves `amount` ...\n  JUMPDEST \t\t\t*\\r\\n   * @dev Moves `amount` ...\n  DUP5 \t\t\t\\r\\n\\r\\n  \n  DUP5 \t\t\t(boo\n  SLOAD \t\t\tturns (bool\n  PUSH [tag] 24\t\t\t uint256 amount) external retu...\n  JUMP \t\t\t uint256 amount) external retu...\ntag 61\t\t\t uint256 amount) external retu...\n  JUMPDEST \t\t\t uint256 amount) external retu...\n  DUP3 \t\t\tende\n  SSTORE \t\t\tress spender, uint256 amount) ...\n  POP \t\t\tnt-263524729\\r\\n   *\\r\\n   * E...\n  POP \t\t\talue afterwards:\\r\\n   * https...\n  POP \t\t\talue afterwards:\\r\\n   * https...\n  POP \t\t\talue afterwards:\\r\\n   * https...\n  JUMP \t\t\talue afterwards:\\r\\n   * https...\ntag 30\t\t\tcipient` using the\\r\\n   * all...\n  JUMPDEST \t\t\tcipient` using the\\r\\n   * all...\n  PUSH 0\t\t\t `a\n  SWAP1 \t\t\tcipient` using the\\r\\n   * all...\n  JUMP \t\t\tcipient` using the\\r\\n   * all...\ntag 31\t\t\te caller's\\r\\n   * allowance.\\...\n  JUMPDEST \t\t\te caller's\\r\\n   * allowance.\\...\n  PUSH [tag] 65\t\t\tether the operation succeeded....\n  PUSH [tag] 30\t\t\tether the operation succeeded....\n  JUMP \t\t\tether the operation succeeded....\ntag 65\t\t\tether the operation succeeded....\n  JUMPDEST \t\t\tether the operation succeeded....\n  PUSH [tag] 66\t\t\t* Emits a {Transfer} event.\\r\\...\n  DUP2 \t\t\tm(addr\n  DUP5 \t\t\tnsferF\n  DUP5 \t\t\ton t\n  PUSH [tag] 29\t\t\t* Emits a {Transfer} event.\\r\\...\n  JUMP \t\t\t* Emits a {Transfer} event.\\r\\...\ntag 66\t\t\t* Emits a {Transfer} event.\\r\\...\n  JUMPDEST \t\t\t* Emits a {Transfer} event.\\r\\...\n  POP \t\t\tlean value indicating whether ...\n  POP \t\t\te caller's\\r\\n   * allowance.\\...\n  POP \t\t\te caller's\\r\\n   * allowance.\\...\n  JUMP \t\t\te caller's\\r\\n   * allowance.\\...\ntag 32\t\t\tddress recipient, uint256 amou...\n  JUMPDEST \t\t\tddress recipient, uint256 amou...\ntag 68\t\t\t\\r\\n  /**\\r\\n   * @dev Emitted...\n  JUMPDEST \t\t\t\\r\\n  /**\\r\\n   * @dev Emitted...\n  DUP2 \t\t\tv E\n  DUP2 \t\t\t  * @\n  LT \t\t\t\\r\\n   * @dev Em\n  ISZERO \t\t\t\\r\\n  /**\\r\\n   * @dev Emitted...\n  PUSH [tag] 70\t\t\t\\r\\n  /**\\r\\n   * @dev Emitted...\n  JUMPI \t\t\t\\r\\n  /**\\r\\n   * @dev Emitted...\n  PUSH [tag] 71\t\t\tnt (`from`) to\\r\\n   * another...\n  PUSH 0\t\t\t\\n\n  DUP3 \t\t\t`to`)\n  PUSH [tag] 31\t\t\tnt (`from`) to\\r\\n   * another...\n  JUMP \t\t\tnt (`from`) to\\r\\n   * another...\ntag 71\t\t\tnt (`from`) to\\r\\n   * another...\n  JUMPDEST \t\t\tnt (`from`) to\\r\\n   * another...\n  PUSH 1\t\t\tn\n  DUP2 \t\t\te` to\n  ADD \t\t\tvalue` tokens\n  SWAP1 \t\t\ted when `value` tokens\n  POP \t\t\ted when `value` tokens\n  PUSH [tag] 68\t\t\t\\r\\n  /**\\r\\n   * @dev Emitted...\n  JUMP \t\t\t\\r\\n  /**\\r\\n   * @dev Emitted...\ntag 70\t\t\t\\r\\n  /**\\r\\n   * @dev Emitted...\n  JUMPDEST \t\t\t\\r\\n  /**\\r\\n   * @dev Emitted...\n  POP \t\t\tddress recipient, uint256 amou...\n  POP \t\t\tddress recipient, uint256 amou...\n  JUMP \t\t\tddress recipient, uint256 amou...\ntag 33\t\t\talue` may be zero.\\r\\n   */\\r\\...\n  JUMPDEST \t\t\talue` may be zero.\\r\\n   */\\r\\...\n  PUSH 1F\t\t\t\\r\\n\n  DUP3 \t\t\tlue\n  GT \t\t\t value);\\r\\n\\r\n  ISZERO \t\t\t256 value);\\r\\n\\r\\n  /**\\r\\n  ...\n  PUSH [tag] 73\t\t\t256 value);\\r\\n\\r\\n  /**\\r\\n  ...\n  JUMPI \t\t\t256 value);\\r\\n\\r\\n  /**\\r\\n  ...\n  PUSH [tag] 74\t\t\tthe allowance of a `spender` f...\n  DUP2 \t\t\t an `\n  PUSH [tag] 21\t\t\tthe allowance of a `spender` f...\n  JUMP \t\t\tthe allowance of a `spender` f...\ntag 74\t\t\tthe allowance of a `spender` f...\n  JUMPDEST \t\t\tthe allowance of a `spender` f...\n  PUSH [tag] 75\t\t\tlue` is the new allowance.\\r\\n...\n  DUP5 \t\t\tlowance.\\r\\n\n  PUSH [tag] 22\t\t\tlue` is the new allowance.\\r\\n...\n  JUMP \t\t\tlue` is the new allowance.\\r\\n...\ntag 75\t\t\tlue` is the new allowance.\\r\\n...\n  JUMPDEST \t\t\tlue` is the new allowance.\\r\\n...\n  DUP2 \t\t\trove}. `\n  ADD \t\t\t{approve}. `value` is the new ...\n  PUSH 20\t\t\tco\n  DUP6 \t\t\tt executio\n  LT \t\t\trent execution con\n  ISZERO \t\t\tcurrent execution context, inc...\n  PUSH [tag] 76\t\t\tcurrent execution context, inc...\n  JUMPI \t\t\tcurrent execution context, inc...\n  DUP2 \t\t\te\\r\\n * se\n  SWAP1 \t\t\tt, including the\\r\\n * se\n  POP \t\t\tt, including the\\r\\n * se\ntag 76\t\t\tcurrent execution context, inc...\n  JUMPDEST \t\t\tcurrent execution context, inc...\n  PUSH [tag] 77\t\t\tnsaction and its data. While t...\n  PUSH [tag] 78\t\t\tle\\r\\n * via msg.sender \n  DUP6 \t\t\tder\n  PUSH [tag] 22\t\t\tle\\r\\n * via msg.sender \n  JUMP \t\t\tle\\r\\n * via msg.sender \ntag 78\t\t\tle\\r\\n * via msg.sender \n  JUMPDEST \t\t\tle\\r\\n * via msg.sender \n  DUP4 \t\t\tly avail\n  ADD \t\t\terally available\\r\\n * via msg...\n  DUP3 \t\t\tthese are g\n  PUSH [tag] 32\t\t\tnsaction and its data. While t...\n  JUMP \t\t\tnsaction and its data. While t...\ntag 77\t\t\tnsaction and its data. While t...\n  JUMPDEST \t\t\tnsaction and its data. While t...\n  POP \t\t\t  /**\\r\\n   * @dev Emitted whe...\n  POP \t\t\t  /**\\r\\n   * @dev Emitted whe...\ntag 73\t\t\t256 value);\\r\\n\\r\\n  /**\\r\\n  ...\n  JUMPDEST \t\t\t256 value);\\r\\n\\r\\n  /**\\r\\n  ...\n  POP \t\t\talue` may be zero.\\r\\n   */\\r\\...\n  POP \t\t\talue` may be zero.\\r\\n   */\\r\\...\n  POP \t\t\talue` may be zero.\\r\\n   */\\r\\...\n  JUMP \t\t\talue` may be zero.\\r\\n   */\\r\\...\ntag 34\t\t\t not be accessed in such a dir...\n  JUMPDEST \t\t\t not be accessed in such a dir...\n  PUSH 0\t\t\ten deali\n  DUP3 \t\t\tsendi\n  DUP3 \t\t\tcoun\n  SHR \t\t\te account sendin\n  SWAP1 \t\t\t meta-transactions the account...\n  POP \t\t\t meta-transactions the account...\n  SWAP3 \t\t\t not be accessed in such a dir...\n  SWAP2 \t\t\t not be accessed in such a dir...\n  POP \t\t\t not be accessed in such a dir...\n  POP \t\t\t not be accessed in such a dir...\n  JUMP \t\t\t not be accessed in such a dir...\ntag 35\t\t\ting for execution may not be t...\n  JUMPDEST \t\t\ting for execution may not be t...\n  PUSH 0\t\t\ter (as\n  PUSH [tag] 81\t\t\tis concerned).\\r\\n *\\r\\n * Thi...\n  PUSH 0\t\t\tu\n  NOT \t\t\t requi\n  DUP5 \t\t\t is o\n  PUSH 8\t\t\ta\n  MUL \t\t\tontract is on\n  PUSH [tag] 34\t\t\tis concerned).\\r\\n *\\r\\n * Thi...\n  JUMP \t\t\tis concerned).\\r\\n *\\r\\n * Thi...\ntag 81\t\t\tis concerned).\\r\\n *\\r\\n * Thi...\n  JUMPDEST \t\t\tis concerned).\\r\\n *\\r\\n * Thi...\n  NOT \t\t\t\\n * is concerned).\\r\\n *\\r\\n ...\n  DUP1 \t\t\tike \n  DUP4 \t\t\trary\n  AND \t\t\t library-like c\n  SWAP2 \t\t\termediate, library-like c\n  POP \t\t\termediate, library-like c\n  POP \t\t\tfar as an application\\r\\n * is...\n  SWAP3 \t\t\ting for execution may not be t...\n  SWAP2 \t\t\ting for execution may not be t...\n  POP \t\t\ting for execution may not be t...\n  POP \t\t\ting for execution may not be t...\n  JUMP \t\t\ting for execution may not be t...\ntag 36\t\t\t */\\r\\ncontract Context {\\r\\n ...\n  JUMPDEST \t\t\t */\\r\\ncontract Context {\\r\\n ...\n  PUSH 0\t\t\tfrom\n  PUSH [tag] 83\t\t\t() internal view returns (add\n  DUP4 \t\t\t(ad\n  DUP4 \t\t\tturn\n  PUSH [tag] 35\t\t\t() internal view returns (add\n  JUMP \t\t\t() internal view returns (add\ntag 83\t\t\t() internal view returns (add\n  JUMPDEST \t\t\t() internal view returns (add\n  SWAP2 \t\t\tsgSender() internal view retur...\n  POP \t\t\tsgSender() internal view retur...\n  DUP3 \t\t\t  }\n  PUSH 2\t\t\t;\n  MUL \t\t\tnder;\\r\\n  }\\r\n  DUP3 \t\t\tmsg.\n  OR \t\t\trn msg.sender;\\r\\n  }\\r\\n\n  SWAP1 \t\t\t    return msg.sender;\\r\\n  }\\...\n  POP \t\t\t    return msg.sender;\\r\\n  }\\...\n  SWAP3 \t\t\t */\\r\\ncontract Context {\\r\\n ...\n  SWAP2 \t\t\t */\\r\\ncontract Context {\\r\\n ...\n  POP \t\t\t */\\r\\ncontract Context {\\r\\n ...\n  POP \t\t\t */\\r\\ncontract Context {\\r\\n ...\n  JUMP \t\t\t */\\r\\ncontract Context {\\r\\n ...\ntag 11\t\t\tn _msgData() internal view ret...\n  JUMPDEST \t\t\tn _msgData() internal view ret...\n  PUSH [tag] 85\t\t\t bytecode - see https://github...\n  DUP3 \t\t\tm/e\n  PUSH [tag] 17\t\t\t bytecode - see https://github...\n  JUMP \t\t\t bytecode - see https://github...\ntag 85\t\t\t bytecode - see https://github...\n  JUMPDEST \t\t\t bytecode - see https://github...\n  PUSH FFFFFFFFFFFFFFFF\t\t\t\\n * @dev Wrappers \n  DUP2 \t\t\t\\r\\n\\r\\n/*\n  GT \t\t\t\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Wr...\n  ISZERO \t\t\t  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev...\n  PUSH [tag] 86\t\t\t  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev...\n  JUMPI \t\t\t  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev...\n  PUSH [tag] 87\t\t\t Solidity's arithm\n  PUSH [tag] 18\t\t\t Solidity's arithm\n  JUMP \t\t\t Solidity's arithm\ntag 87\t\t\t Solidity's arithm\n  JUMPDEST \t\t\t Solidity's arithm\ntag 86\t\t\t  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev...\n  JUMPDEST \t\t\t  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev...\n  PUSH [tag] 88\t\t\t overflow\\r\\n * checks.\\r\\n *\\...\n  DUP3 \t\t\tithm\n  SLOAD \t\t\t\\n * Arithme\n  PUSH [tag] 20\t\t\t overflow\\r\\n * checks.\\r\\n *\\...\n  JUMP \t\t\t overflow\\r\\n * checks.\\r\\n *\\...\ntag 88\t\t\t overflow\\r\\n * checks.\\r\\n *\\...\n  JUMPDEST \t\t\t overflow\\r\\n * checks.\\r\\n *\\...\n  PUSH [tag] 89\t\t\ts can easily result\\r\\n * in b...\n  DUP3 \t\t\t assum\n  DUP3 \t\t\t usual\n  DUP6 \t\t\tamme\n  PUSH [tag] 33\t\t\ts can easily result\\r\\n * in b...\n  JUMP \t\t\ts can easily result\\r\\n * in b...\ntag 89\t\t\ts can easily result\\r\\n * in b...\n  JUMPDEST \t\t\ts can easily result\\r\\n * in b...\n  PUSH 0\t\t\t\\r\n  PUSH 20\t\t\t sta\n  SWAP1 \t\t\t which is the sta\n  POP \t\t\t which is the sta\n  PUSH 1F\t\t\t p\n  DUP4 \t\t\tgh lev\n  GT \t\t\t high level pr\n  PUSH 1\t\t\tu\n  DUP2 \t\t\t languages.\\r\\n * `SafeMath` r...\n  EQ \t\t\t languages.\\r\\n * `SafeMath` r...\n  PUSH [tag] 91\t\t\t languages.\\r\\n * `SafeMath` r...\n  JUMPI \t\t\t languages.\\r\\n * `SafeMath` r...\n  PUSH 0\t\t\t\\r\n  DUP5 \t\t\tdev Re\n  ISZERO \t\t\t* @dev Returns the subtraction...\n  PUSH [tag] 92\t\t\t* @dev Returns the subtraction...\n  JUMPI \t\t\t* @dev Returns the subtraction...\n  DUP3 \t\t\ters, reve\n  DUP8 \t\t\tint\n  ADD \t\t\tned integers, rever\n  MLOAD \t\t\t unsigned integers, revert\n  SWAP1 \t\t\ton of two unsigned integers, r...\n  POP \t\t\ton of two unsigned integers, r...\ntag 92\t\t\t* @dev Returns the subtraction...\n  JUMPDEST \t\t\t* @dev Returns the subtraction...\n  PUSH [tag] 93\t\t\ts negative).\\r\\n   *\\r\\n   * C...\n  DUP6 \t\t\ttor.\\r\\n\n  DUP3 \t\t\t` ope\n  PUSH [tag] 36\t\t\ts negative).\\r\\n   *\\r\\n   * C...\n  JUMP \t\t\ts negative).\\r\\n   *\\r\\n   * C...\ntag 93\t\t\ts negative).\\r\\n   *\\r\\n   * C...\n  JUMPDEST \t\t\ts negative).\\r\\n   *\\r\\n   * C...\n  DUP7 \t\t\tsult\n  SSTORE \t\t\t the result is negative).\\r\\n ...\n  POP \t\t\tow\");\\r\\n\\r\\n    return c;\\r\\n...\n  PUSH [tag] 90\t\t\tvior in high level programming...\n  JUMP \t\t\tvior in high level programming...\ntag 91\t\t\t languages.\\r\\n * `SafeMath` r...\n  JUMPDEST \t\t\t languages.\\r\\n * `SafeMath` r...\n  PUSH 1F\t\t\ty re\n  NOT \t\t\ton by rev\n  DUP5 \t\t\t intui\n  AND \t\t\tthis intuition by reve\n  PUSH [tag] 94\t\t\tn\\r\\n * operation overflows.\\r...\n  DUP7 \t\t\t * U\n  PUSH [tag] 21\t\t\tn\\r\\n * operation overflows.\\r...\n  JUMP \t\t\tn\\r\\n * operation overflows.\\r...\ntag 94\t\t\tn\\r\\n * operation overflows.\\r...\n  JUMPDEST \t\t\tn\\r\\n * operation overflows.\\r...\n  PUSH 0\t\t\ta\ntag 95\t\t\tecked operations eliminates an...\n  JUMPDEST \t\t\tecked operations eliminates an...\n  DUP3 \t\t\tns elim\n  DUP2 \t\t\tt\n  LT \t\t\terations elimi\n  ISZERO \t\t\tecked operations eliminates an...\n  PUSH [tag] 97\t\t\tecked operations eliminates an...\n  JUMPI \t\t\tecked operations eliminates an...\n  DUP5 \t\t\t.\\r\\n */\\r\\nl\n  DUP10 \t\t\tlwa\n  ADD \t\t\tit always.\\r\\n */\\r\\nli\n  MLOAD \t\t\to use it always.\\r\\n */\\r\\nlib\n  DUP3 \t\t\tmended\n  SSTORE \t\t\ts recommended to use it always...\n  PUSH 1\t\t\ts\n  DUP3 \t\t\tv Retu\n  ADD \t\t\t @dev Returns \n  SWAP2 \t\t\t /**\\r\\n   * @dev Returns \n  POP \t\t\t /**\\r\\n   * @dev Returns \n  PUSH 20\t\t\tin\n  DUP6 \t\t\ters, reve\n  ADD \t\t\tntegers, reverting\n  SWAP5 \t\t\two unsigned integers, revertin...\n  POP \t\t\two unsigned integers, revertin...\n  PUSH 20\t\t\t\\r\\n *\n  DUP2 \t\t\ti\n  ADD \t\t\t entire\\r\\n * \n  SWAP1 \t\t\tes an entire\\r\\n * \n  POP \t\t\tes an entire\\r\\n * \n  PUSH [tag] 95\t\t\tecked operations eliminates an...\n  JUMP \t\t\tecked operations eliminates an...\ntag 97\t\t\tecked operations eliminates an...\n  JUMPDEST \t\t\tecked operations eliminates an...\n  DUP7 \t\t\tt to S\n  DUP4 \t\t\tounterp\n  LT \t\t\t* Counterpart to So\n  ISZERO \t\t\t   * Counterpart to Solidity's...\n  PUSH [tag] 98\t\t\t   * Counterpart to Solidity's...\n  JUMPI \t\t\t   * Counterpart to Solidity's...\n  DUP5 \t\t\t  * - Add\n  DUP10 \t\t\ts:\\r\n  ADD \t\t\tments:\\r\\n   * - Addi\n  MLOAD \t\t\tequirements:\\r\\n   * - Addit\n  PUSH [tag] 99\t\t\tunction add(uint256 a, uint256...\n  PUSH 1F\t\t\t pur\n  DUP10 \t\t\tintern\n  AND \t\t\t b) internal pure\n  DUP3 \t\t\t a, uint2\n  PUSH [tag] 35\t\t\tunction add(uint256 a, uint256...\n  JUMP \t\t\tunction add(uint256 a, uint256...\ntag 99\t\t\tunction add(uint256 a, uint256...\n  JUMPDEST \t\t\tunction add(uint256 a, uint256...\n  DUP4 \t\t\t */\\r\\n \n  SSTORE \t\t\tow.\\r\\n   */\\r\\n  function add...\n  POP \t\t\tidity's `+` operator.\\r\\n   *\\...\ntag 98\t\t\t   * Counterpart to Solidity's...\n  JUMPDEST \t\t\t   * Counterpart to Solidity's...\n  PUSH 1\t\t\t \n  PUSH 2\t\t\tc\n  DUP9 \t\t\trequir\n  MUL \t\t\t    require(c \n  ADD \t\t\tb;\\r\\n    require(c >= a\n  DUP9 \t\t\t= a \n  SSTORE \t\t\tt256 c = a + b;\\r\\n    require...\n  POP \t\t\tges.\\r\\n * `SafeMath` restores...\n  POP \t\t\tges.\\r\\n * `SafeMath` restores...\n  POP \t\t\tges.\\r\\n * `SafeMath` restores...\ntag 90\t\t\tvior in high level programming...\n  JUMPDEST \t\t\tvior in high level programming...\n  POP \t\t\tvior in high level programming...\n  POP \t\t\tarning without generating byte...\n  POP \t\t\tarning without generating byte...\n  POP \t\t\tarning without generating byte...\n  POP \t\t\tn _msgData() internal view ret...\n  POP \t\t\tn _msgData() internal view ret...\n  JUMP \t\t\tn _msgData() internal view ret...\ntag 37\t\t\t\\r\\n   * - Subtraction cannot ...\n  JUMPDEST \t\t\t\\r\\n   * - Subtraction cannot ...\n  PUSH [tag] 101\t\t\trnal pure returns (uint2\n  DUP2 \t\t\t(uint\n  PUSH [tag] 25\t\t\trnal pure returns (uint2\n  JUMP \t\t\trnal pure returns (uint2\ntag 101\t\t\trnal pure returns (uint2\n  JUMPDEST \t\t\trnal pure returns (uint2\n  DUP3 \t\t\t in\n  MSTORE \t\t\tt256 b) internal pure returns ...\n  POP \t\t\t\\r\\n   * - Subtraction cannot ...\n  POP \t\t\t\\r\\n   * - Subtraction cannot ...\n  JUMP \t\t\t\\r\\n   * - Subtraction cannot ...\ntag 14\t\t\tturn sub(a, b, \"SafeMath: subt...\n  JUMPDEST \t\t\tturn sub(a, b, \"SafeMath: subt...\n  PUSH 0\t\t\tctio\n  PUSH 20\t\t\tin\n  DUP3 \t\t\ters, reve\n  ADD \t\t\tntegers, reverting\n  SWAP1 \t\t\tsigned integers, reverting\n  POP \t\t\tsigned integers, reverting\n  PUSH [tag] 103\t\t\tom message on\\r\\n   * overflow...\n  PUSH 0\t\t\t \n  DUP4 \t\t\t).\\r\\n   *\\r\n  ADD \t\t\ttive).\\r\\n   *\\r\\n   \n  DUP5 \t\t\tt is n\n  PUSH [tag] 37\t\t\tom message on\\r\\n   * overflow...\n  JUMP \t\t\tom message on\\r\\n   * overflow...\ntag 103\t\t\tom message on\\r\\n   * overflow...\n  JUMPDEST \t\t\tom message on\\r\\n   * overflow...\n  SWAP3 \t\t\tturn sub(a, b, \"SafeMath: subt...\n  SWAP2 \t\t\tturn sub(a, b, \"SafeMath: subt...\n  POP \t\t\tturn sub(a, b, \"SafeMath: subt...\n  POP \t\t\tturn sub(a, b, \"SafeMath: subt...\n  JUMP \t\t\tturn sub(a, b, \"SafeMath: subt...\ntag 15\t\t\tcontract BEP20Token is Context...\n  JUMPDEST \t\t\tcontract BEP20Token is Context...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract BEP20Token is Context...\n  DUP1 \t\t\tcontract BEP20Token is Context...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract BEP20Token is Context...\n  PUSH 0\t\t\tcontract BEP20Token is Context...\n  CODECOPY \t\t\tcontract BEP20Token is Context...\n  PUSH 0\t\t\tcontract BEP20Token is Context...\n  RETURN \t\t\tcontract BEP20Token is Context...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract BEP20Token is Context...\n      PUSH 40\t\t\tcontract BEP20Token is Context...\n      MSTORE \t\t\tcontract BEP20Token is Context...\n      CALLVALUE \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      ISZERO \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 1\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      PUSH 0\t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      REVERT \t\t\tcontract BEP20Token is Context...\n    tag 1\t\t\tcontract BEP20Token is Context...\n      JUMPDEST \t\t\tcontract BEP20Token is Context...\n      POP \t\t\tcontract BEP20Token is Context...\n      PUSH 4\t\t\tcontract BEP20Token is Context...\n      CALLDATASIZE \t\t\tcontract BEP20Token is Context...\n      LT \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 2\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      PUSH 0\t\t\tcontract BEP20Token is Context...\n      CALLDATALOAD \t\t\tcontract BEP20Token is Context...\n      PUSH E0\t\t\tcontract BEP20Token is Context...\n      SHR \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 893D20E8\t\t\tcontract BEP20Token is Context...\n      GT \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 19\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH A457C2D7\t\t\tcontract BEP20Token is Context...\n      GT \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 20\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH A457C2D7\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 15\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH A9059CBB\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 16\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH DD62ED3E\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 17\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH F2FDE38B\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 18\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 2\t\t\tcontract BEP20Token is Context...\n      JUMP \t\t\tcontract BEP20Token is Context...\n    tag 20\t\t\tcontract BEP20Token is Context...\n      JUMPDEST \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 893D20E8\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 11\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 8DA5CB5B\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 12\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 95D89B41\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 13\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH A0712D68\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 14\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 2\t\t\tcontract BEP20Token is Context...\n      JUMP \t\t\tcontract BEP20Token is Context...\n    tag 19\t\t\tcontract BEP20Token is Context...\n      JUMPDEST \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 313CE567\t\t\tcontract BEP20Token is Context...\n      GT \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 21\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 313CE567\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 7\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 39509351\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 8\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 70A08231\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 9\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 715018A6\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 10\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 2\t\t\tcontract BEP20Token is Context...\n      JUMP \t\t\tcontract BEP20Token is Context...\n    tag 21\t\t\tcontract BEP20Token is Context...\n      JUMPDEST \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 6FDDE03\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 3\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 95EA7B3\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 4\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 18160DDD\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 5\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      PUSH 23B872DD\t\t\tcontract BEP20Token is Context...\n      EQ \t\t\tcontract BEP20Token is Context...\n      PUSH [tag] 6\t\t\tcontract BEP20Token is Context...\n      JUMPI \t\t\tcontract BEP20Token is Context...\n    tag 2\t\t\tcontract BEP20Token is Context...\n      JUMPDEST \t\t\tcontract BEP20Token is Context...\n      PUSH 0\t\t\tcontract BEP20Token is Context...\n      DUP1 \t\t\tcontract BEP20Token is Context...\n      REVERT \t\t\tcontract BEP20Token is Context...\n    tag 3\t\t\tfunction name() external view ...\n      JUMPDEST \t\t\tfunction name() external view ...\n      PUSH [tag] 22\t\t\tfunction name() external view ...\n      PUSH [tag] 23\t\t\tfunction name() external view ...\n      JUMP \t\t\tfunction name() external view ...\n    tag 22\t\t\tfunction name() external view ...\n      JUMPDEST \t\t\tfunction name() external view ...\n      PUSH 40\t\t\tfunction name() external view ...\n      MLOAD \t\t\tfunction name() external view ...\n      PUSH [tag] 24\t\t\tfunction name() external view ...\n      SWAP2 \t\t\tfunction name() external view ...\n      SWAP1 \t\t\tfunction name() external view ...\n      PUSH [tag] 25\t\t\tfunction name() external view ...\n      JUMP \t\t\tfunction name() external view ...\n    tag 24\t\t\tfunction name() external view ...\n      JUMPDEST \t\t\tfunction name() external view ...\n      PUSH 40\t\t\tfunction name() external view ...\n      MLOAD \t\t\tfunction name() external view ...\n      DUP1 \t\t\tfunction name() external view ...\n      SWAP2 \t\t\tfunction name() external view ...\n      SUB \t\t\tfunction name() external view ...\n      SWAP1 \t\t\tfunction name() external view ...\n      RETURN \t\t\tfunction name() external view ...\n    tag 4\t\t\tfunction approve(address spend...\n      JUMPDEST \t\t\tfunction approve(address spend...\n      PUSH [tag] 26\t\t\tfunction approve(address spend...\n      PUSH 4\t\t\tfunction approve(address spend...\n      DUP1 \t\t\tfunction approve(address spend...\n      CALLDATASIZE \t\t\tfunction approve(address spend...\n      SUB \t\t\tfunction approve(address spend...\n      DUP2 \t\t\tfunction approve(address spend...\n      ADD \t\t\tfunction approve(address spend...\n      SWAP1 \t\t\tfunction approve(address spend...\n      PUSH [tag] 27\t\t\tfunction approve(address spend...\n      SWAP2 \t\t\tfunction approve(address spend...\n      SWAP1 \t\t\tfunction approve(address spend...\n      PUSH [tag] 28\t\t\tfunction approve(address spend...\n      JUMP \t\t\tfunction approve(address spend...\n    tag 27\t\t\tfunction approve(address spend...\n      JUMPDEST \t\t\tfunction approve(address spend...\n      PUSH [tag] 29\t\t\tfunction approve(address spend...\n      JUMP \t\t\tfunction approve(address spend...\n    tag 26\t\t\tfunction approve(address spend...\n      JUMPDEST \t\t\tfunction approve(address spend...\n      PUSH 40\t\t\tfunction approve(address spend...\n      MLOAD \t\t\tfunction approve(address spend...\n      PUSH [tag] 30\t\t\tfunction approve(address spend...\n      SWAP2 \t\t\tfunction approve(address spend...\n      SWAP1 \t\t\tfunction approve(address spend...\n      PUSH [tag] 31\t\t\tfunction approve(address spend...\n      JUMP \t\t\tfunction approve(address spend...\n    tag 30\t\t\tfunction approve(address spend...\n      JUMPDEST \t\t\tfunction approve(address spend...\n      PUSH 40\t\t\tfunction approve(address spend...\n      MLOAD \t\t\tfunction approve(address spend...\n      DUP1 \t\t\tfunction approve(address spend...\n      SWAP2 \t\t\tfunction approve(address spend...\n      SUB \t\t\tfunction approve(address spend...\n      SWAP1 \t\t\tfunction approve(address spend...\n      RETURN \t\t\tfunction approve(address spend...\n    tag 5\t\t\tfunction totalSupply() externa...\n      JUMPDEST \t\t\tfunction totalSupply() externa...\n      PUSH [tag] 32\t\t\tfunction totalSupply() externa...\n      PUSH [tag] 33\t\t\tfunction totalSupply() externa...\n      JUMP \t\t\tfunction totalSupply() externa...\n    tag 32\t\t\tfunction totalSupply() externa...\n      JUMPDEST \t\t\tfunction totalSupply() externa...\n      PUSH 40\t\t\tfunction totalSupply() externa...\n      MLOAD \t\t\tfunction totalSupply() externa...\n      PUSH [tag] 34\t\t\tfunction totalSupply() externa...\n      SWAP2 \t\t\tfunction totalSupply() externa...\n      SWAP1 \t\t\tfunction totalSupply() externa...\n      PUSH [tag] 35\t\t\tfunction totalSupply() externa...\n      JUMP \t\t\tfunction totalSupply() externa...\n    tag 34\t\t\tfunction totalSupply() externa...\n      JUMPDEST \t\t\tfunction totalSupply() externa...\n      PUSH 40\t\t\tfunction totalSupply() externa...\n      MLOAD \t\t\tfunction totalSupply() externa...\n      DUP1 \t\t\tfunction totalSupply() externa...\n      SWAP2 \t\t\tfunction totalSupply() externa...\n      SUB \t\t\tfunction totalSupply() externa...\n      SWAP1 \t\t\tfunction totalSupply() externa...\n      RETURN \t\t\tfunction totalSupply() externa...\n    tag 6\t\t\tfunction transferFrom(address ...\n      JUMPDEST \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 36\t\t\tfunction transferFrom(address ...\n      PUSH 4\t\t\tfunction transferFrom(address ...\n      DUP1 \t\t\tfunction transferFrom(address ...\n      CALLDATASIZE \t\t\tfunction transferFrom(address ...\n      SUB \t\t\tfunction transferFrom(address ...\n      DUP2 \t\t\tfunction transferFrom(address ...\n      ADD \t\t\tfunction transferFrom(address ...\n      SWAP1 \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 37\t\t\tfunction transferFrom(address ...\n      SWAP2 \t\t\tfunction transferFrom(address ...\n      SWAP1 \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 38\t\t\tfunction transferFrom(address ...\n      JUMP \t\t\tfunction transferFrom(address ...\n    tag 37\t\t\tfunction transferFrom(address ...\n      JUMPDEST \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 39\t\t\tfunction transferFrom(address ...\n      JUMP \t\t\tfunction transferFrom(address ...\n    tag 36\t\t\tfunction transferFrom(address ...\n      JUMPDEST \t\t\tfunction transferFrom(address ...\n      PUSH 40\t\t\tfunction transferFrom(address ...\n      MLOAD \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 40\t\t\tfunction transferFrom(address ...\n      SWAP2 \t\t\tfunction transferFrom(address ...\n      SWAP1 \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 31\t\t\tfunction transferFrom(address ...\n      JUMP \t\t\tfunction transferFrom(address ...\n    tag 40\t\t\tfunction transferFrom(address ...\n      JUMPDEST \t\t\tfunction transferFrom(address ...\n      PUSH 40\t\t\tfunction transferFrom(address ...\n      MLOAD \t\t\tfunction transferFrom(address ...\n      DUP1 \t\t\tfunction transferFrom(address ...\n      SWAP2 \t\t\tfunction transferFrom(address ...\n      SUB \t\t\tfunction transferFrom(address ...\n      SWAP1 \t\t\tfunction transferFrom(address ...\n      RETURN \t\t\tfunction transferFrom(address ...\n    tag 7\t\t\tfunction decimals() external v...\n      JUMPDEST \t\t\tfunction decimals() external v...\n      PUSH [tag] 41\t\t\tfunction decimals() external v...\n      PUSH [tag] 42\t\t\tfunction decimals() external v...\n      JUMP \t\t\tfunction decimals() external v...\n    tag 41\t\t\tfunction decimals() external v...\n      JUMPDEST \t\t\tfunction decimals() external v...\n      PUSH 40\t\t\tfunction decimals() external v...\n      MLOAD \t\t\tfunction decimals() external v...\n      PUSH [tag] 43\t\t\tfunction decimals() external v...\n      SWAP2 \t\t\tfunction decimals() external v...\n      SWAP1 \t\t\tfunction decimals() external v...\n      PUSH [tag] 44\t\t\tfunction decimals() external v...\n      JUMP \t\t\tfunction decimals() external v...\n    tag 43\t\t\tfunction decimals() external v...\n      JUMPDEST \t\t\tfunction decimals() external v...\n      PUSH 40\t\t\tfunction decimals() external v...\n      MLOAD \t\t\tfunction decimals() external v...\n      DUP1 \t\t\tfunction decimals() external v...\n      SWAP2 \t\t\tfunction decimals() external v...\n      SUB \t\t\tfunction decimals() external v...\n      SWAP1 \t\t\tfunction decimals() external v...\n      RETURN \t\t\tfunction decimals() external v...\n    tag 8\t\t\tfunction increaseAllowance(add...\n      JUMPDEST \t\t\tfunction increaseAllowance(add...\n      PUSH [tag] 45\t\t\tfunction increaseAllowance(add...\n      PUSH 4\t\t\tfunction increaseAllowance(add...\n      DUP1 \t\t\tfunction increaseAllowance(add...\n      CALLDATASIZE \t\t\tfunction increaseAllowance(add...\n      SUB \t\t\tfunction increaseAllowance(add...\n      DUP2 \t\t\tfunction increaseAllowance(add...\n      ADD \t\t\tfunction increaseAllowance(add...\n      SWAP1 \t\t\tfunction increaseAllowance(add...\n      PUSH [tag] 46\t\t\tfunction increaseAllowance(add...\n      SWAP2 \t\t\tfunction increaseAllowance(add...\n      SWAP1 \t\t\tfunction increaseAllowance(add...\n      PUSH [tag] 28\t\t\tfunction increaseAllowance(add...\n      JUMP \t\t\tfunction increaseAllowance(add...\n    tag 46\t\t\tfunction increaseAllowance(add...\n      JUMPDEST \t\t\tfunction increaseAllowance(add...\n      PUSH [tag] 47\t\t\tfunction increaseAllowance(add...\n      JUMP \t\t\tfunction increaseAllowance(add...\n    tag 45\t\t\tfunction increaseAllowance(add...\n      JUMPDEST \t\t\tfunction increaseAllowance(add...\n      PUSH 40\t\t\tfunction increaseAllowance(add...\n      MLOAD \t\t\tfunction increaseAllowance(add...\n      PUSH [tag] 48\t\t\tfunction increaseAllowance(add...\n      SWAP2 \t\t\tfunction increaseAllowance(add...\n      SWAP1 \t\t\tfunction increaseAllowance(add...\n      PUSH [tag] 31\t\t\tfunction increaseAllowance(add...\n      JUMP \t\t\tfunction increaseAllowance(add...\n    tag 48\t\t\tfunction increaseAllowance(add...\n      JUMPDEST \t\t\tfunction increaseAllowance(add...\n      PUSH 40\t\t\tfunction increaseAllowance(add...\n      MLOAD \t\t\tfunction increaseAllowance(add...\n      DUP1 \t\t\tfunction increaseAllowance(add...\n      SWAP2 \t\t\tfunction increaseAllowance(add...\n      SUB \t\t\tfunction increaseAllowance(add...\n      SWAP1 \t\t\tfunction increaseAllowance(add...\n      RETURN \t\t\tfunction increaseAllowance(add...\n    tag 9\t\t\tfunction balanceOf(address acc...\n      JUMPDEST \t\t\tfunction balanceOf(address acc...\n      PUSH [tag] 49\t\t\tfunction balanceOf(address acc...\n      PUSH 4\t\t\tfunction balanceOf(address acc...\n      DUP1 \t\t\tfunction balanceOf(address acc...\n      CALLDATASIZE \t\t\tfunction balanceOf(address acc...\n      SUB \t\t\tfunction balanceOf(address acc...\n      DUP2 \t\t\tfunction balanceOf(address acc...\n      ADD \t\t\tfunction balanceOf(address acc...\n      SWAP1 \t\t\tfunction balanceOf(address acc...\n      PUSH [tag] 50\t\t\tfunction balanceOf(address acc...\n      SWAP2 \t\t\tfunction balanceOf(address acc...\n      SWAP1 \t\t\tfunction balanceOf(address acc...\n      PUSH [tag] 51\t\t\tfunction balanceOf(address acc...\n      JUMP \t\t\tfunction balanceOf(address acc...\n    tag 50\t\t\tfunction balanceOf(address acc...\n      JUMPDEST \t\t\tfunction balanceOf(address acc...\n      PUSH [tag] 52\t\t\tfunction balanceOf(address acc...\n      JUMP \t\t\tfunction balanceOf(address acc...\n    tag 49\t\t\tfunction balanceOf(address acc...\n      JUMPDEST \t\t\tfunction balanceOf(address acc...\n      PUSH 40\t\t\tfunction balanceOf(address acc...\n      MLOAD \t\t\tfunction balanceOf(address acc...\n      PUSH [tag] 53\t\t\tfunction balanceOf(address acc...\n      SWAP2 \t\t\tfunction balanceOf(address acc...\n      SWAP1 \t\t\tfunction balanceOf(address acc...\n      PUSH [tag] 35\t\t\tfunction balanceOf(address acc...\n      JUMP \t\t\tfunction balanceOf(address acc...\n    tag 53\t\t\tfunction balanceOf(address acc...\n      JUMPDEST \t\t\tfunction balanceOf(address acc...\n      PUSH 40\t\t\tfunction balanceOf(address acc...\n      MLOAD \t\t\tfunction balanceOf(address acc...\n      DUP1 \t\t\tfunction balanceOf(address acc...\n      SWAP2 \t\t\tfunction balanceOf(address acc...\n      SUB \t\t\tfunction balanceOf(address acc...\n      SWAP1 \t\t\tfunction balanceOf(address acc...\n      RETURN \t\t\tfunction balanceOf(address acc...\n    tag 10\t\t\tfunction renounceOwnership() p...\n      JUMPDEST \t\t\tfunction renounceOwnership() p...\n      PUSH [tag] 54\t\t\tfunction renounceOwnership() p...\n      PUSH [tag] 55\t\t\tfunction renounceOwnership() p...\n      JUMP \t\t\tfunction renounceOwnership() p...\n    tag 54\t\t\tfunction renounceOwnership() p...\n      JUMPDEST \t\t\tfunction renounceOwnership() p...\n      STOP \t\t\tfunction renounceOwnership() p...\n    tag 11\t\t\tfunction getOwner() external v...\n      JUMPDEST \t\t\tfunction getOwner() external v...\n      PUSH [tag] 56\t\t\tfunction getOwner() external v...\n      PUSH [tag] 57\t\t\tfunction getOwner() external v...\n      JUMP \t\t\tfunction getOwner() external v...\n    tag 56\t\t\tfunction getOwner() external v...\n      JUMPDEST \t\t\tfunction getOwner() external v...\n      PUSH 40\t\t\tfunction getOwner() external v...\n      MLOAD \t\t\tfunction getOwner() external v...\n      PUSH [tag] 58\t\t\tfunction getOwner() external v...\n      SWAP2 \t\t\tfunction getOwner() external v...\n      SWAP1 \t\t\tfunction getOwner() external v...\n      PUSH [tag] 59\t\t\tfunction getOwner() external v...\n      JUMP \t\t\tfunction getOwner() external v...\n    tag 58\t\t\tfunction getOwner() external v...\n      JUMPDEST \t\t\tfunction getOwner() external v...\n      PUSH 40\t\t\tfunction getOwner() external v...\n      MLOAD \t\t\tfunction getOwner() external v...\n      DUP1 \t\t\tfunction getOwner() external v...\n      SWAP2 \t\t\tfunction getOwner() external v...\n      SUB \t\t\tfunction getOwner() external v...\n      SWAP1 \t\t\tfunction getOwner() external v...\n      RETURN \t\t\tfunction getOwner() external v...\n    tag 12\t\t\tfunction owner() public view r...\n      JUMPDEST \t\t\tfunction owner() public view r...\n      PUSH [tag] 60\t\t\tfunction owner() public view r...\n      PUSH [tag] 61\t\t\tfunction owner() public view r...\n      JUMP \t\t\tfunction owner() public view r...\n    tag 60\t\t\tfunction owner() public view r...\n      JUMPDEST \t\t\tfunction owner() public view r...\n      PUSH 40\t\t\tfunction owner() public view r...\n      MLOAD \t\t\tfunction owner() public view r...\n      PUSH [tag] 62\t\t\tfunction owner() public view r...\n      SWAP2 \t\t\tfunction owner() public view r...\n      SWAP1 \t\t\tfunction owner() public view r...\n      PUSH [tag] 59\t\t\tfunction owner() public view r...\n      JUMP \t\t\tfunction owner() public view r...\n    tag 62\t\t\tfunction owner() public view r...\n      JUMPDEST \t\t\tfunction owner() public view r...\n      PUSH 40\t\t\tfunction owner() public view r...\n      MLOAD \t\t\tfunction owner() public view r...\n      DUP1 \t\t\tfunction owner() public view r...\n      SWAP2 \t\t\tfunction owner() public view r...\n      SUB \t\t\tfunction owner() public view r...\n      SWAP1 \t\t\tfunction owner() public view r...\n      RETURN \t\t\tfunction owner() public view r...\n    tag 13\t\t\tfunction symbol() external vie...\n      JUMPDEST \t\t\tfunction symbol() external vie...\n      PUSH [tag] 63\t\t\tfunction symbol() external vie...\n      PUSH [tag] 64\t\t\tfunction symbol() external vie...\n      JUMP \t\t\tfunction symbol() external vie...\n    tag 63\t\t\tfunction symbol() external vie...\n      JUMPDEST \t\t\tfunction symbol() external vie...\n      PUSH 40\t\t\tfunction symbol() external vie...\n      MLOAD \t\t\tfunction symbol() external vie...\n      PUSH [tag] 65\t\t\tfunction symbol() external vie...\n      SWAP2 \t\t\tfunction symbol() external vie...\n      SWAP1 \t\t\tfunction symbol() external vie...\n      PUSH [tag] 25\t\t\tfunction symbol() external vie...\n      JUMP \t\t\tfunction symbol() external vie...\n    tag 65\t\t\tfunction symbol() external vie...\n      JUMPDEST \t\t\tfunction symbol() external vie...\n      PUSH 40\t\t\tfunction symbol() external vie...\n      MLOAD \t\t\tfunction symbol() external vie...\n      DUP1 \t\t\tfunction symbol() external vie...\n      SWAP2 \t\t\tfunction symbol() external vie...\n      SUB \t\t\tfunction symbol() external vie...\n      SWAP1 \t\t\tfunction symbol() external vie...\n      RETURN \t\t\tfunction symbol() external vie...\n    tag 14\t\t\tfunction mint(uint256 amount) ...\n      JUMPDEST \t\t\tfunction mint(uint256 amount) ...\n      PUSH [tag] 66\t\t\tfunction mint(uint256 amount) ...\n      PUSH 4\t\t\tfunction mint(uint256 amount) ...\n      DUP1 \t\t\tfunction mint(uint256 amount) ...\n      CALLDATASIZE \t\t\tfunction mint(uint256 amount) ...\n      SUB \t\t\tfunction mint(uint256 amount) ...\n      DUP2 \t\t\tfunction mint(uint256 amount) ...\n      ADD \t\t\tfunction mint(uint256 amount) ...\n      SWAP1 \t\t\tfunction mint(uint256 amount) ...\n      PUSH [tag] 67\t\t\tfunction mint(uint256 amount) ...\n      SWAP2 \t\t\tfunction mint(uint256 amount) ...\n      SWAP1 \t\t\tfunction mint(uint256 amount) ...\n      PUSH [tag] 68\t\t\tfunction mint(uint256 amount) ...\n      JUMP \t\t\tfunction mint(uint256 amount) ...\n    tag 67\t\t\tfunction mint(uint256 amount) ...\n      JUMPDEST \t\t\tfunction mint(uint256 amount) ...\n      PUSH [tag] 69\t\t\tfunction mint(uint256 amount) ...\n      JUMP \t\t\tfunction mint(uint256 amount) ...\n    tag 66\t\t\tfunction mint(uint256 amount) ...\n      JUMPDEST \t\t\tfunction mint(uint256 amount) ...\n      PUSH 40\t\t\tfunction mint(uint256 amount) ...\n      MLOAD \t\t\tfunction mint(uint256 amount) ...\n      PUSH [tag] 70\t\t\tfunction mint(uint256 amount) ...\n      SWAP2 \t\t\tfunction mint(uint256 amount) ...\n      SWAP1 \t\t\tfunction mint(uint256 amount) ...\n      PUSH [tag] 31\t\t\tfunction mint(uint256 amount) ...\n      JUMP \t\t\tfunction mint(uint256 amount) ...\n    tag 70\t\t\tfunction mint(uint256 amount) ...\n      JUMPDEST \t\t\tfunction mint(uint256 amount) ...\n      PUSH 40\t\t\tfunction mint(uint256 amount) ...\n      MLOAD \t\t\tfunction mint(uint256 amount) ...\n      DUP1 \t\t\tfunction mint(uint256 amount) ...\n      SWAP2 \t\t\tfunction mint(uint256 amount) ...\n      SUB \t\t\tfunction mint(uint256 amount) ...\n      SWAP1 \t\t\tfunction mint(uint256 amount) ...\n      RETURN \t\t\tfunction mint(uint256 amount) ...\n    tag 15\t\t\tfunction decreaseAllowance(add...\n      JUMPDEST \t\t\tfunction decreaseAllowance(add...\n      PUSH [tag] 71\t\t\tfunction decreaseAllowance(add...\n      PUSH 4\t\t\tfunction decreaseAllowance(add...\n      DUP1 \t\t\tfunction decreaseAllowance(add...\n      CALLDATASIZE \t\t\tfunction decreaseAllowance(add...\n      SUB \t\t\tfunction decreaseAllowance(add...\n      DUP2 \t\t\tfunction decreaseAllowance(add...\n      ADD \t\t\tfunction decreaseAllowance(add...\n      SWAP1 \t\t\tfunction decreaseAllowance(add...\n      PUSH [tag] 72\t\t\tfunction decreaseAllowance(add...\n      SWAP2 \t\t\tfunction decreaseAllowance(add...\n      SWAP1 \t\t\tfunction decreaseAllowance(add...\n      PUSH [tag] 28\t\t\tfunction decreaseAllowance(add...\n      JUMP \t\t\tfunction decreaseAllowance(add...\n    tag 72\t\t\tfunction decreaseAllowance(add...\n      JUMPDEST \t\t\tfunction decreaseAllowance(add...\n      PUSH [tag] 73\t\t\tfunction decreaseAllowance(add...\n      JUMP \t\t\tfunction decreaseAllowance(add...\n    tag 71\t\t\tfunction decreaseAllowance(add...\n      JUMPDEST \t\t\tfunction decreaseAllowance(add...\n      PUSH 40\t\t\tfunction decreaseAllowance(add...\n      MLOAD \t\t\tfunction decreaseAllowance(add...\n      PUSH [tag] 74\t\t\tfunction decreaseAllowance(add...\n      SWAP2 \t\t\tfunction decreaseAllowance(add...\n      SWAP1 \t\t\tfunction decreaseAllowance(add...\n      PUSH [tag] 31\t\t\tfunction decreaseAllowance(add...\n      JUMP \t\t\tfunction decreaseAllowance(add...\n    tag 74\t\t\tfunction decreaseAllowance(add...\n      JUMPDEST \t\t\tfunction decreaseAllowance(add...\n      PUSH 40\t\t\tfunction decreaseAllowance(add...\n      MLOAD \t\t\tfunction decreaseAllowance(add...\n      DUP1 \t\t\tfunction decreaseAllowance(add...\n      SWAP2 \t\t\tfunction decreaseAllowance(add...\n      SUB \t\t\tfunction decreaseAllowance(add...\n      SWAP1 \t\t\tfunction decreaseAllowance(add...\n      RETURN \t\t\tfunction decreaseAllowance(add...\n    tag 16\t\t\tfunction transfer(address reci...\n      JUMPDEST \t\t\tfunction transfer(address reci...\n      PUSH [tag] 75\t\t\tfunction transfer(address reci...\n      PUSH 4\t\t\tfunction transfer(address reci...\n      DUP1 \t\t\tfunction transfer(address reci...\n      CALLDATASIZE \t\t\tfunction transfer(address reci...\n      SUB \t\t\tfunction transfer(address reci...\n      DUP2 \t\t\tfunction transfer(address reci...\n      ADD \t\t\tfunction transfer(address reci...\n      SWAP1 \t\t\tfunction transfer(address reci...\n      PUSH [tag] 76\t\t\tfunction transfer(address reci...\n      SWAP2 \t\t\tfunction transfer(address reci...\n      SWAP1 \t\t\tfunction transfer(address reci...\n      PUSH [tag] 28\t\t\tfunction transfer(address reci...\n      JUMP \t\t\tfunction transfer(address reci...\n    tag 76\t\t\tfunction transfer(address reci...\n      JUMPDEST \t\t\tfunction transfer(address reci...\n      PUSH [tag] 77\t\t\tfunction transfer(address reci...\n      JUMP \t\t\tfunction transfer(address reci...\n    tag 75\t\t\tfunction transfer(address reci...\n      JUMPDEST \t\t\tfunction transfer(address reci...\n      PUSH 40\t\t\tfunction transfer(address reci...\n      MLOAD \t\t\tfunction transfer(address reci...\n      PUSH [tag] 78\t\t\tfunction transfer(address reci...\n      SWAP2 \t\t\tfunction transfer(address reci...\n      SWAP1 \t\t\tfunction transfer(address reci...\n      PUSH [tag] 31\t\t\tfunction transfer(address reci...\n      JUMP \t\t\tfunction transfer(address reci...\n    tag 78\t\t\tfunction transfer(address reci...\n      JUMPDEST \t\t\tfunction transfer(address reci...\n      PUSH 40\t\t\tfunction transfer(address reci...\n      MLOAD \t\t\tfunction transfer(address reci...\n      DUP1 \t\t\tfunction transfer(address reci...\n      SWAP2 \t\t\tfunction transfer(address reci...\n      SUB \t\t\tfunction transfer(address reci...\n      SWAP1 \t\t\tfunction transfer(address reci...\n      RETURN \t\t\tfunction transfer(address reci...\n    tag 17\t\t\tfunction allowance(address own...\n      JUMPDEST \t\t\tfunction allowance(address own...\n      PUSH [tag] 79\t\t\tfunction allowance(address own...\n      PUSH 4\t\t\tfunction allowance(address own...\n      DUP1 \t\t\tfunction allowance(address own...\n      CALLDATASIZE \t\t\tfunction allowance(address own...\n      SUB \t\t\tfunction allowance(address own...\n      DUP2 \t\t\tfunction allowance(address own...\n      ADD \t\t\tfunction allowance(address own...\n      SWAP1 \t\t\tfunction allowance(address own...\n      PUSH [tag] 80\t\t\tfunction allowance(address own...\n      SWAP2 \t\t\tfunction allowance(address own...\n      SWAP1 \t\t\tfunction allowance(address own...\n      PUSH [tag] 81\t\t\tfunction allowance(address own...\n      JUMP \t\t\tfunction allowance(address own...\n    tag 80\t\t\tfunction allowance(address own...\n      JUMPDEST \t\t\tfunction allowance(address own...\n      PUSH [tag] 82\t\t\tfunction allowance(address own...\n      JUMP \t\t\tfunction allowance(address own...\n    tag 79\t\t\tfunction allowance(address own...\n      JUMPDEST \t\t\tfunction allowance(address own...\n      PUSH 40\t\t\tfunction allowance(address own...\n      MLOAD \t\t\tfunction allowance(address own...\n      PUSH [tag] 83\t\t\tfunction allowance(address own...\n      SWAP2 \t\t\tfunction allowance(address own...\n      SWAP1 \t\t\tfunction allowance(address own...\n      PUSH [tag] 35\t\t\tfunction allowance(address own...\n      JUMP \t\t\tfunction allowance(address own...\n    tag 83\t\t\tfunction allowance(address own...\n      JUMPDEST \t\t\tfunction allowance(address own...\n      PUSH 40\t\t\tfunction allowance(address own...\n      MLOAD \t\t\tfunction allowance(address own...\n      DUP1 \t\t\tfunction allowance(address own...\n      SWAP2 \t\t\tfunction allowance(address own...\n      SUB \t\t\tfunction allowance(address own...\n      SWAP1 \t\t\tfunction allowance(address own...\n      RETURN \t\t\tfunction allowance(address own...\n    tag 18\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 84\t\t\tfunction transferOwnership(add...\n      PUSH 4\t\t\tfunction transferOwnership(add...\n      DUP1 \t\t\tfunction transferOwnership(add...\n      CALLDATASIZE \t\t\tfunction transferOwnership(add...\n      SUB \t\t\tfunction transferOwnership(add...\n      DUP2 \t\t\tfunction transferOwnership(add...\n      ADD \t\t\tfunction transferOwnership(add...\n      SWAP1 \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 85\t\t\tfunction transferOwnership(add...\n      SWAP2 \t\t\tfunction transferOwnership(add...\n      SWAP1 \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 51\t\t\tfunction transferOwnership(add...\n      JUMP \t\t\tfunction transferOwnership(add...\n    tag 85\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 86\t\t\tfunction transferOwnership(add...\n      JUMP \t\t\tfunction transferOwnership(add...\n    tag 84\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      STOP \t\t\tfunction transferOwnership(add...\n    tag 23\t\t\tfunction name() external view ...\n      JUMPDEST \t\t\tfunction name() external view ...\n      PUSH 60\t\t\tstring memory\n      PUSH 6\t\t\t_name\n      DUP1 \t\t\treturn _name\n      SLOAD \t\t\treturn _name\n      PUSH [tag] 88\t\t\treturn _name\n      SWAP1 \t\t\treturn _name\n      PUSH [tag] 89\t\t\treturn _name\n      JUMP \t\t\treturn _name\n    tag 88\t\t\treturn _name\n      JUMPDEST \t\t\treturn _name\n      DUP1 \t\t\treturn _name\n      PUSH 1F\t\t\treturn _name\n      ADD \t\t\treturn _name\n      PUSH 20\t\t\treturn _name\n      DUP1 \t\t\treturn _name\n      SWAP2 \t\t\treturn _name\n      DIV \t\t\treturn _name\n      MUL \t\t\treturn _name\n      PUSH 20\t\t\treturn _name\n      ADD \t\t\treturn _name\n      PUSH 40\t\t\treturn _name\n      MLOAD \t\t\treturn _name\n      SWAP1 \t\t\treturn _name\n      DUP2 \t\t\treturn _name\n      ADD \t\t\treturn _name\n      PUSH 40\t\t\treturn _name\n      MSTORE \t\t\treturn _name\n      DUP1 \t\t\treturn _name\n      SWAP3 \t\t\treturn _name\n      SWAP2 \t\t\treturn _name\n      SWAP1 \t\t\treturn _name\n      DUP2 \t\t\treturn _name\n      DUP2 \t\t\treturn _name\n      MSTORE \t\t\treturn _name\n      PUSH 20\t\t\treturn _name\n      ADD \t\t\treturn _name\n      DUP3 \t\t\treturn _name\n      DUP1 \t\t\treturn _name\n      SLOAD \t\t\treturn _name\n      PUSH [tag] 90\t\t\treturn _name\n      SWAP1 \t\t\treturn _name\n      PUSH [tag] 89\t\t\treturn _name\n      JUMP \t\t\treturn _name\n    tag 90\t\t\treturn _name\n      JUMPDEST \t\t\treturn _name\n      DUP1 \t\t\treturn _name\n      ISZERO \t\t\treturn _name\n      PUSH [tag] 91\t\t\treturn _name\n      JUMPI \t\t\treturn _name\n      DUP1 \t\t\treturn _name\n      PUSH 1F\t\t\treturn _name\n      LT \t\t\treturn _name\n      PUSH [tag] 92\t\t\treturn _name\n      JUMPI \t\t\treturn _name\n      PUSH 100\t\t\treturn _name\n      DUP1 \t\t\treturn _name\n      DUP4 \t\t\treturn _name\n      SLOAD \t\t\treturn _name\n      DIV \t\t\treturn _name\n      MUL \t\t\treturn _name\n      DUP4 \t\t\treturn _name\n      MSTORE \t\t\treturn _name\n      SWAP2 \t\t\treturn _name\n      PUSH 20\t\t\treturn _name\n      ADD \t\t\treturn _name\n      SWAP2 \t\t\treturn _name\n      PUSH [tag] 91\t\t\treturn _name\n      JUMP \t\t\treturn _name\n    tag 92\t\t\treturn _name\n      JUMPDEST \t\t\treturn _name\n      DUP3 \t\t\treturn _name\n      ADD \t\t\treturn _name\n      SWAP2 \t\t\treturn _name\n      SWAP1 \t\t\treturn _name\n      PUSH 0\t\t\treturn _name\n      MSTORE \t\t\treturn _name\n      PUSH 20\t\t\treturn _name\n      PUSH 0\t\t\treturn _name\n      KECCAK256 \t\t\treturn _name\n      SWAP1 \t\t\treturn _name\n    tag 93\t\t\treturn _name\n      JUMPDEST \t\t\treturn _name\n      DUP2 \t\t\treturn _name\n      SLOAD \t\t\treturn _name\n      DUP2 \t\t\treturn _name\n      MSTORE \t\t\treturn _name\n      SWAP1 \t\t\treturn _name\n      PUSH 1\t\t\treturn _name\n      ADD \t\t\treturn _name\n      SWAP1 \t\t\treturn _name\n      PUSH 20\t\t\treturn _name\n      ADD \t\t\treturn _name\n      DUP1 \t\t\treturn _name\n      DUP4 \t\t\treturn _name\n      GT \t\t\treturn _name\n      PUSH [tag] 93\t\t\treturn _name\n      JUMPI \t\t\treturn _name\n      DUP3 \t\t\treturn _name\n      SWAP1 \t\t\treturn _name\n      SUB \t\t\treturn _name\n      PUSH 1F\t\t\treturn _name\n      AND \t\t\treturn _name\n      DUP3 \t\t\treturn _name\n      ADD \t\t\treturn _name\n      SWAP2 \t\t\treturn _name\n    tag 91\t\t\treturn _name\n      JUMPDEST \t\t\treturn _name\n      POP \t\t\treturn _name\n      POP \t\t\treturn _name\n      POP \t\t\treturn _name\n      POP \t\t\treturn _name\n      POP \t\t\treturn _name\n      SWAP1 \t\t\treturn _name\n      POP \t\t\treturn _name\n      SWAP1 \t\t\tfunction name() external view ...\n      JUMP \t\t\tfunction name() external view ...\n    tag 29\t\t\tfunction approve(address spend...\n      JUMPDEST \t\t\tfunction approve(address spend...\n      PUSH 0\t\t\tbool\n      PUSH [tag] 95\t\t\t_approve(_msgSender(), spender...\n      PUSH [tag] 96\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 96\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      DUP5 \t\t\tspender\n      DUP5 \t\t\tamount\n      PUSH [tag] 98\t\t\t_approve\n      JUMP \t\t\t_approve(_msgSender(), spender...\n    tag 95\t\t\t_approve(_msgSender(), spender...\n      JUMPDEST \t\t\t_approve(_msgSender(), spender...\n      PUSH 1\t\t\ttrue\n      SWAP1 \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP3 \t\t\tfunction approve(address spend...\n      SWAP2 \t\t\tfunction approve(address spend...\n      POP \t\t\tfunction approve(address spend...\n      POP \t\t\tfunction approve(address spend...\n      JUMP \t\t\tfunction approve(address spend...\n    tag 33\t\t\tfunction totalSupply() externa...\n      JUMPDEST \t\t\tfunction totalSupply() externa...\n      PUSH 0\t\t\tuint256\n      PUSH 3\t\t\t_totalSupply\n      SLOAD \t\t\t_totalSupply\n      SWAP1 \t\t\treturn _totalSupply\n      POP \t\t\treturn _totalSupply\n      SWAP1 \t\t\tfunction totalSupply() externa...\n      JUMP \t\t\tfunction totalSupply() externa...\n    tag 39\t\t\tfunction transferFrom(address ...\n      JUMPDEST \t\t\tfunction transferFrom(address ...\n      PUSH 0\t\t\tbool\n      PUSH [tag] 101\t\t\t_transfer(sender, recipient, a...\n      DUP5 \t\t\tsender\n      DUP5 \t\t\trecipient\n      DUP5 \t\t\tamount\n      PUSH [tag] 102\t\t\t_transfer\n      JUMP \t\t\t_transfer(sender, recipient, a...\n    tag 101\t\t\t_transfer(sender, recipient, a...\n      JUMPDEST \t\t\t_transfer(sender, recipient, a...\n      PUSH [tag] 103\t\t\t_approve(sender, _msgSender(),...\n      DUP5 \t\t\tsender\n      PUSH [tag] 104\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 104\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      PUSH [tag] 105\t\t\t_allowances[sender][_msgSender...\n      DUP6 \t\t\tamount\n      PUSH 40\t\t\t_allowances[sender][_msgSender...\n      MLOAD \t\t\t_allowances[sender][_msgSender...\n      DUP1 \t\t\t_allowances[sender][_msgSender...\n      PUSH 60\t\t\t_allowances[sender][_msgSender...\n      ADD \t\t\t_allowances[sender][_msgSender...\n      PUSH 40\t\t\t_allowances[sender][_msgSender...\n      MSTORE \t\t\t_allowances[sender][_msgSender...\n      DUP1 \t\t\t_allowances[sender][_msgSender...\n      PUSH 28\t\t\t_allowances[sender][_msgSender...\n      DUP2 \t\t\t_allowances[sender][_msgSender...\n      MSTORE \t\t\t_allowances[sender][_msgSender...\n      PUSH 20\t\t\t_allowances[sender][_msgSender...\n      ADD \t\t\t_allowances[sender][_msgSender...\n      PUSH data 4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E\t\t\t_allowances[sender][_msgSender...\n      PUSH 28\t\t\t_allowances[sender][_msgSender...\n      SWAP2 \t\t\t_allowances[sender][_msgSender...\n      CODECOPY \t\t\t_allowances[sender][_msgSender...\n      PUSH 2\t\t\t_allowances\n      PUSH 0\t\t\t_allowances[sender]\n      DUP12 \t\t\tsender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[sender]\n      AND \t\t\t_allowances[sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[sender]\n      AND \t\t\t_allowances[sender]\n      DUP2 \t\t\t_allowances[sender]\n      MSTORE \t\t\t_allowances[sender]\n      PUSH 20\t\t\t_allowances[sender]\n      ADD \t\t\t_allowances[sender]\n      SWAP1 \t\t\t_allowances[sender]\n      DUP2 \t\t\t_allowances[sender]\n      MSTORE \t\t\t_allowances[sender]\n      PUSH 20\t\t\t_allowances[sender]\n      ADD \t\t\t_allowances[sender]\n      PUSH 0\t\t\t_allowances[sender]\n      KECCAK256 \t\t\t_allowances[sender]\n      PUSH 0\t\t\t_allowances[sender][_msgSender...\n      PUSH [tag] 106\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 106\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[sender][_msgSender...\n      AND \t\t\t_allowances[sender][_msgSender...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[sender][_msgSender...\n      AND \t\t\t_allowances[sender][_msgSender...\n      DUP2 \t\t\t_allowances[sender][_msgSender...\n      MSTORE \t\t\t_allowances[sender][_msgSender...\n      PUSH 20\t\t\t_allowances[sender][_msgSender...\n      ADD \t\t\t_allowances[sender][_msgSender...\n      SWAP1 \t\t\t_allowances[sender][_msgSender...\n      DUP2 \t\t\t_allowances[sender][_msgSender...\n      MSTORE \t\t\t_allowances[sender][_msgSender...\n      PUSH 20\t\t\t_allowances[sender][_msgSender...\n      ADD \t\t\t_allowances[sender][_msgSender...\n      PUSH 0\t\t\t_allowances[sender][_msgSender...\n      KECCAK256 \t\t\t_allowances[sender][_msgSender...\n      SLOAD \t\t\t_allowances[sender][_msgSender...\n      PUSH [tag] 107\t\t\t_allowances[sender][_msgSender...\n      SWAP1 \t\t\t_allowances[sender][_msgSender...\n      SWAP3 \t\t\t_allowances[sender][_msgSender...\n      SWAP2 \t\t\t_allowances[sender][_msgSender...\n      SWAP1 \t\t\t_allowances[sender][_msgSender...\n      PUSH FFFFFFFF\t\t\t_allowances[sender][_msgSender...\n      AND \t\t\t_allowances[sender][_msgSender...\n      JUMP \t\t\t_allowances[sender][_msgSender...\n    tag 105\t\t\t_allowances[sender][_msgSender...\n      JUMPDEST \t\t\t_allowances[sender][_msgSender...\n      PUSH [tag] 98\t\t\t_approve\n      JUMP \t\t\t_approve(sender, _msgSender(),...\n    tag 103\t\t\t_approve(sender, _msgSender(),...\n      JUMPDEST \t\t\t_approve(sender, _msgSender(),...\n      PUSH 1\t\t\ttrue\n      SWAP1 \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP4 \t\t\tfunction transferFrom(address ...\n      SWAP3 \t\t\tfunction transferFrom(address ...\n      POP \t\t\tfunction transferFrom(address ...\n      POP \t\t\tfunction transferFrom(address ...\n      POP \t\t\tfunction transferFrom(address ...\n      JUMP \t\t\tfunction transferFrom(address ...\n    tag 42\t\t\tfunction decimals() external v...\n      JUMPDEST \t\t\tfunction decimals() external v...\n      PUSH 0\t\t\tuint8\n      PUSH 4\t\t\t_decimals\n      PUSH 0\t\t\t_decimals\n      SWAP1 \t\t\t_decimals\n      SLOAD \t\t\t_decimals\n      SWAP1 \t\t\t_decimals\n      PUSH 100\t\t\t_decimals\n      EXP \t\t\t_decimals\n      SWAP1 \t\t\t_decimals\n      DIV \t\t\t_decimals\n      PUSH FF\t\t\t_decimals\n      AND \t\t\t_decimals\n      SWAP1 \t\t\treturn _decimals\n      POP \t\t\treturn _decimals\n      SWAP1 \t\t\tfunction decimals() external v...\n      JUMP \t\t\tfunction decimals() external v...\n    tag 47\t\t\tfunction increaseAllowance(add...\n      JUMPDEST \t\t\tfunction increaseAllowance(add...\n      PUSH 0\t\t\tbool\n      PUSH [tag] 110\t\t\t_approve(_msgSender(), spender...\n      PUSH [tag] 111\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 111\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      DUP5 \t\t\tspender\n      PUSH [tag] 112\t\t\t_allowances[_msgSender()][spen...\n      DUP6 \t\t\taddedValue\n      PUSH 2\t\t\t_allowances\n      PUSH 0\t\t\t_allowances[_msgSender()]\n      PUSH [tag] 113\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 113\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[_msgSender()]\n      AND \t\t\t_allowances[_msgSender()]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[_msgSender()]\n      AND \t\t\t_allowances[_msgSender()]\n      DUP2 \t\t\t_allowances[_msgSender()]\n      MSTORE \t\t\t_allowances[_msgSender()]\n      PUSH 20\t\t\t_allowances[_msgSender()]\n      ADD \t\t\t_allowances[_msgSender()]\n      SWAP1 \t\t\t_allowances[_msgSender()]\n      DUP2 \t\t\t_allowances[_msgSender()]\n      MSTORE \t\t\t_allowances[_msgSender()]\n      PUSH 20\t\t\t_allowances[_msgSender()]\n      ADD \t\t\t_allowances[_msgSender()]\n      PUSH 0\t\t\t_allowances[_msgSender()]\n      KECCAK256 \t\t\t_allowances[_msgSender()]\n      PUSH 0\t\t\t_allowances[_msgSender()][spen...\n      DUP10 \t\t\tspender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[_msgSender()][spen...\n      AND \t\t\t_allowances[_msgSender()][spen...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[_msgSender()][spen...\n      AND \t\t\t_allowances[_msgSender()][spen...\n      DUP2 \t\t\t_allowances[_msgSender()][spen...\n      MSTORE \t\t\t_allowances[_msgSender()][spen...\n      PUSH 20\t\t\t_allowances[_msgSender()][spen...\n      ADD \t\t\t_allowances[_msgSender()][spen...\n      SWAP1 \t\t\t_allowances[_msgSender()][spen...\n      DUP2 \t\t\t_allowances[_msgSender()][spen...\n      MSTORE \t\t\t_allowances[_msgSender()][spen...\n      PUSH 20\t\t\t_allowances[_msgSender()][spen...\n      ADD \t\t\t_allowances[_msgSender()][spen...\n      PUSH 0\t\t\t_allowances[_msgSender()][spen...\n      KECCAK256 \t\t\t_allowances[_msgSender()][spen...\n      SLOAD \t\t\t_allowances[_msgSender()][spen...\n      PUSH [tag] 114\t\t\t_allowances[_msgSender()][spen...\n      SWAP1 \t\t\t_allowances[_msgSender()][spen...\n      SWAP2 \t\t\t_allowances[_msgSender()][spen...\n      SWAP1 \t\t\t_allowances[_msgSender()][spen...\n      PUSH FFFFFFFF\t\t\t_allowances[_msgSender()][spen...\n      AND \t\t\t_allowances[_msgSender()][spen...\n      JUMP \t\t\t_allowances[_msgSender()][spen...\n    tag 112\t\t\t_allowances[_msgSender()][spen...\n      JUMPDEST \t\t\t_allowances[_msgSender()][spen...\n      PUSH [tag] 98\t\t\t_approve\n      JUMP \t\t\t_approve(_msgSender(), spender...\n    tag 110\t\t\t_approve(_msgSender(), spender...\n      JUMPDEST \t\t\t_approve(_msgSender(), spender...\n      PUSH 1\t\t\ttrue\n      SWAP1 \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP3 \t\t\tfunction increaseAllowance(add...\n      SWAP2 \t\t\tfunction increaseAllowance(add...\n      POP \t\t\tfunction increaseAllowance(add...\n      POP \t\t\tfunction increaseAllowance(add...\n      JUMP \t\t\tfunction increaseAllowance(add...\n    tag 52\t\t\tfunction balanceOf(address acc...\n      JUMPDEST \t\t\tfunction balanceOf(address acc...\n      PUSH 0\t\t\tuint256\n      PUSH 1\t\t\t_balances\n      PUSH 0\t\t\t_balances[account]\n      DUP4 \t\t\taccount\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[account]\n      AND \t\t\t_balances[account]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[account]\n      AND \t\t\t_balances[account]\n      DUP2 \t\t\t_balances[account]\n      MSTORE \t\t\t_balances[account]\n      PUSH 20\t\t\t_balances[account]\n      ADD \t\t\t_balances[account]\n      SWAP1 \t\t\t_balances[account]\n      DUP2 \t\t\t_balances[account]\n      MSTORE \t\t\t_balances[account]\n      PUSH 20\t\t\t_balances[account]\n      ADD \t\t\t_balances[account]\n      PUSH 0\t\t\t_balances[account]\n      KECCAK256 \t\t\t_balances[account]\n      SLOAD \t\t\t_balances[account]\n      SWAP1 \t\t\treturn _balances[account]\n      POP \t\t\treturn _balances[account]\n      SWAP2 \t\t\tfunction balanceOf(address acc...\n      SWAP1 \t\t\tfunction balanceOf(address acc...\n      POP \t\t\tfunction balanceOf(address acc...\n      JUMP \t\t\tfunction balanceOf(address acc...\n    tag 55\t\t\tfunction renounceOwnership() p...\n      JUMPDEST \t\t\tfunction renounceOwnership() p...\n      PUSH [tag] 117\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 117\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner == _msgSender()\n      AND \t\t\t_owner == _msgSender()\n      PUSH 0\t\t\t_owner\n      DUP1 \t\t\t_owner\n      SLOAD \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      PUSH 100\t\t\t_owner\n      EXP \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      DIV \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner\n      AND \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner == _msgSender()\n      AND \t\t\t_owner == _msgSender()\n      EQ \t\t\t_owner == _msgSender()\n      PUSH [tag] 118\t\t\trequire(_owner == _msgSender()...\n      JUMPI \t\t\trequire(_owner == _msgSender()...\n      PUSH 40\t\t\trequire(_owner == _msgSender()...\n      MLOAD \t\t\trequire(_owner == _msgSender()...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(_owner == _msgSender()...\n      DUP2 \t\t\trequire(_owner == _msgSender()...\n      MSTORE \t\t\trequire(_owner == _msgSender()...\n      PUSH 4\t\t\trequire(_owner == _msgSender()...\n      ADD \t\t\trequire(_owner == _msgSender()...\n      PUSH [tag] 119\t\t\trequire(_owner == _msgSender()...\n      SWAP1 \t\t\trequire(_owner == _msgSender()...\n      PUSH [tag] 120\t\t\trequire(_owner == _msgSender()...\n      JUMP \t\t\trequire(_owner == _msgSender()...\n    tag 119\t\t\trequire(_owner == _msgSender()...\n      JUMPDEST \t\t\trequire(_owner == _msgSender()...\n      PUSH 40\t\t\trequire(_owner == _msgSender()...\n      MLOAD \t\t\trequire(_owner == _msgSender()...\n      DUP1 \t\t\trequire(_owner == _msgSender()...\n      SWAP2 \t\t\trequire(_owner == _msgSender()...\n      SUB \t\t\trequire(_owner == _msgSender()...\n      SWAP1 \t\t\trequire(_owner == _msgSender()...\n      REVERT \t\t\trequire(_owner == _msgSender()...\n    tag 118\t\t\trequire(_owner == _msgSender()...\n      JUMPDEST \t\t\trequire(_owner == _msgSender()...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tOwnershipTransferred(_owner, a...\n      AND \t\t\tOwnershipTransferred(_owner, a...\n      PUSH 0\t\t\t_owner\n      DUP1 \t\t\t_owner\n      SLOAD \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      PUSH 100\t\t\t_owner\n      EXP \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      DIV \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner\n      AND \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tOwnershipTransferred(_owner, a...\n      AND \t\t\tOwnershipTransferred(_owner, a...\n      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\tOwnershipTransferred(_owner, a...\n      PUSH 40\t\t\tOwnershipTransferred(_owner, a...\n      MLOAD \t\t\tOwnershipTransferred(_owner, a...\n      PUSH 40\t\t\tOwnershipTransferred(_owner, a...\n      MLOAD \t\t\tOwnershipTransferred(_owner, a...\n      DUP1 \t\t\tOwnershipTransferred(_owner, a...\n      SWAP2 \t\t\tOwnershipTransferred(_owner, a...\n      SUB \t\t\tOwnershipTransferred(_owner, a...\n      SWAP1 \t\t\tOwnershipTransferred(_owner, a...\n      LOG3 \t\t\tOwnershipTransferred(_owner, a...\n      PUSH 0\t\t\t0\n      DUP1 \t\t\t_owner\n      PUSH 0\t\t\t_owner\n      PUSH 100\t\t\t_owner = address(0)\n      EXP \t\t\t_owner = address(0)\n      DUP2 \t\t\t_owner = address(0)\n      SLOAD \t\t\t_owner = address(0)\n      DUP2 \t\t\t_owner = address(0)\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner = address(0)\n      MUL \t\t\t_owner = address(0)\n      NOT \t\t\t_owner = address(0)\n      AND \t\t\t_owner = address(0)\n      SWAP1 \t\t\t_owner = address(0)\n      DUP4 \t\t\t_owner = address(0)\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner = address(0)\n      AND \t\t\t_owner = address(0)\n      MUL \t\t\t_owner = address(0)\n      OR \t\t\t_owner = address(0)\n      SWAP1 \t\t\t_owner = address(0)\n      SSTORE \t\t\t_owner = address(0)\n      POP \t\t\t_owner = address(0)\n      JUMP \t\t\tfunction renounceOwnership() p...\n    tag 57\t\t\tfunction getOwner() external v...\n      JUMPDEST \t\t\tfunction getOwner() external v...\n      PUSH 0\t\t\taddress\n      PUSH [tag] 123\t\t\towner()\n      PUSH [tag] 61\t\t\towner\n      JUMP \t\t\towner()\n    tag 123\t\t\towner()\n      JUMPDEST \t\t\towner()\n      SWAP1 \t\t\treturn owner()\n      POP \t\t\treturn owner()\n      SWAP1 \t\t\tfunction getOwner() external v...\n      JUMP \t\t\tfunction getOwner() external v...\n    tag 61\t\t\tfunction owner() public view r...\n      JUMPDEST \t\t\tfunction owner() public view r...\n      PUSH 0\t\t\taddress\n      DUP1 \t\t\t_owner\n      PUSH 0\t\t\t_owner\n      SWAP1 \t\t\t_owner\n      SLOAD \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      PUSH 100\t\t\t_owner\n      EXP \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      DIV \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner\n      AND \t\t\t_owner\n      SWAP1 \t\t\treturn _owner\n      POP \t\t\treturn _owner\n      SWAP1 \t\t\tfunction owner() public view r...\n      JUMP \t\t\tfunction owner() public view r...\n    tag 64\t\t\tfunction symbol() external vie...\n      JUMPDEST \t\t\tfunction symbol() external vie...\n      PUSH 60\t\t\tstring memory\n      PUSH 5\t\t\t_symbol\n      DUP1 \t\t\treturn _symbol\n      SLOAD \t\t\treturn _symbol\n      PUSH [tag] 126\t\t\treturn _symbol\n      SWAP1 \t\t\treturn _symbol\n      PUSH [tag] 89\t\t\treturn _symbol\n      JUMP \t\t\treturn _symbol\n    tag 126\t\t\treturn _symbol\n      JUMPDEST \t\t\treturn _symbol\n      DUP1 \t\t\treturn _symbol\n      PUSH 1F\t\t\treturn _symbol\n      ADD \t\t\treturn _symbol\n      PUSH 20\t\t\treturn _symbol\n      DUP1 \t\t\treturn _symbol\n      SWAP2 \t\t\treturn _symbol\n      DIV \t\t\treturn _symbol\n      MUL \t\t\treturn _symbol\n      PUSH 20\t\t\treturn _symbol\n      ADD \t\t\treturn _symbol\n      PUSH 40\t\t\treturn _symbol\n      MLOAD \t\t\treturn _symbol\n      SWAP1 \t\t\treturn _symbol\n      DUP2 \t\t\treturn _symbol\n      ADD \t\t\treturn _symbol\n      PUSH 40\t\t\treturn _symbol\n      MSTORE \t\t\treturn _symbol\n      DUP1 \t\t\treturn _symbol\n      SWAP3 \t\t\treturn _symbol\n      SWAP2 \t\t\treturn _symbol\n      SWAP1 \t\t\treturn _symbol\n      DUP2 \t\t\treturn _symbol\n      DUP2 \t\t\treturn _symbol\n      MSTORE \t\t\treturn _symbol\n      PUSH 20\t\t\treturn _symbol\n      ADD \t\t\treturn _symbol\n      DUP3 \t\t\treturn _symbol\n      DUP1 \t\t\treturn _symbol\n      SLOAD \t\t\treturn _symbol\n      PUSH [tag] 127\t\t\treturn _symbol\n      SWAP1 \t\t\treturn _symbol\n      PUSH [tag] 89\t\t\treturn _symbol\n      JUMP \t\t\treturn _symbol\n    tag 127\t\t\treturn _symbol\n      JUMPDEST \t\t\treturn _symbol\n      DUP1 \t\t\treturn _symbol\n      ISZERO \t\t\treturn _symbol\n      PUSH [tag] 128\t\t\treturn _symbol\n      JUMPI \t\t\treturn _symbol\n      DUP1 \t\t\treturn _symbol\n      PUSH 1F\t\t\treturn _symbol\n      LT \t\t\treturn _symbol\n      PUSH [tag] 129\t\t\treturn _symbol\n      JUMPI \t\t\treturn _symbol\n      PUSH 100\t\t\treturn _symbol\n      DUP1 \t\t\treturn _symbol\n      DUP4 \t\t\treturn _symbol\n      SLOAD \t\t\treturn _symbol\n      DIV \t\t\treturn _symbol\n      MUL \t\t\treturn _symbol\n      DUP4 \t\t\treturn _symbol\n      MSTORE \t\t\treturn _symbol\n      SWAP2 \t\t\treturn _symbol\n      PUSH 20\t\t\treturn _symbol\n      ADD \t\t\treturn _symbol\n      SWAP2 \t\t\treturn _symbol\n      PUSH [tag] 128\t\t\treturn _symbol\n      JUMP \t\t\treturn _symbol\n    tag 129\t\t\treturn _symbol\n      JUMPDEST \t\t\treturn _symbol\n      DUP3 \t\t\treturn _symbol\n      ADD \t\t\treturn _symbol\n      SWAP2 \t\t\treturn _symbol\n      SWAP1 \t\t\treturn _symbol\n      PUSH 0\t\t\treturn _symbol\n      MSTORE \t\t\treturn _symbol\n      PUSH 20\t\t\treturn _symbol\n      PUSH 0\t\t\treturn _symbol\n      KECCAK256 \t\t\treturn _symbol\n      SWAP1 \t\t\treturn _symbol\n    tag 130\t\t\treturn _symbol\n      JUMPDEST \t\t\treturn _symbol\n      DUP2 \t\t\treturn _symbol\n      SLOAD \t\t\treturn _symbol\n      DUP2 \t\t\treturn _symbol\n      MSTORE \t\t\treturn _symbol\n      SWAP1 \t\t\treturn _symbol\n      PUSH 1\t\t\treturn _symbol\n      ADD \t\t\treturn _symbol\n      SWAP1 \t\t\treturn _symbol\n      PUSH 20\t\t\treturn _symbol\n      ADD \t\t\treturn _symbol\n      DUP1 \t\t\treturn _symbol\n      DUP4 \t\t\treturn _symbol\n      GT \t\t\treturn _symbol\n      PUSH [tag] 130\t\t\treturn _symbol\n      JUMPI \t\t\treturn _symbol\n      DUP3 \t\t\treturn _symbol\n      SWAP1 \t\t\treturn _symbol\n      SUB \t\t\treturn _symbol\n      PUSH 1F\t\t\treturn _symbol\n      AND \t\t\treturn _symbol\n      DUP3 \t\t\treturn _symbol\n      ADD \t\t\treturn _symbol\n      SWAP2 \t\t\treturn _symbol\n    tag 128\t\t\treturn _symbol\n      JUMPDEST \t\t\treturn _symbol\n      POP \t\t\treturn _symbol\n      POP \t\t\treturn _symbol\n      POP \t\t\treturn _symbol\n      POP \t\t\treturn _symbol\n      POP \t\t\treturn _symbol\n      SWAP1 \t\t\treturn _symbol\n      POP \t\t\treturn _symbol\n      SWAP1 \t\t\tfunction symbol() external vie...\n      JUMP \t\t\tfunction symbol() external vie...\n    tag 69\t\t\tfunction mint(uint256 amount) ...\n      JUMPDEST \t\t\tfunction mint(uint256 amount) ...\n      PUSH 0\t\t\tbool\n      PUSH [tag] 132\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 132\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner == _msgSender()\n      AND \t\t\t_owner == _msgSender()\n      PUSH 0\t\t\t_owner\n      DUP1 \t\t\t_owner\n      SLOAD \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      PUSH 100\t\t\t_owner\n      EXP \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      DIV \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner\n      AND \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner == _msgSender()\n      AND \t\t\t_owner == _msgSender()\n      EQ \t\t\t_owner == _msgSender()\n      PUSH [tag] 133\t\t\trequire(_owner == _msgSender()...\n      JUMPI \t\t\trequire(_owner == _msgSender()...\n      PUSH 40\t\t\trequire(_owner == _msgSender()...\n      MLOAD \t\t\trequire(_owner == _msgSender()...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(_owner == _msgSender()...\n      DUP2 \t\t\trequire(_owner == _msgSender()...\n      MSTORE \t\t\trequire(_owner == _msgSender()...\n      PUSH 4\t\t\trequire(_owner == _msgSender()...\n      ADD \t\t\trequire(_owner == _msgSender()...\n      PUSH [tag] 134\t\t\trequire(_owner == _msgSender()...\n      SWAP1 \t\t\trequire(_owner == _msgSender()...\n      PUSH [tag] 120\t\t\trequire(_owner == _msgSender()...\n      JUMP \t\t\trequire(_owner == _msgSender()...\n    tag 134\t\t\trequire(_owner == _msgSender()...\n      JUMPDEST \t\t\trequire(_owner == _msgSender()...\n      PUSH 40\t\t\trequire(_owner == _msgSender()...\n      MLOAD \t\t\trequire(_owner == _msgSender()...\n      DUP1 \t\t\trequire(_owner == _msgSender()...\n      SWAP2 \t\t\trequire(_owner == _msgSender()...\n      SUB \t\t\trequire(_owner == _msgSender()...\n      SWAP1 \t\t\trequire(_owner == _msgSender()...\n      REVERT \t\t\trequire(_owner == _msgSender()...\n    tag 133\t\t\trequire(_owner == _msgSender()...\n      JUMPDEST \t\t\trequire(_owner == _msgSender()...\n      PUSH [tag] 136\t\t\t_mint(_msgSender(), amount)\n      PUSH [tag] 137\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 137\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      DUP4 \t\t\tamount\n      PUSH [tag] 138\t\t\t_mint\n      JUMP \t\t\t_mint(_msgSender(), amount)\n    tag 136\t\t\t_mint(_msgSender(), amount)\n      JUMPDEST \t\t\t_mint(_msgSender(), amount)\n      PUSH 1\t\t\ttrue\n      SWAP1 \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP2 \t\t\tfunction mint(uint256 amount) ...\n      SWAP1 \t\t\tfunction mint(uint256 amount) ...\n      POP \t\t\tfunction mint(uint256 amount) ...\n      JUMP \t\t\tfunction mint(uint256 amount) ...\n    tag 73\t\t\tfunction decreaseAllowance(add...\n      JUMPDEST \t\t\tfunction decreaseAllowance(add...\n      PUSH 0\t\t\tbool\n      PUSH [tag] 140\t\t\t_approve(_msgSender(), spender...\n      PUSH [tag] 141\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 141\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      DUP5 \t\t\tspender\n      PUSH [tag] 142\t\t\t_allowances[_msgSender()][spen...\n      DUP6 \t\t\tsubtractedValue\n      PUSH 40\t\t\t_allowances[_msgSender()][spen...\n      MLOAD \t\t\t_allowances[_msgSender()][spen...\n      DUP1 \t\t\t_allowances[_msgSender()][spen...\n      PUSH 60\t\t\t_allowances[_msgSender()][spen...\n      ADD \t\t\t_allowances[_msgSender()][spen...\n      PUSH 40\t\t\t_allowances[_msgSender()][spen...\n      MSTORE \t\t\t_allowances[_msgSender()][spen...\n      DUP1 \t\t\t_allowances[_msgSender()][spen...\n      PUSH 25\t\t\t_allowances[_msgSender()][spen...\n      DUP2 \t\t\t_allowances[_msgSender()][spen...\n      MSTORE \t\t\t_allowances[_msgSender()][spen...\n      PUSH 20\t\t\t_allowances[_msgSender()][spen...\n      ADD \t\t\t_allowances[_msgSender()][spen...\n      PUSH data B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22\t\t\t_allowances[_msgSender()][spen...\n      PUSH 25\t\t\t_allowances[_msgSender()][spen...\n      SWAP2 \t\t\t_allowances[_msgSender()][spen...\n      CODECOPY \t\t\t_allowances[_msgSender()][spen...\n      PUSH 2\t\t\t_allowances\n      PUSH 0\t\t\t_allowances[_msgSender()]\n      PUSH [tag] 143\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 143\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[_msgSender()]\n      AND \t\t\t_allowances[_msgSender()]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[_msgSender()]\n      AND \t\t\t_allowances[_msgSender()]\n      DUP2 \t\t\t_allowances[_msgSender()]\n      MSTORE \t\t\t_allowances[_msgSender()]\n      PUSH 20\t\t\t_allowances[_msgSender()]\n      ADD \t\t\t_allowances[_msgSender()]\n      SWAP1 \t\t\t_allowances[_msgSender()]\n      DUP2 \t\t\t_allowances[_msgSender()]\n      MSTORE \t\t\t_allowances[_msgSender()]\n      PUSH 20\t\t\t_allowances[_msgSender()]\n      ADD \t\t\t_allowances[_msgSender()]\n      PUSH 0\t\t\t_allowances[_msgSender()]\n      KECCAK256 \t\t\t_allowances[_msgSender()]\n      PUSH 0\t\t\t_allowances[_msgSender()][spen...\n      DUP11 \t\t\tspender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[_msgSender()][spen...\n      AND \t\t\t_allowances[_msgSender()][spen...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[_msgSender()][spen...\n      AND \t\t\t_allowances[_msgSender()][spen...\n      DUP2 \t\t\t_allowances[_msgSender()][spen...\n      MSTORE \t\t\t_allowances[_msgSender()][spen...\n      PUSH 20\t\t\t_allowances[_msgSender()][spen...\n      ADD \t\t\t_allowances[_msgSender()][spen...\n      SWAP1 \t\t\t_allowances[_msgSender()][spen...\n      DUP2 \t\t\t_allowances[_msgSender()][spen...\n      MSTORE \t\t\t_allowances[_msgSender()][spen...\n      PUSH 20\t\t\t_allowances[_msgSender()][spen...\n      ADD \t\t\t_allowances[_msgSender()][spen...\n      PUSH 0\t\t\t_allowances[_msgSender()][spen...\n      KECCAK256 \t\t\t_allowances[_msgSender()][spen...\n      SLOAD \t\t\t_allowances[_msgSender()][spen...\n      PUSH [tag] 107\t\t\t_allowances[_msgSender()][spen...\n      SWAP1 \t\t\t_allowances[_msgSender()][spen...\n      SWAP3 \t\t\t_allowances[_msgSender()][spen...\n      SWAP2 \t\t\t_allowances[_msgSender()][spen...\n      SWAP1 \t\t\t_allowances[_msgSender()][spen...\n      PUSH FFFFFFFF\t\t\t_allowances[_msgSender()][spen...\n      AND \t\t\t_allowances[_msgSender()][spen...\n      JUMP \t\t\t_allowances[_msgSender()][spen...\n    tag 142\t\t\t_allowances[_msgSender()][spen...\n      JUMPDEST \t\t\t_allowances[_msgSender()][spen...\n      PUSH [tag] 98\t\t\t_approve\n      JUMP \t\t\t_approve(_msgSender(), spender...\n    tag 140\t\t\t_approve(_msgSender(), spender...\n      JUMPDEST \t\t\t_approve(_msgSender(), spender...\n      PUSH 1\t\t\ttrue\n      SWAP1 \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP3 \t\t\tfunction decreaseAllowance(add...\n      SWAP2 \t\t\tfunction decreaseAllowance(add...\n      POP \t\t\tfunction decreaseAllowance(add...\n      POP \t\t\tfunction decreaseAllowance(add...\n      JUMP \t\t\tfunction decreaseAllowance(add...\n    tag 77\t\t\tfunction transfer(address reci...\n      JUMPDEST \t\t\tfunction transfer(address reci...\n      PUSH 0\t\t\tbool\n      PUSH [tag] 145\t\t\t_transfer(_msgSender(), recipi...\n      PUSH [tag] 146\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 146\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      DUP5 \t\t\trecipient\n      DUP5 \t\t\tamount\n      PUSH [tag] 102\t\t\t_transfer\n      JUMP \t\t\t_transfer(_msgSender(), recipi...\n    tag 145\t\t\t_transfer(_msgSender(), recipi...\n      JUMPDEST \t\t\t_transfer(_msgSender(), recipi...\n      PUSH 1\t\t\ttrue\n      SWAP1 \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP3 \t\t\tfunction transfer(address reci...\n      SWAP2 \t\t\tfunction transfer(address reci...\n      POP \t\t\tfunction transfer(address reci...\n      POP \t\t\tfunction transfer(address reci...\n      JUMP \t\t\tfunction transfer(address reci...\n    tag 82\t\t\tfunction allowance(address own...\n      JUMPDEST \t\t\tfunction allowance(address own...\n      PUSH 0\t\t\tuint256\n      PUSH 2\t\t\t_allowances\n      PUSH 0\t\t\t_allowances[owner]\n      DUP5 \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[owner]\n      AND \t\t\t_allowances[owner]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[owner]\n      AND \t\t\t_allowances[owner]\n      DUP2 \t\t\t_allowances[owner]\n      MSTORE \t\t\t_allowances[owner]\n      PUSH 20\t\t\t_allowances[owner]\n      ADD \t\t\t_allowances[owner]\n      SWAP1 \t\t\t_allowances[owner]\n      DUP2 \t\t\t_allowances[owner]\n      MSTORE \t\t\t_allowances[owner]\n      PUSH 20\t\t\t_allowances[owner]\n      ADD \t\t\t_allowances[owner]\n      PUSH 0\t\t\t_allowances[owner]\n      KECCAK256 \t\t\t_allowances[owner]\n      PUSH 0\t\t\t_allowances[owner][spender]\n      DUP4 \t\t\tspender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[owner][spender]\n      AND \t\t\t_allowances[owner][spender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[owner][spender]\n      AND \t\t\t_allowances[owner][spender]\n      DUP2 \t\t\t_allowances[owner][spender]\n      MSTORE \t\t\t_allowances[owner][spender]\n      PUSH 20\t\t\t_allowances[owner][spender]\n      ADD \t\t\t_allowances[owner][spender]\n      SWAP1 \t\t\t_allowances[owner][spender]\n      DUP2 \t\t\t_allowances[owner][spender]\n      MSTORE \t\t\t_allowances[owner][spender]\n      PUSH 20\t\t\t_allowances[owner][spender]\n      ADD \t\t\t_allowances[owner][spender]\n      PUSH 0\t\t\t_allowances[owner][spender]\n      KECCAK256 \t\t\t_allowances[owner][spender]\n      SLOAD \t\t\t_allowances[owner][spender]\n      SWAP1 \t\t\treturn _allowances[owner][spen...\n      POP \t\t\treturn _allowances[owner][spen...\n      SWAP3 \t\t\tfunction allowance(address own...\n      SWAP2 \t\t\tfunction allowance(address own...\n      POP \t\t\tfunction allowance(address own...\n      POP \t\t\tfunction allowance(address own...\n      JUMP \t\t\tfunction allowance(address own...\n    tag 86\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 149\t\t\t_msgSender()\n      PUSH [tag] 97\t\t\t_msgSender\n      JUMP \t\t\t_msgSender()\n    tag 149\t\t\t_msgSender()\n      JUMPDEST \t\t\t_msgSender()\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner == _msgSender()\n      AND \t\t\t_owner == _msgSender()\n      PUSH 0\t\t\t_owner\n      DUP1 \t\t\t_owner\n      SLOAD \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      PUSH 100\t\t\t_owner\n      EXP \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      DIV \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner\n      AND \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner == _msgSender()\n      AND \t\t\t_owner == _msgSender()\n      EQ \t\t\t_owner == _msgSender()\n      PUSH [tag] 150\t\t\trequire(_owner == _msgSender()...\n      JUMPI \t\t\trequire(_owner == _msgSender()...\n      PUSH 40\t\t\trequire(_owner == _msgSender()...\n      MLOAD \t\t\trequire(_owner == _msgSender()...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(_owner == _msgSender()...\n      DUP2 \t\t\trequire(_owner == _msgSender()...\n      MSTORE \t\t\trequire(_owner == _msgSender()...\n      PUSH 4\t\t\trequire(_owner == _msgSender()...\n      ADD \t\t\trequire(_owner == _msgSender()...\n      PUSH [tag] 151\t\t\trequire(_owner == _msgSender()...\n      SWAP1 \t\t\trequire(_owner == _msgSender()...\n      PUSH [tag] 120\t\t\trequire(_owner == _msgSender()...\n      JUMP \t\t\trequire(_owner == _msgSender()...\n    tag 151\t\t\trequire(_owner == _msgSender()...\n      JUMPDEST \t\t\trequire(_owner == _msgSender()...\n      PUSH 40\t\t\trequire(_owner == _msgSender()...\n      MLOAD \t\t\trequire(_owner == _msgSender()...\n      DUP1 \t\t\trequire(_owner == _msgSender()...\n      SWAP2 \t\t\trequire(_owner == _msgSender()...\n      SUB \t\t\trequire(_owner == _msgSender()...\n      SWAP1 \t\t\trequire(_owner == _msgSender()...\n      REVERT \t\t\trequire(_owner == _msgSender()...\n    tag 150\t\t\trequire(_owner == _msgSender()...\n      JUMPDEST \t\t\trequire(_owner == _msgSender()...\n      PUSH [tag] 153\t\t\t_transferOwnership(newOwner)\n      DUP2 \t\t\tnewOwner\n      PUSH [tag] 154\t\t\t_transferOwnership\n      JUMP \t\t\t_transferOwnership(newOwner)\n    tag 153\t\t\t_transferOwnership(newOwner)\n      JUMPDEST \t\t\t_transferOwnership(newOwner)\n      POP \t\t\tfunction transferOwnership(add...\n      JUMP \t\t\tfunction transferOwnership(add...\n    tag 97\t\t\tfunction _msgSender() internal...\n      JUMPDEST \t\t\tfunction _msgSender() internal...\n      PUSH 0\t\t\taddress\n      CALLER \t\t\tmsg.sender\n      SWAP1 \t\t\treturn msg.sender\n      POP \t\t\treturn msg.sender\n      SWAP1 \t\t\tfunction _msgSender() internal...\n      JUMP \t\t\tfunction _msgSender() internal...\n    tag 98\t\t\tfunction _approve(address owne...\n      JUMPDEST \t\t\tfunction _approve(address owne...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner != address(0)\n      AND \t\t\towner != address(0)\n      DUP4 \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner != address(0)\n      AND \t\t\towner != address(0)\n      SUB \t\t\towner != address(0)\n      PUSH [tag] 157\t\t\trequire(owner != address(0), \"...\n      JUMPI \t\t\trequire(owner != address(0), \"...\n      PUSH 40\t\t\trequire(owner != address(0), \"...\n      MLOAD \t\t\trequire(owner != address(0), \"...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(owner != address(0), \"...\n      DUP2 \t\t\trequire(owner != address(0), \"...\n      MSTORE \t\t\trequire(owner != address(0), \"...\n      PUSH 4\t\t\trequire(owner != address(0), \"...\n      ADD \t\t\trequire(owner != address(0), \"...\n      PUSH [tag] 158\t\t\trequire(owner != address(0), \"...\n      SWAP1 \t\t\trequire(owner != address(0), \"...\n      PUSH [tag] 159\t\t\trequire(owner != address(0), \"...\n      JUMP \t\t\trequire(owner != address(0), \"...\n    tag 158\t\t\trequire(owner != address(0), \"...\n      JUMPDEST \t\t\trequire(owner != address(0), \"...\n      PUSH 40\t\t\trequire(owner != address(0), \"...\n      MLOAD \t\t\trequire(owner != address(0), \"...\n      DUP1 \t\t\trequire(owner != address(0), \"...\n      SWAP2 \t\t\trequire(owner != address(0), \"...\n      SUB \t\t\trequire(owner != address(0), \"...\n      SWAP1 \t\t\trequire(owner != address(0), \"...\n      REVERT \t\t\trequire(owner != address(0), \"...\n    tag 157\t\t\trequire(owner != address(0), \"...\n      JUMPDEST \t\t\trequire(owner != address(0), \"...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tspender != address(0)\n      AND \t\t\tspender != address(0)\n      DUP3 \t\t\tspender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tspender != address(0)\n      AND \t\t\tspender != address(0)\n      SUB \t\t\tspender != address(0)\n      PUSH [tag] 160\t\t\trequire(spender != address(0),...\n      JUMPI \t\t\trequire(spender != address(0),...\n      PUSH 40\t\t\trequire(spender != address(0),...\n      MLOAD \t\t\trequire(spender != address(0),...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(spender != address(0),...\n      DUP2 \t\t\trequire(spender != address(0),...\n      MSTORE \t\t\trequire(spender != address(0),...\n      PUSH 4\t\t\trequire(spender != address(0),...\n      ADD \t\t\trequire(spender != address(0),...\n      PUSH [tag] 161\t\t\trequire(spender != address(0),...\n      SWAP1 \t\t\trequire(spender != address(0),...\n      PUSH [tag] 162\t\t\trequire(spender != address(0),...\n      JUMP \t\t\trequire(spender != address(0),...\n    tag 161\t\t\trequire(spender != address(0),...\n      JUMPDEST \t\t\trequire(spender != address(0),...\n      PUSH 40\t\t\trequire(spender != address(0),...\n      MLOAD \t\t\trequire(spender != address(0),...\n      DUP1 \t\t\trequire(spender != address(0),...\n      SWAP2 \t\t\trequire(spender != address(0),...\n      SUB \t\t\trequire(spender != address(0),...\n      SWAP1 \t\t\trequire(spender != address(0),...\n      REVERT \t\t\trequire(spender != address(0),...\n    tag 160\t\t\trequire(spender != address(0),...\n      JUMPDEST \t\t\trequire(spender != address(0),...\n      DUP1 \t\t\tamount\n      PUSH 2\t\t\t_allowances\n      PUSH 0\t\t\t_allowances[owner]\n      DUP6 \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[owner]\n      AND \t\t\t_allowances[owner]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[owner]\n      AND \t\t\t_allowances[owner]\n      DUP2 \t\t\t_allowances[owner]\n      MSTORE \t\t\t_allowances[owner]\n      PUSH 20\t\t\t_allowances[owner]\n      ADD \t\t\t_allowances[owner]\n      SWAP1 \t\t\t_allowances[owner]\n      DUP2 \t\t\t_allowances[owner]\n      MSTORE \t\t\t_allowances[owner]\n      PUSH 20\t\t\t_allowances[owner]\n      ADD \t\t\t_allowances[owner]\n      PUSH 0\t\t\t_allowances[owner]\n      KECCAK256 \t\t\t_allowances[owner]\n      PUSH 0\t\t\t_allowances[owner][spender]\n      DUP5 \t\t\tspender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[owner][spender]\n      AND \t\t\t_allowances[owner][spender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_allowances[owner][spender]\n      AND \t\t\t_allowances[owner][spender]\n      DUP2 \t\t\t_allowances[owner][spender]\n      MSTORE \t\t\t_allowances[owner][spender]\n      PUSH 20\t\t\t_allowances[owner][spender]\n      ADD \t\t\t_allowances[owner][spender]\n      SWAP1 \t\t\t_allowances[owner][spender]\n      DUP2 \t\t\t_allowances[owner][spender]\n      MSTORE \t\t\t_allowances[owner][spender]\n      PUSH 20\t\t\t_allowances[owner][spender]\n      ADD \t\t\t_allowances[owner][spender]\n      PUSH 0\t\t\t_allowances[owner][spender]\n      KECCAK256 \t\t\t_allowances[owner][spender]\n      DUP2 \t\t\t_allowances[owner][spender] = ...\n      SWAP1 \t\t\t_allowances[owner][spender] = ...\n      SSTORE \t\t\t_allowances[owner][spender] = ...\n      POP \t\t\t_allowances[owner][spender] = ...\n      DUP2 \t\t\tspender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tApproval(owner, spender, amoun...\n      AND \t\t\tApproval(owner, spender, amoun...\n      DUP4 \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tApproval(owner, spender, amoun...\n      AND \t\t\tApproval(owner, spender, amoun...\n      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925\t\t\tApproval(owner, spender, amoun...\n      DUP4 \t\t\tamount\n      PUSH 40\t\t\tApproval(owner, spender, amoun...\n      MLOAD \t\t\tApproval(owner, spender, amoun...\n      PUSH [tag] 163\t\t\tApproval(owner, spender, amoun...\n      SWAP2 \t\t\tApproval(owner, spender, amoun...\n      SWAP1 \t\t\tApproval(owner, spender, amoun...\n      PUSH [tag] 35\t\t\tApproval(owner, spender, amoun...\n      JUMP \t\t\tApproval(owner, spender, amoun...\n    tag 163\t\t\tApproval(owner, spender, amoun...\n      JUMPDEST \t\t\tApproval(owner, spender, amoun...\n      PUSH 40\t\t\tApproval(owner, spender, amoun...\n      MLOAD \t\t\tApproval(owner, spender, amoun...\n      DUP1 \t\t\tApproval(owner, spender, amoun...\n      SWAP2 \t\t\tApproval(owner, spender, amoun...\n      SUB \t\t\tApproval(owner, spender, amoun...\n      SWAP1 \t\t\tApproval(owner, spender, amoun...\n      LOG3 \t\t\tApproval(owner, spender, amoun...\n      POP \t\t\tfunction _approve(address owne...\n      POP \t\t\tfunction _approve(address owne...\n      POP \t\t\tfunction _approve(address owne...\n      JUMP \t\t\tfunction _approve(address owne...\n    tag 102\t\t\tfunction _transfer(address sen...\n      JUMPDEST \t\t\tfunction _transfer(address sen...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tsender != address(0)\n      AND \t\t\tsender != address(0)\n      DUP4 \t\t\tsender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tsender != address(0)\n      AND \t\t\tsender != address(0)\n      SUB \t\t\tsender != address(0)\n      PUSH [tag] 165\t\t\trequire(sender != address(0), ...\n      JUMPI \t\t\trequire(sender != address(0), ...\n      PUSH 40\t\t\trequire(sender != address(0), ...\n      MLOAD \t\t\trequire(sender != address(0), ...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(sender != address(0), ...\n      DUP2 \t\t\trequire(sender != address(0), ...\n      MSTORE \t\t\trequire(sender != address(0), ...\n      PUSH 4\t\t\trequire(sender != address(0), ...\n      ADD \t\t\trequire(sender != address(0), ...\n      PUSH [tag] 166\t\t\trequire(sender != address(0), ...\n      SWAP1 \t\t\trequire(sender != address(0), ...\n      PUSH [tag] 167\t\t\trequire(sender != address(0), ...\n      JUMP \t\t\trequire(sender != address(0), ...\n    tag 166\t\t\trequire(sender != address(0), ...\n      JUMPDEST \t\t\trequire(sender != address(0), ...\n      PUSH 40\t\t\trequire(sender != address(0), ...\n      MLOAD \t\t\trequire(sender != address(0), ...\n      DUP1 \t\t\trequire(sender != address(0), ...\n      SWAP2 \t\t\trequire(sender != address(0), ...\n      SUB \t\t\trequire(sender != address(0), ...\n      SWAP1 \t\t\trequire(sender != address(0), ...\n      REVERT \t\t\trequire(sender != address(0), ...\n    tag 165\t\t\trequire(sender != address(0), ...\n      JUMPDEST \t\t\trequire(sender != address(0), ...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\trecipient != address(0)\n      AND \t\t\trecipient != address(0)\n      DUP3 \t\t\trecipient\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\trecipient != address(0)\n      AND \t\t\trecipient != address(0)\n      SUB \t\t\trecipient != address(0)\n      PUSH [tag] 168\t\t\trequire(recipient != address(0...\n      JUMPI \t\t\trequire(recipient != address(0...\n      PUSH 40\t\t\trequire(recipient != address(0...\n      MLOAD \t\t\trequire(recipient != address(0...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(recipient != address(0...\n      DUP2 \t\t\trequire(recipient != address(0...\n      MSTORE \t\t\trequire(recipient != address(0...\n      PUSH 4\t\t\trequire(recipient != address(0...\n      ADD \t\t\trequire(recipient != address(0...\n      PUSH [tag] 169\t\t\trequire(recipient != address(0...\n      SWAP1 \t\t\trequire(recipient != address(0...\n      PUSH [tag] 170\t\t\trequire(recipient != address(0...\n      JUMP \t\t\trequire(recipient != address(0...\n    tag 169\t\t\trequire(recipient != address(0...\n      JUMPDEST \t\t\trequire(recipient != address(0...\n      PUSH 40\t\t\trequire(recipient != address(0...\n      MLOAD \t\t\trequire(recipient != address(0...\n      DUP1 \t\t\trequire(recipient != address(0...\n      SWAP2 \t\t\trequire(recipient != address(0...\n      SUB \t\t\trequire(recipient != address(0...\n      SWAP1 \t\t\trequire(recipient != address(0...\n      REVERT \t\t\trequire(recipient != address(0...\n    tag 168\t\t\trequire(recipient != address(0...\n      JUMPDEST \t\t\trequire(recipient != address(0...\n      PUSH [tag] 171\t\t\t_balances[sender].sub(amount, ...\n      DUP2 \t\t\tamount\n      PUSH 40\t\t\t_balances[sender].sub(amount, ...\n      MLOAD \t\t\t_balances[sender].sub(amount, ...\n      DUP1 \t\t\t_balances[sender].sub(amount, ...\n      PUSH 60\t\t\t_balances[sender].sub(amount, ...\n      ADD \t\t\t_balances[sender].sub(amount, ...\n      PUSH 40\t\t\t_balances[sender].sub(amount, ...\n      MSTORE \t\t\t_balances[sender].sub(amount, ...\n      DUP1 \t\t\t_balances[sender].sub(amount, ...\n      PUSH 26\t\t\t_balances[sender].sub(amount, ...\n      DUP2 \t\t\t_balances[sender].sub(amount, ...\n      MSTORE \t\t\t_balances[sender].sub(amount, ...\n      PUSH 20\t\t\t_balances[sender].sub(amount, ...\n      ADD \t\t\t_balances[sender].sub(amount, ...\n      PUSH data A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73\t\t\t_balances[sender].sub(amount, ...\n      PUSH 26\t\t\t_balances[sender].sub(amount, ...\n      SWAP2 \t\t\t_balances[sender].sub(amount, ...\n      CODECOPY \t\t\t_balances[sender].sub(amount, ...\n      PUSH 1\t\t\t_balances\n      PUSH 0\t\t\t_balances[sender]\n      DUP8 \t\t\tsender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[sender]\n      AND \t\t\t_balances[sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[sender]\n      AND \t\t\t_balances[sender]\n      DUP2 \t\t\t_balances[sender]\n      MSTORE \t\t\t_balances[sender]\n      PUSH 20\t\t\t_balances[sender]\n      ADD \t\t\t_balances[sender]\n      SWAP1 \t\t\t_balances[sender]\n      DUP2 \t\t\t_balances[sender]\n      MSTORE \t\t\t_balances[sender]\n      PUSH 20\t\t\t_balances[sender]\n      ADD \t\t\t_balances[sender]\n      PUSH 0\t\t\t_balances[sender]\n      KECCAK256 \t\t\t_balances[sender]\n      SLOAD \t\t\t_balances[sender]\n      PUSH [tag] 107\t\t\t_balances[sender].sub\n      SWAP1 \t\t\t_balances[sender].sub\n      SWAP3 \t\t\t_balances[sender].sub(amount, ...\n      SWAP2 \t\t\t_balances[sender].sub(amount, ...\n      SWAP1 \t\t\t_balances[sender].sub(amount, ...\n      PUSH FFFFFFFF\t\t\t_balances[sender].sub(amount, ...\n      AND \t\t\t_balances[sender].sub(amount, ...\n      JUMP \t\t\t_balances[sender].sub(amount, ...\n    tag 171\t\t\t_balances[sender].sub(amount, ...\n      JUMPDEST \t\t\t_balances[sender].sub(amount, ...\n      PUSH 1\t\t\t_balances\n      PUSH 0\t\t\t_balances[sender]\n      DUP6 \t\t\tsender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[sender]\n      AND \t\t\t_balances[sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[sender]\n      AND \t\t\t_balances[sender]\n      DUP2 \t\t\t_balances[sender]\n      MSTORE \t\t\t_balances[sender]\n      PUSH 20\t\t\t_balances[sender]\n      ADD \t\t\t_balances[sender]\n      SWAP1 \t\t\t_balances[sender]\n      DUP2 \t\t\t_balances[sender]\n      MSTORE \t\t\t_balances[sender]\n      PUSH 20\t\t\t_balances[sender]\n      ADD \t\t\t_balances[sender]\n      PUSH 0\t\t\t_balances[sender]\n      KECCAK256 \t\t\t_balances[sender]\n      DUP2 \t\t\t_balances[sender] = _balances[...\n      SWAP1 \t\t\t_balances[sender] = _balances[...\n      SSTORE \t\t\t_balances[sender] = _balances[...\n      POP \t\t\t_balances[sender] = _balances[...\n      PUSH [tag] 172\t\t\t_balances[recipient].add(amoun...\n      DUP2 \t\t\tamount\n      PUSH 1\t\t\t_balances\n      PUSH 0\t\t\t_balances[recipient]\n      DUP6 \t\t\trecipient\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[recipient]\n      AND \t\t\t_balances[recipient]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[recipient]\n      AND \t\t\t_balances[recipient]\n      DUP2 \t\t\t_balances[recipient]\n      MSTORE \t\t\t_balances[recipient]\n      PUSH 20\t\t\t_balances[recipient]\n      ADD \t\t\t_balances[recipient]\n      SWAP1 \t\t\t_balances[recipient]\n      DUP2 \t\t\t_balances[recipient]\n      MSTORE \t\t\t_balances[recipient]\n      PUSH 20\t\t\t_balances[recipient]\n      ADD \t\t\t_balances[recipient]\n      PUSH 0\t\t\t_balances[recipient]\n      KECCAK256 \t\t\t_balances[recipient]\n      SLOAD \t\t\t_balances[recipient]\n      PUSH [tag] 114\t\t\t_balances[recipient].add\n      SWAP1 \t\t\t_balances[recipient].add\n      SWAP2 \t\t\t_balances[recipient].add(amoun...\n      SWAP1 \t\t\t_balances[recipient].add(amoun...\n      PUSH FFFFFFFF\t\t\t_balances[recipient].add(amoun...\n      AND \t\t\t_balances[recipient].add(amoun...\n      JUMP \t\t\t_balances[recipient].add(amoun...\n    tag 172\t\t\t_balances[recipient].add(amoun...\n      JUMPDEST \t\t\t_balances[recipient].add(amoun...\n      PUSH 1\t\t\t_balances\n      PUSH 0\t\t\t_balances[recipient]\n      DUP5 \t\t\trecipient\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[recipient]\n      AND \t\t\t_balances[recipient]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[recipient]\n      AND \t\t\t_balances[recipient]\n      DUP2 \t\t\t_balances[recipient]\n      MSTORE \t\t\t_balances[recipient]\n      PUSH 20\t\t\t_balances[recipient]\n      ADD \t\t\t_balances[recipient]\n      SWAP1 \t\t\t_balances[recipient]\n      DUP2 \t\t\t_balances[recipient]\n      MSTORE \t\t\t_balances[recipient]\n      PUSH 20\t\t\t_balances[recipient]\n      ADD \t\t\t_balances[recipient]\n      PUSH 0\t\t\t_balances[recipient]\n      KECCAK256 \t\t\t_balances[recipient]\n      DUP2 \t\t\t_balances[recipient] = _balanc...\n      SWAP1 \t\t\t_balances[recipient] = _balanc...\n      SSTORE \t\t\t_balances[recipient] = _balanc...\n      POP \t\t\t_balances[recipient] = _balanc...\n      DUP2 \t\t\trecipient\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(sender, recipient, am...\n      AND \t\t\tTransfer(sender, recipient, am...\n      DUP4 \t\t\tsender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(sender, recipient, am...\n      AND \t\t\tTransfer(sender, recipient, am...\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\tTransfer(sender, recipient, am...\n      DUP4 \t\t\tamount\n      PUSH 40\t\t\tTransfer(sender, recipient, am...\n      MLOAD \t\t\tTransfer(sender, recipient, am...\n      PUSH [tag] 173\t\t\tTransfer(sender, recipient, am...\n      SWAP2 \t\t\tTransfer(sender, recipient, am...\n      SWAP1 \t\t\tTransfer(sender, recipient, am...\n      PUSH [tag] 35\t\t\tTransfer(sender, recipient, am...\n      JUMP \t\t\tTransfer(sender, recipient, am...\n    tag 173\t\t\tTransfer(sender, recipient, am...\n      JUMPDEST \t\t\tTransfer(sender, recipient, am...\n      PUSH 40\t\t\tTransfer(sender, recipient, am...\n      MLOAD \t\t\tTransfer(sender, recipient, am...\n      DUP1 \t\t\tTransfer(sender, recipient, am...\n      SWAP2 \t\t\tTransfer(sender, recipient, am...\n      SUB \t\t\tTransfer(sender, recipient, am...\n      SWAP1 \t\t\tTransfer(sender, recipient, am...\n      LOG3 \t\t\tTransfer(sender, recipient, am...\n      POP \t\t\tfunction _transfer(address sen...\n      POP \t\t\tfunction _transfer(address sen...\n      POP \t\t\tfunction _transfer(address sen...\n      JUMP \t\t\tfunction _transfer(address sen...\n    tag 107\t\t\tfunction sub(uint256 a, uint25...\n      JUMPDEST \t\t\tfunction sub(uint256 a, uint25...\n      PUSH 0\t\t\tuint256\n      DUP4 \t\t\ta\n      DUP4 \t\t\tb\n      GT \t\t\tb <= a\n      ISZERO \t\t\tb <= a\n      DUP3 \t\t\terrorMessage\n      SWAP1 \t\t\trequire(b <= a, errorMessage)\n      PUSH [tag] 175\t\t\trequire(b <= a, errorMessage)\n      JUMPI \t\t\trequire(b <= a, errorMessage)\n      PUSH 40\t\t\trequire(b <= a, errorMessage)\n      MLOAD \t\t\trequire(b <= a, errorMessage)\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(b <= a, errorMessage)\n      DUP2 \t\t\trequire(b <= a, errorMessage)\n      MSTORE \t\t\trequire(b <= a, errorMessage)\n      PUSH 4\t\t\trequire(b <= a, errorMessage)\n      ADD \t\t\trequire(b <= a, errorMessage)\n      PUSH [tag] 176\t\t\trequire(b <= a, errorMessage)\n      SWAP2 \t\t\trequire(b <= a, errorMessage)\n      SWAP1 \t\t\trequire(b <= a, errorMessage)\n      PUSH [tag] 25\t\t\trequire(b <= a, errorMessage)\n      JUMP \t\t\trequire(b <= a, errorMessage)\n    tag 176\t\t\trequire(b <= a, errorMessage)\n      JUMPDEST \t\t\trequire(b <= a, errorMessage)\n      PUSH 40\t\t\trequire(b <= a, errorMessage)\n      MLOAD \t\t\trequire(b <= a, errorMessage)\n      DUP1 \t\t\trequire(b <= a, errorMessage)\n      SWAP2 \t\t\trequire(b <= a, errorMessage)\n      SUB \t\t\trequire(b <= a, errorMessage)\n      SWAP1 \t\t\trequire(b <= a, errorMessage)\n      REVERT \t\t\trequire(b <= a, errorMessage)\n    tag 175\t\t\trequire(b <= a, errorMessage)\n      JUMPDEST \t\t\trequire(b <= a, errorMessage)\n      POP \t\t\trequire(b <= a, errorMessage)\n      PUSH 0\t\t\tuint256 c\n      DUP4 \t\t\tb\n      DUP6 \t\t\ta\n      PUSH [tag] 177\t\t\ta - b\n      SWAP2 \t\t\ta - b\n      SWAP1 \t\t\ta - b\n      PUSH [tag] 178\t\t\ta - b\n      JUMP \t\t\ta - b\n    tag 177\t\t\ta - b\n      JUMPDEST \t\t\ta - b\n      SWAP1 \t\t\tuint256 c = a - b\n      POP \t\t\tuint256 c = a - b\n      DUP1 \t\t\tc\n      SWAP2 \t\t\treturn c\n      POP \t\t\treturn c\n      POP \t\t\treturn c\n      SWAP4 \t\t\tfunction sub(uint256 a, uint25...\n      SWAP3 \t\t\tfunction sub(uint256 a, uint25...\n      POP \t\t\tfunction sub(uint256 a, uint25...\n      POP \t\t\tfunction sub(uint256 a, uint25...\n      POP \t\t\tfunction sub(uint256 a, uint25...\n      JUMP \t\t\tfunction sub(uint256 a, uint25...\n    tag 114\t\t\tfunction add(uint256 a, uint25...\n      JUMPDEST \t\t\tfunction add(uint256 a, uint25...\n      PUSH 0\t\t\tuint256\n      DUP1 \t\t\tuint256 c\n      DUP3 \t\t\tb\n      DUP5 \t\t\ta\n      PUSH [tag] 180\t\t\ta + b\n      SWAP2 \t\t\ta + b\n      SWAP1 \t\t\ta + b\n      PUSH [tag] 181\t\t\ta + b\n      JUMP \t\t\ta + b\n    tag 180\t\t\ta + b\n      JUMPDEST \t\t\ta + b\n      SWAP1 \t\t\tuint256 c = a + b\n      POP \t\t\tuint256 c = a + b\n      DUP4 \t\t\ta\n      DUP2 \t\t\tc\n      LT \t\t\tc >= a\n      ISZERO \t\t\tc >= a\n      PUSH [tag] 182\t\t\trequire(c >= a, \"SafeMath: add...\n      JUMPI \t\t\trequire(c >= a, \"SafeMath: add...\n      PUSH 40\t\t\trequire(c >= a, \"SafeMath: add...\n      MLOAD \t\t\trequire(c >= a, \"SafeMath: add...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(c >= a, \"SafeMath: add...\n      DUP2 \t\t\trequire(c >= a, \"SafeMath: add...\n      MSTORE \t\t\trequire(c >= a, \"SafeMath: add...\n      PUSH 4\t\t\trequire(c >= a, \"SafeMath: add...\n      ADD \t\t\trequire(c >= a, \"SafeMath: add...\n      PUSH [tag] 183\t\t\trequire(c >= a, \"SafeMath: add...\n      SWAP1 \t\t\trequire(c >= a, \"SafeMath: add...\n      PUSH [tag] 184\t\t\trequire(c >= a, \"SafeMath: add...\n      JUMP \t\t\trequire(c >= a, \"SafeMath: add...\n    tag 183\t\t\trequire(c >= a, \"SafeMath: add...\n      JUMPDEST \t\t\trequire(c >= a, \"SafeMath: add...\n      PUSH 40\t\t\trequire(c >= a, \"SafeMath: add...\n      MLOAD \t\t\trequire(c >= a, \"SafeMath: add...\n      DUP1 \t\t\trequire(c >= a, \"SafeMath: add...\n      SWAP2 \t\t\trequire(c >= a, \"SafeMath: add...\n      SUB \t\t\trequire(c >= a, \"SafeMath: add...\n      SWAP1 \t\t\trequire(c >= a, \"SafeMath: add...\n      REVERT \t\t\trequire(c >= a, \"SafeMath: add...\n    tag 182\t\t\trequire(c >= a, \"SafeMath: add...\n      JUMPDEST \t\t\trequire(c >= a, \"SafeMath: add...\n      DUP1 \t\t\tc\n      SWAP2 \t\t\treturn c\n      POP \t\t\treturn c\n      POP \t\t\treturn c\n      SWAP3 \t\t\tfunction add(uint256 a, uint25...\n      SWAP2 \t\t\tfunction add(uint256 a, uint25...\n      POP \t\t\tfunction add(uint256 a, uint25...\n      POP \t\t\tfunction add(uint256 a, uint25...\n      JUMP \t\t\tfunction add(uint256 a, uint25...\n    tag 138\t\t\tfunction _mint(address account...\n      JUMPDEST \t\t\tfunction _mint(address account...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taccount != address(0)\n      AND \t\t\taccount != address(0)\n      DUP3 \t\t\taccount\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taccount != address(0)\n      AND \t\t\taccount != address(0)\n      SUB \t\t\taccount != address(0)\n      PUSH [tag] 186\t\t\trequire(account != address(0),...\n      JUMPI \t\t\trequire(account != address(0),...\n      PUSH 40\t\t\trequire(account != address(0),...\n      MLOAD \t\t\trequire(account != address(0),...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(account != address(0),...\n      DUP2 \t\t\trequire(account != address(0),...\n      MSTORE \t\t\trequire(account != address(0),...\n      PUSH 4\t\t\trequire(account != address(0),...\n      ADD \t\t\trequire(account != address(0),...\n      PUSH [tag] 187\t\t\trequire(account != address(0),...\n      SWAP1 \t\t\trequire(account != address(0),...\n      PUSH [tag] 188\t\t\trequire(account != address(0),...\n      JUMP \t\t\trequire(account != address(0),...\n    tag 187\t\t\trequire(account != address(0),...\n      JUMPDEST \t\t\trequire(account != address(0),...\n      PUSH 40\t\t\trequire(account != address(0),...\n      MLOAD \t\t\trequire(account != address(0),...\n      DUP1 \t\t\trequire(account != address(0),...\n      SWAP2 \t\t\trequire(account != address(0),...\n      SUB \t\t\trequire(account != address(0),...\n      SWAP1 \t\t\trequire(account != address(0),...\n      REVERT \t\t\trequire(account != address(0),...\n    tag 186\t\t\trequire(account != address(0),...\n      JUMPDEST \t\t\trequire(account != address(0),...\n      PUSH [tag] 189\t\t\t_totalSupply.add(amount)\n      DUP2 \t\t\tamount\n      PUSH 3\t\t\t_totalSupply\n      SLOAD \t\t\t_totalSupply\n      PUSH [tag] 114\t\t\t_totalSupply.add\n      SWAP1 \t\t\t_totalSupply.add\n      SWAP2 \t\t\t_totalSupply.add(amount)\n      SWAP1 \t\t\t_totalSupply.add(amount)\n      PUSH FFFFFFFF\t\t\t_totalSupply.add(amount)\n      AND \t\t\t_totalSupply.add(amount)\n      JUMP \t\t\t_totalSupply.add(amount)\n    tag 189\t\t\t_totalSupply.add(amount)\n      JUMPDEST \t\t\t_totalSupply.add(amount)\n      PUSH 3\t\t\t_totalSupply\n      DUP2 \t\t\t_totalSupply = _totalSupply.ad...\n      SWAP1 \t\t\t_totalSupply = _totalSupply.ad...\n      SSTORE \t\t\t_totalSupply = _totalSupply.ad...\n      POP \t\t\t_totalSupply = _totalSupply.ad...\n      PUSH [tag] 190\t\t\t_balances[account].add(amount)\n      DUP2 \t\t\tamount\n      PUSH 1\t\t\t_balances\n      PUSH 0\t\t\t_balances[account]\n      DUP6 \t\t\taccount\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[account]\n      AND \t\t\t_balances[account]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[account]\n      AND \t\t\t_balances[account]\n      DUP2 \t\t\t_balances[account]\n      MSTORE \t\t\t_balances[account]\n      PUSH 20\t\t\t_balances[account]\n      ADD \t\t\t_balances[account]\n      SWAP1 \t\t\t_balances[account]\n      DUP2 \t\t\t_balances[account]\n      MSTORE \t\t\t_balances[account]\n      PUSH 20\t\t\t_balances[account]\n      ADD \t\t\t_balances[account]\n      PUSH 0\t\t\t_balances[account]\n      KECCAK256 \t\t\t_balances[account]\n      SLOAD \t\t\t_balances[account]\n      PUSH [tag] 114\t\t\t_balances[account].add\n      SWAP1 \t\t\t_balances[account].add\n      SWAP2 \t\t\t_balances[account].add(amount)\n      SWAP1 \t\t\t_balances[account].add(amount)\n      PUSH FFFFFFFF\t\t\t_balances[account].add(amount)\n      AND \t\t\t_balances[account].add(amount)\n      JUMP \t\t\t_balances[account].add(amount)\n    tag 190\t\t\t_balances[account].add(amount)\n      JUMPDEST \t\t\t_balances[account].add(amount)\n      PUSH 1\t\t\t_balances\n      PUSH 0\t\t\t_balances[account]\n      DUP5 \t\t\taccount\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[account]\n      AND \t\t\t_balances[account]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_balances[account]\n      AND \t\t\t_balances[account]\n      DUP2 \t\t\t_balances[account]\n      MSTORE \t\t\t_balances[account]\n      PUSH 20\t\t\t_balances[account]\n      ADD \t\t\t_balances[account]\n      SWAP1 \t\t\t_balances[account]\n      DUP2 \t\t\t_balances[account]\n      MSTORE \t\t\t_balances[account]\n      PUSH 20\t\t\t_balances[account]\n      ADD \t\t\t_balances[account]\n      PUSH 0\t\t\t_balances[account]\n      KECCAK256 \t\t\t_balances[account]\n      DUP2 \t\t\t_balances[account] = _balances...\n      SWAP1 \t\t\t_balances[account] = _balances...\n      SSTORE \t\t\t_balances[account] = _balances...\n      POP \t\t\t_balances[account] = _balances...\n      DUP2 \t\t\taccount\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(address(0), account, ...\n      AND \t\t\tTransfer(address(0), account, ...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(address(0), account, ...\n      AND \t\t\tTransfer(address(0), account, ...\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\tTransfer(address(0), account, ...\n      DUP4 \t\t\tamount\n      PUSH 40\t\t\tTransfer(address(0), account, ...\n      MLOAD \t\t\tTransfer(address(0), account, ...\n      PUSH [tag] 191\t\t\tTransfer(address(0), account, ...\n      SWAP2 \t\t\tTransfer(address(0), account, ...\n      SWAP1 \t\t\tTransfer(address(0), account, ...\n      PUSH [tag] 35\t\t\tTransfer(address(0), account, ...\n      JUMP \t\t\tTransfer(address(0), account, ...\n    tag 191\t\t\tTransfer(address(0), account, ...\n      JUMPDEST \t\t\tTransfer(address(0), account, ...\n      PUSH 40\t\t\tTransfer(address(0), account, ...\n      MLOAD \t\t\tTransfer(address(0), account, ...\n      DUP1 \t\t\tTransfer(address(0), account, ...\n      SWAP2 \t\t\tTransfer(address(0), account, ...\n      SUB \t\t\tTransfer(address(0), account, ...\n      SWAP1 \t\t\tTransfer(address(0), account, ...\n      LOG3 \t\t\tTransfer(address(0), account, ...\n      POP \t\t\tfunction _mint(address account...\n      POP \t\t\tfunction _mint(address account...\n      JUMP \t\t\tfunction _mint(address account...\n    tag 154\t\t\tfunction _transferOwnership(ad...\n      JUMPDEST \t\t\tfunction _transferOwnership(ad...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnewOwner != address(0)\n      AND \t\t\tnewOwner != address(0)\n      DUP2 \t\t\tnewOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnewOwner != address(0)\n      AND \t\t\tnewOwner != address(0)\n      SUB \t\t\tnewOwner != address(0)\n      PUSH [tag] 193\t\t\trequire(newOwner != address(0)...\n      JUMPI \t\t\trequire(newOwner != address(0)...\n      PUSH 40\t\t\trequire(newOwner != address(0)...\n      MLOAD \t\t\trequire(newOwner != address(0)...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(newOwner != address(0)...\n      DUP2 \t\t\trequire(newOwner != address(0)...\n      MSTORE \t\t\trequire(newOwner != address(0)...\n      PUSH 4\t\t\trequire(newOwner != address(0)...\n      ADD \t\t\trequire(newOwner != address(0)...\n      PUSH [tag] 194\t\t\trequire(newOwner != address(0)...\n      SWAP1 \t\t\trequire(newOwner != address(0)...\n      PUSH [tag] 195\t\t\trequire(newOwner != address(0)...\n      JUMP \t\t\trequire(newOwner != address(0)...\n    tag 194\t\t\trequire(newOwner != address(0)...\n      JUMPDEST \t\t\trequire(newOwner != address(0)...\n      PUSH 40\t\t\trequire(newOwner != address(0)...\n      MLOAD \t\t\trequire(newOwner != address(0)...\n      DUP1 \t\t\trequire(newOwner != address(0)...\n      SWAP2 \t\t\trequire(newOwner != address(0)...\n      SUB \t\t\trequire(newOwner != address(0)...\n      SWAP1 \t\t\trequire(newOwner != address(0)...\n      REVERT \t\t\trequire(newOwner != address(0)...\n    tag 193\t\t\trequire(newOwner != address(0)...\n      JUMPDEST \t\t\trequire(newOwner != address(0)...\n      DUP1 \t\t\tnewOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tOwnershipTransferred(_owner, n...\n      AND \t\t\tOwnershipTransferred(_owner, n...\n      PUSH 0\t\t\t_owner\n      DUP1 \t\t\t_owner\n      SLOAD \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      PUSH 100\t\t\t_owner\n      EXP \t\t\t_owner\n      SWAP1 \t\t\t_owner\n      DIV \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner\n      AND \t\t\t_owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tOwnershipTransferred(_owner, n...\n      AND \t\t\tOwnershipTransferred(_owner, n...\n      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\tOwnershipTransferred(_owner, n...\n      PUSH 40\t\t\tOwnershipTransferred(_owner, n...\n      MLOAD \t\t\tOwnershipTransferred(_owner, n...\n      PUSH 40\t\t\tOwnershipTransferred(_owner, n...\n      MLOAD \t\t\tOwnershipTransferred(_owner, n...\n      DUP1 \t\t\tOwnershipTransferred(_owner, n...\n      SWAP2 \t\t\tOwnershipTransferred(_owner, n...\n      SUB \t\t\tOwnershipTransferred(_owner, n...\n      SWAP1 \t\t\tOwnershipTransferred(_owner, n...\n      LOG3 \t\t\tOwnershipTransferred(_owner, n...\n      DUP1 \t\t\tnewOwner\n      PUSH 0\t\t\t_owner\n      DUP1 \t\t\t_owner\n      PUSH 100\t\t\t_owner = newOwner\n      EXP \t\t\t_owner = newOwner\n      DUP2 \t\t\t_owner = newOwner\n      SLOAD \t\t\t_owner = newOwner\n      DUP2 \t\t\t_owner = newOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner = newOwner\n      MUL \t\t\t_owner = newOwner\n      NOT \t\t\t_owner = newOwner\n      AND \t\t\t_owner = newOwner\n      SWAP1 \t\t\t_owner = newOwner\n      DUP4 \t\t\t_owner = newOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_owner = newOwner\n      AND \t\t\t_owner = newOwner\n      MUL \t\t\t_owner = newOwner\n      OR \t\t\t_owner = newOwner\n      SWAP1 \t\t\t_owner = newOwner\n      SSTORE \t\t\t_owner = newOwner\n      POP \t\t\t_owner = newOwner\n      POP \t\t\tfunction _transferOwnership(ad...\n      JUMP \t\t\tfunction _transferOwnership(ad...\n    tag 196\t\t\t-License-Identifier: MIT\\r\\npr...\n      JUMPDEST \t\t\t-License-Identifier: MIT\\r\\npr...\n      PUSH 0\t\t\t0.9.0;\n      DUP2 \t\t\t*\\r\\n  \n      MLOAD \t\t\t\\r\\n  /**\\r\\n   \n      SWAP1 \t\t\te IBEP20 {\\r\\n  /**\\r\\n   \n      POP \t\t\te IBEP20 {\\r\\n  /**\\r\\n   \n      SWAP2 \t\t\t-License-Identifier: MIT\\r\\npr...\n      SWAP1 \t\t\t-License-Identifier: MIT\\r\\npr...\n      POP \t\t\t-License-Identifier: MIT\\r\\npr...\n      JUMP \t\t\t-License-Identifier: MIT\\r\\npr...\n    tag 197\t\t\ts the amount of tokens in exis...\n      JUMPDEST \t\t\ts the amount of tokens in exis...\n      PUSH 0\t\t\treturns (ui\n      DUP3 \t\t\t@dev R\n      DUP3 \t\t\t   \n      MSTORE \t\t\t  /**\\r\\n   * @dev Re\n      PUSH 20\t\t\t\\n  f\n      DUP3 \t\t\t  *\n      ADD \t\t\t.\\r\\n   */\\r\\n  fu\n      SWAP1 \t\t\t token decimals.\\r\\n   */\\r\\n ...\n      POP \t\t\t token decimals.\\r\\n   */\\r\\n ...\n      SWAP3 \t\t\ts the amount of tokens in exis...\n      SWAP2 \t\t\ts the amount of tokens in exis...\n      POP \t\t\ts the amount of tokens in exis...\n      POP \t\t\ts the amount of tokens in exis...\n      JUMP \t\t\ts the amount of tokens in exis...\n    tag 198\t\t\tals() external view returns (u...\n      JUMPDEST \t\t\tals() external view returns (u...\n      PUSH 0\t\t\t.\n    tag 239\t\t\t  function symbol() external v...\n      JUMPDEST \t\t\t  function symbol() external v...\n      DUP4 \t\t\tbol() \n      DUP2 \t\t\ts\n      LT \t\t\ton symbol() e\n      ISZERO \t\t\t  function symbol() external v...\n      PUSH [tag] 241\t\t\t  function symbol() external v...\n      JUMPI \t\t\t  function symbol() external v...\n      DUP1 \t\t\te\n      DUP3 \t\t\tn n\n      ADD \t\t\ttoken name.\n      MLOAD \t\t\ts the token name.\\r\n      DUP2 \t\t\tt\n      DUP5 \t\t\tev \n      ADD \t\t\t* @dev Retu\n      MSTORE \t\t\t/**\\r\\n  * @dev Returns the to...\n      PUSH 20\t\t\ttu\n      DUP2 \t\t\t \n      ADD \t\t\tview retur\n      SWAP1 \t\t\trnal view retur\n      POP \t\t\trnal view retur\n      PUSH [tag] 239\t\t\t  function symbol() external v...\n      JUMP \t\t\t  function symbol() external v...\n    tag 241\t\t\t  function symbol() external v...\n      JUMPDEST \t\t\t  function symbol() external v...\n      PUSH 0\t\t\ts\n      DUP5 \t\t\tew ret\n      DUP5 \t\t\tal \n      ADD \t\t\tternal view retu\n      MSTORE \t\t\tme() external view returns \n      POP \t\t\tns the token symbol.\\r\\n   */\\...\n      POP \t\t\tals() external view returns (u...\n      POP \t\t\tals() external view returns (u...\n      POP \t\t\tals() external view returns (u...\n      JUMP \t\t\tals() external view returns (u...\n    tag 199\t\t\try);\\r\\n\\r\\n  /**\\r\\n   * @dev...\n      JUMPDEST \t\t\try);\\r\\n\\r\\n  /**\\r\\n   * @dev...\n      PUSH 0\t\t\ttoken \n      PUSH 1F\t\t\t v\n      NOT \t\t\trnal vi\n      PUSH 1F\t\t\t e\n      DUP4 \t\t\tOwner\n      ADD \t\t\t getOwner() ex\n      AND \t\t\ttion getOwner() external vie\n      SWAP1 \t\t\t*/\\r\\n  function getOwner() ex...\n      POP \t\t\t*/\\r\\n  function getOwner() ex...\n      SWAP2 \t\t\try);\\r\\n\\r\\n  /**\\r\\n   * @dev...\n      SWAP1 \t\t\try);\\r\\n\\r\\n  /**\\r\\n   * @dev...\n      POP \t\t\try);\\r\\n\\r\\n  /**\\r\\n   * @dev...\n      JUMP \t\t\try);\\r\\n\\r\\n  /**\\r\\n   * @dev...\n    tag 200\t\t\tddress);\\r\\n\\r\\n  /**\\r\\n   * ...\n      JUMPDEST \t\t\tddress);\\r\\n\\r\\n  /**\\r\\n   * ...\n      PUSH 0\t\t\tfun\n      PUSH [tag] 244\t\t\tccount) external view returns ...\n      DUP3 \t\t\tnt256\n      PUSH [tag] 196\t\t\tccount) external view returns ...\n      JUMP \t\t\tccount) external view returns ...\n    tag 244\t\t\tccount) external view returns ...\n      JUMPDEST \t\t\tccount) external view returns ...\n      PUSH [tag] 245\t\t\t @dev Moves `amount` tokens fr...\n      DUP2 \t\t\tent`.\\r\n      DUP6 \t\t\teci\n      PUSH [tag] 197\t\t\t @dev Moves `amount` tokens fr...\n      JUMP \t\t\t @dev Moves `amount` tokens fr...\n    tag 245\t\t\t @dev Moves `amount` tokens fr...\n      JUMPDEST \t\t\t @dev Moves `amount` tokens fr...\n      SWAP4 \t\t\t*\\r\\n   * @dev Moves `amount` ...\n      POP \t\t\t*\\r\\n   * @dev Moves `amount` ...\n      PUSH [tag] 246\t\t\t* Returns a boolean value indi...\n      DUP2 \t\t\t succe\n      DUP6 \t\t\tati\n      PUSH 20\t\t\the o\n      DUP7 \t\t\tether\n      ADD \t\t\tg whether the op\n      PUSH [tag] 198\t\t\t* Returns a boolean value indi...\n      JUMP \t\t\t* Returns a boolean value indi...\n    tag 246\t\t\t* Returns a boolean value indi...\n      JUMPDEST \t\t\t* Returns a boolean value indi...\n      PUSH [tag] 247\t\t\t{Transfer} event.\\r\\n   */\\r\\n...\n      DUP2 \t\t\t*/\\r\\n  \n      PUSH [tag] 199\t\t\t{Transfer} event.\\r\\n   */\\r\\n...\n      JUMP \t\t\t{Transfer} event.\\r\\n   */\\r\\n...\n    tag 247\t\t\t{Transfer} event.\\r\\n   */\\r\\n...\n      JUMPDEST \t\t\t{Transfer} event.\\r\\n   */\\r\\n...\n      DUP5 \t\t\tts \n      ADD \t\t\t Emits a {Transfer} event.\\r\\n...\n      SWAP2 \t\t\t*\\r\\n   * Emits a {Transfer} e...\n      POP \t\t\t*\\r\\n   * Emits a {Transfer} e...\n      POP \t\t\ttion balanceOf(address account...\n      SWAP3 \t\t\tddress);\\r\\n\\r\\n  /**\\r\\n   * ...\n      SWAP2 \t\t\tddress);\\r\\n\\r\\n  /**\\r\\n   * ...\n      POP \t\t\tddress);\\r\\n\\r\\n  /**\\r\\n   * ...\n      POP \t\t\tddress);\\r\\n\\r\\n  /**\\r\\n   * ...\n      JUMP \t\t\tddress);\\r\\n\\r\\n  /**\\r\\n   * ...\n    tag 25\t\t\tfer(address recipient, uint256...\n      JUMPDEST \t\t\tfer(address recipient, uint256...\n      PUSH 0\t\t\tof t\n      PUSH 20\t\t\t a\n      DUP3 \t\t\tll be\\r\\n  \n      ADD \t\t\t` will be\\r\\n   * al\n      SWAP1 \t\t\t`spender` will be\\r\\n   * al\n      POP \t\t\t`spender` will be\\r\\n   * al\n      DUP2 \t\t\transferFr\n      DUP2 \t\t\tugh \n      SUB \t\t\tthrough {transferFro\n      PUSH 0\t\t\te\n      DUP4 \t\t\talf of `o\n      ADD \t\t\t behalf of `owner\n      MSTORE \t\t\tpend on behalf of `owner` thro...\n      PUSH [tag] 249\t\t\tzero by default.\\r\\n   *\\r\\n  ...\n      DUP2 \t\t\terFr\n      DUP5 \t\t\tr {tra\n      PUSH [tag] 200\t\t\tzero by default.\\r\\n   *\\r\\n  ...\n      JUMP \t\t\tzero by default.\\r\\n   *\\r\\n  ...\n    tag 249\t\t\tzero by default.\\r\\n   *\\r\\n  ...\n      JUMPDEST \t\t\tzero by default.\\r\\n   *\\r\\n  ...\n      SWAP1 \t\t\ts\\r\\n   * zero by default.\\r\\n...\n      POP \t\t\ts\\r\\n   * zero by default.\\r\\n...\n      SWAP3 \t\t\tfer(address recipient, uint256...\n      SWAP2 \t\t\tfer(address recipient, uint256...\n      POP \t\t\tfer(address recipient, uint256...\n      POP \t\t\tfer(address recipient, uint256...\n      JUMP \t\t\tfer(address recipient, uint256...\n    tag 202\t\t\turns (uint256);\\r\\n\\r\\n  /**\\r...\n      JUMPDEST \t\t\turns (uint256);\\r\\n\\r\\n  /**\\r...\n      PUSH 0\t\t\t \n      DUP1 \t\t\t\\n\n      REVERT \t\t\tokens.\\r\\n   *\n    tag 204\t\t\th this method brings the risk\\...\n      JUMPDEST \t\t\th this method brings the risk\\...\n      PUSH 0\t\t\that som\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t new allowance by unfortunate\\...\n      DUP3 \t\t\tand t\n      AND \t\t\told and the new allowance by u...\n      SWAP1 \t\t\te both the old and the new all...\n      POP \t\t\te both the old and the new all...\n      SWAP2 \t\t\th this method brings the risk\\...\n      SWAP1 \t\t\th this method brings the risk\\...\n      POP \t\t\th this method brings the risk\\...\n      JUMP \t\t\th this method brings the risk\\...\n    tag 205\t\t\tg. One possible solution to mi...\n      JUMPDEST \t\t\tg. One possible solution to mi...\n      PUSH 0\t\t\tthis ra\n      PUSH [tag] 255\t\t\tto first reduce the spen\n      DUP3 \t\t\te spe\n      PUSH [tag] 204\t\t\tto first reduce the spen\n      JUMP \t\t\tto first reduce the spen\n    tag 255\t\t\tto first reduce the spen\n      JUMPDEST \t\t\tto first reduce the spen\n      SWAP1 \t\t\tndition is to first reduce the...\n      POP \t\t\tndition is to first reduce the...\n      SWAP2 \t\t\tg. One possible solution to mi...\n      SWAP1 \t\t\tg. One possible solution to mi...\n      POP \t\t\tg. One possible solution to mi...\n      JUMP \t\t\tg. One possible solution to mi...\n    tag 206\t\t\tnce to 0 and set the\\r\\n   * d...\n      JUMPDEST \t\t\tnce to 0 and set the\\r\\n   * d...\n      PUSH [tag] 257\t\t\t.com/ethereum/EIPs/issue\n      DUP2 \t\t\t/issu\n      PUSH [tag] 205\t\t\t.com/ethereum/EIPs/issue\n      JUMP \t\t\t.com/ethereum/EIPs/issue\n    tag 257\t\t\t.com/ethereum/EIPs/issue\n      JUMPDEST \t\t\t.com/ethereum/EIPs/issue\n      DUP2 \t\t\t/gith\n      EQ \t\t\ts://github.com/ethereum/EIPs/i...\n      PUSH [tag] 258\t\t\t\\n   * https://github.com/ethe...\n      JUMPI \t\t\t\\n   * https://github.com/ethe...\n      PUSH 0\t\t\tn\n      DUP1 \t\t\tm\n      REVERT \t\t\tissuecomment\n    tag 258\t\t\t\\n   * https://github.com/ethe...\n      JUMPDEST \t\t\t\\n   * https://github.com/ethe...\n      POP \t\t\tnce to 0 and set the\\r\\n   * d...\n      JUMP \t\t\tnce to 0 and set the\\r\\n   * d...\n    tag 207\t\t\t *\\r\\n   * Emits an {Approval}...\n      JUMPDEST \t\t\t *\\r\\n   * Emits an {Approval}...\n      PUSH 0\t\t\tfunct\n      DUP2 \t\t\t256 am\n      CALLDATALOAD \t\t\tspender, uint256 amo\n      SWAP1 \t\t\t(address spender, uint256 amo\n      POP \t\t\t(address spender, uint256 amo\n      PUSH [tag] 260\t\t\trnal returns (bool);\\r\\n\\r\\n  ...\n      DUP2 \t\t\t**\\r\\n \n      PUSH [tag] 206\t\t\trnal returns (bool);\\r\\n\\r\\n  ...\n      JUMP \t\t\trnal returns (bool);\\r\\n\\r\\n  ...\n    tag 260\t\t\trnal returns (bool);\\r\\n\\r\\n  ...\n      JUMPDEST \t\t\trnal returns (bool);\\r\\n\\r\\n  ...\n      SWAP3 \t\t\t *\\r\\n   * Emits an {Approval}...\n      SWAP2 \t\t\t *\\r\\n   * Emits an {Approval}...\n      POP \t\t\t *\\r\\n   * Emits an {Approval}...\n      POP \t\t\t *\\r\\n   * Emits an {Approval}...\n      JUMP \t\t\t *\\r\\n   * Emits an {Approval}...\n    tag 208\t\t\ts `amount` tokens from `sender...\n      JUMPDEST \t\t\ts `amount` tokens from `sender...\n      PUSH 0\t\t\tecipien\n      DUP2 \t\t\towanc\n      SWAP1 \t\t\te\\r\\n   * allowanc\n      POP \t\t\te\\r\\n   * allowanc\n      SWAP2 \t\t\ts `amount` tokens from `sender...\n      SWAP1 \t\t\ts `amount` tokens from `sender...\n      POP \t\t\ts `amount` tokens from `sender...\n      JUMP \t\t\ts `amount` tokens from `sender...\n    tag 209\t\t\t `amount` is then deducted fro...\n      JUMPDEST \t\t\t `amount` is then deducted fro...\n      PUSH [tag] 263\t\t\t Returns a boolean value\n      DUP2 \t\t\t valu\n      PUSH [tag] 208\t\t\t Returns a boolean value\n      JUMP \t\t\t Returns a boolean value\n    tag 263\t\t\t Returns a boolean value\n      JUMPDEST \t\t\t Returns a boolean value\n      DUP2 \t\t\t*\\r\\n  \n      EQ \t\t\t   *\\r\\n   * Returns a boolean...\n      PUSH [tag] 264\t\t\tlowance.\\r\\n   *\\r\\n   * Retur...\n      JUMPI \t\t\tlowance.\\r\\n   *\\r\\n   * Retur...\n      PUSH 0\t\t\tt\n      DUP1 \t\t\tw\n      REVERT \t\t\tcating wheth\n    tag 264\t\t\tlowance.\\r\\n   *\\r\\n   * Retur...\n      JUMPDEST \t\t\tlowance.\\r\\n   *\\r\\n   * Retur...\n      POP \t\t\t `amount` is then deducted fro...\n      JUMP \t\t\t `amount` is then deducted fro...\n    tag 210\t\t\ton succeeded.\\r\\n   *\\r\\n   * ...\n      JUMPDEST \t\t\ton succeeded.\\r\\n   *\\r\\n   * ...\n      PUSH 0\t\t\tvent.\n      DUP2 \t\t\taddres\n      CALLDATALOAD \t\t\ttransferFrom(address\n      SWAP1 \t\t\tfunction transferFrom(address\n      POP \t\t\tfunction transferFrom(address\n      PUSH [tag] 266\t\t\taddress recipient, uint256 amo...\n      DUP2 \t\t\tamoun\n      PUSH [tag] 209\t\t\taddress recipient, uint256 amo...\n      JUMP \t\t\taddress recipient, uint256 amo...\n    tag 266\t\t\taddress recipient, uint256 amo...\n      JUMPDEST \t\t\taddress recipient, uint256 amo...\n      SWAP3 \t\t\ton succeeded.\\r\\n   *\\r\\n   * ...\n      SWAP2 \t\t\ton succeeded.\\r\\n   *\\r\\n   * ...\n      POP \t\t\ton succeeded.\\r\\n   *\\r\\n   * ...\n      POP \t\t\ton succeeded.\\r\\n   *\\r\\n   * ...\n      JUMP \t\t\ton succeeded.\\r\\n   *\\r\\n   * ...\n    tag 28\t\t\teturns (bool);\\r\\n\\r\\n  /**\\r\\...\n      JUMPDEST \t\t\teturns (bool);\\r\\n\\r\\n  /**\\r\\...\n      PUSH 0\t\t\toved f\n      DUP1 \t\t\tm one \n      PUSH 40\t\t\t  \n      DUP4 \t\t\ter (`to`)\n      DUP6 \t\t\t  * ano\n      SUB \t\t\to\\r\\n   * another (`to`).\n      SLT \t\t\t`) to\\r\\n   * another (`to`).\\...\n      ISZERO \t\t\trom`) to\\r\\n   * another (`to`...\n      PUSH [tag] 268\t\t\trom`) to\\r\\n   * another (`to`...\n      JUMPI \t\t\trom`) to\\r\\n   * another (`to`...\n      PUSH [tag] 269\t\t\t   * Note that `value` may be ...\n      PUSH [tag] 202\t\t\t   * Note that `value` may be ...\n      JUMP \t\t\t   * Note that `value` may be ...\n    tag 269\t\t\t   * Note that `value` may be ...\n      JUMPDEST \t\t\t   * Note that `value` may be ...\n    tag 268\t\t\trom`) to\\r\\n   * another (`to`...\n      JUMPDEST \t\t\trom`) to\\r\\n   * another (`to`...\n      PUSH 0\t\t\t\\r\n      PUSH [tag] 270\t\t\td when the allowance of a `spe...\n      DUP6 \t\t\twner` i\n      DUP3 \t\t\tfor an\n      DUP7 \t\t\t `spender\n      ADD \t\t\tof a `spender` for an \n      PUSH [tag] 207\t\t\td when the allowance of a `spe...\n      JUMP \t\t\td when the allowance of a `spe...\n    tag 270\t\t\td when the allowance of a `spe...\n      JUMPDEST \t\t\td when the allowance of a `spe...\n      SWAP3 \t\t\tdev Emitted when the allowance...\n      POP \t\t\tdev Emitted when the allowance...\n      POP \t\t\tindexed to, uint256 value);\\r\\...\n      PUSH 20\t\t\t n\n      PUSH [tag] 271\t\t\tevent Approval(address indexed...\n      DUP6 \t\t\t indexe\n      DUP3 \t\t\t, addr\n      DUP7 \t\t\tdexed own\n      ADD \t\t\ts indexed owner, addre\n      PUSH [tag] 210\t\t\tevent Approval(address indexed...\n      JUMP \t\t\tevent Approval(address indexed...\n    tag 271\t\t\tevent Approval(address indexed...\n      JUMPDEST \t\t\tevent Approval(address indexed...\n      SWAP2 \t\t\t\\n   */\\r\\n  event Approval(ad...\n      POP \t\t\t\\n   */\\r\\n  event Approval(ad...\n      POP \t\t\t to {approve}. `value` is the ...\n      SWAP3 \t\t\teturns (bool);\\r\\n\\r\\n  /**\\r\\...\n      POP \t\t\teturns (bool);\\r\\n\\r\\n  /**\\r\\...\n      SWAP3 \t\t\teturns (bool);\\r\\n\\r\\n  /**\\r\\...\n      SWAP1 \t\t\teturns (bool);\\r\\n\\r\\n  /**\\r\\...\n      POP \t\t\teturns (bool);\\r\\n\\r\\n  /**\\r\\...\n      JUMP \t\t\teturns (bool);\\r\\n\\r\\n  /**\\r\\...\n    tag 211\t\t\t);\\r\\n}\\r\\n\\r\\n/*\\r\\n * @dev P...\n      JUMPDEST \t\t\t);\\r\\n}\\r\\n\\r\\n/*\\r\\n * @dev P...\n      PUSH 0\t\t\trmation\n      DUP2 \t\t\t, inc\n      ISZERO \t\t\tcontext, incl\n      ISZERO \t\t\tcution context, inclu\n      SWAP1 \t\t\tcurrent execution context, inc...\n      POP \t\t\tcurrent execution context, inc...\n      SWAP2 \t\t\t);\\r\\n}\\r\\n\\r\\n/*\\r\\n * @dev P...\n      SWAP1 \t\t\t);\\r\\n}\\r\\n\\r\\n/*\\r\\n * @dev P...\n      POP \t\t\t);\\r\\n}\\r\\n\\r\\n/*\\r\\n * @dev P...\n      JUMP \t\t\t);\\r\\n}\\r\\n\\r\\n/*\\r\\n * @dev P...\n    tag 212\t\t\t sender of the transaction and...\n      JUMPDEST \t\t\t sender of the transaction and...\n      PUSH [tag] 274\t\t\tvia msg.sender and ms\n      DUP2 \t\t\tand m\n      PUSH [tag] 211\t\t\tvia msg.sender and ms\n      JUMP \t\t\tvia msg.sender and ms\n    tag 274\t\t\tvia msg.sender and ms\n      JUMPDEST \t\t\tvia msg.sender and ms\n      DUP3 \t\t\t\\r\\n \n      MSTORE \t\t\tailable\\r\\n * via msg.sender a...\n      POP \t\t\t sender of the transaction and...\n      POP \t\t\t sender of the transaction and...\n      JUMP \t\t\t sender of the transaction and...\n    tag 31\t\t\tshould not be accessed in such...\n      JUMPDEST \t\t\tshould not be accessed in such...\n      PUSH 0\t\t\tansa\n      PUSH 20\t\t\t p\n      DUP3 \t\t\ting and\\r\\n\n      ADD \t\t\tsending and\\r\\n * pa\n      SWAP1 \t\t\taccount sending and\\r\\n * pa\n      POP \t\t\taccount sending and\\r\\n * pa\n      PUSH [tag] 276\t\t\txecution may not be the actual...\n      PUSH 0\t\t\tn\n      DUP4 \t\t\t applicat\n      ADD \t\t\ts an application\\r\n      DUP5 \t\t\t(as fa\n      PUSH [tag] 212\t\t\txecution may not be the actual...\n      JUMP \t\t\txecution may not be the actual...\n    tag 276\t\t\txecution may not be the actual...\n      JUMPDEST \t\t\txecution may not be the actual...\n      SWAP3 \t\t\tshould not be accessed in such...\n      SWAP2 \t\t\tshould not be accessed in such...\n      POP \t\t\tshould not be accessed in such...\n      POP \t\t\tshould not be accessed in such...\n      JUMP \t\t\tshould not be accessed in such...\n    tag 213\t\t\ted).\\r\\n *\\r\\n * This contract...\n      JUMPDEST \t\t\ted).\\r\\n *\\r\\n * This contract...\n      PUSH [tag] 278\t\t\t */\\r\\ncontract Context {\\r\n      DUP2 \t\t\text {\n      PUSH [tag] 208\t\t\t */\\r\\ncontract Context {\\r\n      JUMP \t\t\t */\\r\\ncontract Context {\\r\n    tag 278\t\t\t */\\r\\ncontract Context {\\r\n      JUMPDEST \t\t\t */\\r\\ncontract Context {\\r\n      DUP3 \t\t\tts.\n      MSTORE \t\t\tcontracts.\\r\\n */\\r\\ncontract ...\n      POP \t\t\ted).\\r\\n *\\r\\n * This contract...\n      POP \t\t\ted).\\r\\n *\\r\\n * This contract...\n      JUMP \t\t\ted).\\r\\n *\\r\\n * This contract...\n    tag 35\t\t\tnternal constructor, to preven...\n      JUMPDEST \t\t\tnternal constructor, to preven...\n      PUSH 0\t\t\tntra\n      PUSH 20\t\t\tit\n      DUP3 \t\t\td via inh\n      ADD \t\t\t used via inherita\n      SWAP1 \t\t\thould be used via inherita\n      POP \t\t\thould be used via inherita\n      PUSH [tag] 280\t\t\tnstructor () { }\\r\\n\\r\\n  func...\n      PUSH 0\t\t\td\n      DUP4 \t\t\t returns \n      ADD \t\t\tview returns (add\n      DUP5 \t\t\tintern\n      PUSH [tag] 213\t\t\tnstructor () { }\\r\\n\\r\\n  func...\n      JUMP \t\t\tnstructor () { }\\r\\n\\r\\n  func...\n    tag 280\t\t\tnstructor () { }\\r\\n\\r\\n  func...\n      JUMPDEST \t\t\tnstructor () { }\\r\\n\\r\\n  func...\n      SWAP3 \t\t\tnternal constructor, to preven...\n      SWAP2 \t\t\tnternal constructor, to preven...\n      POP \t\t\tnternal constructor, to preven...\n      POP \t\t\tnternal constructor, to preven...\n      JUMP \t\t\tnternal constructor, to preven...\n    tag 38\t\t\teturn msg.sender;\\r\\n  }\\r\\n\\r...\n      JUMPDEST \t\t\teturn msg.sender;\\r\\n  }\\r\\n\\r...\n      PUSH 0\t\t\tmemory\n      DUP1 \t\t\t{\\r\\n   \n      PUSH 0\t\t\this; /\n      PUSH 60\t\t\tge\n      DUP5 \t\t\ting witho\n      DUP7 \t\t\tlity wa\n      SUB \t\t\ttability warning withou\n      SLT \t\t\te mutability warning without g...\n      ISZERO \t\t\ttate mutability warning withou...\n      PUSH [tag] 282\t\t\ttate mutability warning withou...\n      JUMPI \t\t\ttate mutability warning withou...\n      PUSH [tag] 283\t\t\tting bytecode - see https://gi...\n      PUSH [tag] 202\t\t\tting bytecode - see https://gi...\n      JUMP \t\t\tting bytecode - see https://gi...\n    tag 283\t\t\tting bytecode - see https://gi...\n      JUMPDEST \t\t\tting bytecode - see https://gi...\n    tag 282\t\t\ttate mutability warning withou...\n      JUMPDEST \t\t\ttate mutability warning withou...\n      PUSH 0\t\t\te\n      PUSH [tag] 284\t\t\tmetic operations with added ov...\n      DUP7 \t\t\tks.\\r\\n *\n      DUP3 \t\t\t\\r\\n * c\n      DUP8 \t\t\ted overfl\n      ADD \t\t\t added overflow\\r\\n * ch\n      PUSH [tag] 207\t\t\tmetic operations with added ov...\n      JUMP \t\t\tmetic operations with added ov...\n    tag 284\t\t\tmetic operations with added ov...\n      JUMPDEST \t\t\tmetic operations with added ov...\n      SWAP4 \t\t\tty's arithmetic operations wit...\n      POP \t\t\tty's arithmetic operations wit...\n      POP \t\t\t\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @d...\n      PUSH 20\t\t\trf\n      PUSH [tag] 285\t\t\tult\\r\\n * in bugs, because pro...\n      DUP7 \t\t\tassume \n      DUP3 \t\t\t usual\n      DUP8 \t\t\tprogramme\n      ADD \t\t\tuse programmers usuall\n      PUSH [tag] 207\t\t\tult\\r\\n * in bugs, because pro...\n      JUMP \t\t\tult\\r\\n * in bugs, because pro...\n    tag 285\t\t\tult\\r\\n * in bugs, because pro...\n      JUMPDEST \t\t\tult\\r\\n * in bugs, because pro...\n      SWAP3 \t\t\teasily result\\r\\n * in bugs, b...\n      POP \t\t\teasily result\\r\\n * in bugs, b...\n      POP \t\t\ttions in Solidity wrap on over...\n      PUSH 40\t\t\t s\n      PUSH [tag] 286\t\t\t level programming languages.\\...\n      DUP7 \t\t\trestore\n      DUP3 \t\t\tafeMat\n      DUP8 \t\t\tges.\\r\\n * \n      ADD \t\t\tnguages.\\r\\n * `SafeMath\n      PUSH [tag] 210\t\t\t level programming languages.\\...\n      JUMP \t\t\t level programming languages.\\...\n    tag 286\t\t\t level programming languages.\\...\n      JUMPDEST \t\t\t level programming languages.\\...\n      SWAP2 \t\t\tor in high level programming l...\n      POP \t\t\tor in high level programming l...\n      POP \t\t\tes an\\r\\n * error, which is th...\n      SWAP3 \t\t\teturn msg.sender;\\r\\n  }\\r\\n\\r...\n      POP \t\t\teturn msg.sender;\\r\\n  }\\r\\n\\r...\n      SWAP3 \t\t\teturn msg.sender;\\r\\n  }\\r\\n\\r...\n      POP \t\t\teturn msg.sender;\\r\\n  }\\r\\n\\r...\n      SWAP3 \t\t\teturn msg.sender;\\r\\n  }\\r\\n\\r...\n      JUMP \t\t\teturn msg.sender;\\r\\n  }\\r\\n\\r...\n    tag 214\t\t\trting the transaction when an\\...\n      JUMPDEST \t\t\trting the transaction when an\\...\n      PUSH 0\t\t\tperatio\n      PUSH FF\t\t\tibra\n      DUP3 \t\t\t this\n      AND \t\t\tsing this librar\n      SWAP1 \t\t\t.\\r\\n *\\r\\n * Using this libra...\n      POP \t\t\t.\\r\\n *\\r\\n * Using this libra...\n      SWAP2 \t\t\trting the transaction when an\\...\n      SWAP1 \t\t\trting the transaction when an\\...\n      POP \t\t\trting the transaction when an\\...\n      JUMP \t\t\trting the transaction when an\\...\n    tag 215\t\t\t the unchecked operations elim...\n      JUMPDEST \t\t\t the unchecked operations elim...\n      PUSH [tag] 289\t\t\ted to use it always.\\r\\n\n      DUP2 \t\t\tays.\\r\n      PUSH [tag] 214\t\t\ted to use it always.\\r\\n\n      JUMP \t\t\ted to use it always.\\r\\n\n    tag 289\t\t\ted to use it always.\\r\\n\n      JUMPDEST \t\t\ted to use it always.\\r\\n\n      DUP3 \t\t\tmme\n      MSTORE \t\t\t's recommended to use it alway...\n      POP \t\t\t the unchecked operations elim...\n      POP \t\t\t the unchecked operations elim...\n      JUMP \t\t\t the unchecked operations elim...\n    tag 44\t\t\tSafeMath {\\r\\n  /**\\r\\n   * @d...\n      JUMPDEST \t\t\tSafeMath {\\r\\n  /**\\r\\n   * @d...\n      PUSH 0\t\t\t\\n   \n      PUSH 20\t\t\tt \n      DUP3 \t\t\t Counterp\n      ADD \t\t\t   * Counterpart t\n      SWAP1 \t\t\t\\r\\n   *\\r\\n   * Counterpart t\n      POP \t\t\t\\r\\n   *\\r\\n   * Counterpart t\n      PUSH [tag] 291\t\t\t's `+` operator.\\r\\n   *\\r\\n  ...\n      PUSH 0\t\t\to\n      DUP4 \t\t\tdition ca\n      ADD \t\t\t- Addition cannot\n      DUP5 \t\t\ts:\\r\\n  \n      PUSH [tag] 215\t\t\t's `+` operator.\\r\\n   *\\r\\n  ...\n      JUMP \t\t\t's `+` operator.\\r\\n   *\\r\\n  ...\n    tag 291\t\t\t's `+` operator.\\r\\n   *\\r\\n  ...\n      JUMPDEST \t\t\t's `+` operator.\\r\\n   *\\r\\n  ...\n      SWAP3 \t\t\tSafeMath {\\r\\n  /**\\r\\n   * @d...\n      SWAP2 \t\t\tSafeMath {\\r\\n  /**\\r\\n   * @d...\n      POP \t\t\tSafeMath {\\r\\n  /**\\r\\n   * @d...\n      POP \t\t\tSafeMath {\\r\\n  /**\\r\\n   * @d...\n      JUMP \t\t\tSafeMath {\\r\\n  /**\\r\\n   * @d...\n    tag 51\t\t\t */\\r\\n  function add(uint256 ...\n      JUMPDEST \t\t\t */\\r\\n  function add(uint256 ...\n      PUSH 0\t\t\turns (\n      PUSH 20\t\t\tui\n      DUP3 \t\t\t b;\\r\\n    \n      DUP5 \t\t\t6 c = a\n      SUB \t\t\tnt256 c = a + b;\\r\\n    r\n      SLT \t\t\t  uint256 c = a + b;\\r\\n    re...\n      ISZERO \t\t\t\\n    uint256 c = a + b;\\r\\n  ...\n      PUSH [tag] 293\t\t\t\\n    uint256 c = a + b;\\r\\n  ...\n      JUMPI \t\t\t\\n    uint256 c = a + b;\\r\\n  ...\n      PUSH [tag] 294\t\t\t >= a, \"SafeMath: addition ove...\n      PUSH [tag] 202\t\t\t >= a, \"SafeMath: addition ove...\n      JUMP \t\t\t >= a, \"SafeMath: addition ove...\n    tag 294\t\t\t >= a, \"SafeMath: addition ove...\n      JUMPDEST \t\t\t >= a, \"SafeMath: addition ove...\n    tag 293\t\t\t\\n    uint256 c = a + b;\\r\\n  ...\n      JUMPDEST \t\t\t\\n    uint256 c = a + b;\\r\\n  ...\n      PUSH 0\t\t\t \n      PUSH [tag] 295\t\t\t   * overflow (when the result...\n      DUP5 \t\t\t\\n   *\\r\\n\n      DUP3 \t\t\tgative\n      DUP6 \t\t\tesult is \n      ADD \t\t\the result is negative)\n      PUSH [tag] 207\t\t\t   * overflow (when the result...\n      JUMP \t\t\t   * overflow (when the result...\n    tag 295\t\t\t   * overflow (when the result...\n      JUMPDEST \t\t\t   * overflow (when the result...\n      SWAP2 \t\t\trting on\\r\\n   * overflow (whe...\n      POP \t\t\trting on\\r\\n   * overflow (whe...\n      POP \t\t\te subtraction of two unsigned ...\n      SWAP3 \t\t\t */\\r\\n  function add(uint256 ...\n      SWAP2 \t\t\t */\\r\\n  function add(uint256 ...\n      POP \t\t\t */\\r\\n  function add(uint256 ...\n      POP \t\t\t */\\r\\n  function add(uint256 ...\n      JUMP \t\t\t */\\r\\n  function add(uint256 ...\n    tag 216\t\t\tdity's `-` operator.\\r\\n   *\\r...\n      JUMPDEST \t\t\tdity's `-` operator.\\r\\n   *\\r...\n      PUSH [tag] 297\t\t\t */\\r\\n  function sub(uint\n      DUP2 \t\t\tb(uin\n      PUSH [tag] 205\t\t\t */\\r\\n  function sub(uint\n      JUMP \t\t\t */\\r\\n  function sub(uint\n    tag 297\t\t\t */\\r\\n  function sub(uint\n      JUMPDEST \t\t\t */\\r\\n  function sub(uint\n      DUP3 \t\t\t.\\r\\n\n      MSTORE \t\t\tverflow.\\r\\n   */\\r\\n  functio...\n      POP \t\t\tdity's `-` operator.\\r\\n   *\\r...\n      POP \t\t\tdity's `-` operator.\\r\\n   *\\r...\n      JUMP \t\t\tdity's `-` operator.\\r\\n   *\\r...\n    tag 59\t\t\t6 b) internal pure returns (ui...\n      JUMPDEST \t\t\t6 b) internal pure returns (ui...\n      PUSH 0\t\t\t);\\r\\n\n      PUSH 20\t\t\te \n      DUP3 \t\t\t Returns \n      ADD \t\t\t@dev Returns the s\n      SWAP1 \t\t\t*\\r\\n   * @dev Returns the s\n      POP \t\t\t*\\r\\n   * @dev Returns the s\n      PUSH [tag] 299\t\t\t of two unsigned integers, rev...\n      PUSH 0\t\t\te\n      DUP4 \t\t\ton\\r\\n   * \n      ADD \t\t\tage on\\r\\n   * over\n      DUP5 \t\t\tstom m\n      PUSH [tag] 216\t\t\t of two unsigned integers, rev...\n      JUMP \t\t\t of two unsigned integers, rev...\n    tag 299\t\t\t of two unsigned integers, rev...\n      JUMPDEST \t\t\t of two unsigned integers, rev...\n      SWAP3 \t\t\t6 b) internal pure returns (ui...\n      SWAP2 \t\t\t6 b) internal pure returns (ui...\n      POP \t\t\t6 b) internal pure returns (ui...\n      POP \t\t\t6 b) internal pure returns (ui...\n      JUMP \t\t\t6 b) internal pure returns (ui...\n    tag 68\t\t\t result is negative).\\r\\n   *\\...\n      JUMPDEST \t\t\t result is negative).\\r\\n   *\\...\n      PUSH 0\t\t\t `-` o\n      PUSH 20\t\t\tSu\n      DUP3 \t\t\tts:\\r\\n   *\n      DUP5 \t\t\tequirem\n      SUB \t\t\t * Requirements:\\r\\n   * \n      SLT \t\t\t\\r\\n   * Requirements:\\r\\n   *...\n      ISZERO \t\t\t  *\\r\\n   * Requirements:\\r\\n ...\n      PUSH [tag] 301\t\t\t  *\\r\\n   * Requirements:\\r\\n ...\n      JUMPI \t\t\t  *\\r\\n   * Requirements:\\r\\n ...\n      PUSH [tag] 302\t\t\tction cannot overflow.\\r\\n   *...\n      PUSH [tag] 202\t\t\tction cannot overflow.\\r\\n   *...\n      JUMP \t\t\tction cannot overflow.\\r\\n   *...\n    tag 302\t\t\tction cannot overflow.\\r\\n   *...\n      JUMPDEST \t\t\tction cannot overflow.\\r\\n   *...\n    tag 301\t\t\t  *\\r\\n   * Requirements:\\r\\n ...\n      JUMPDEST \t\t\t  *\\r\\n   * Requirements:\\r\\n ...\n      PUSH 0\t\t\ti\n      PUSH [tag] 303\t\t\t<= a, errorMessage);\\r\\n    ui...\n      DUP5 \t\t\t\\n\\r\\n    \n      DUP3 \t\t\t= a - \n      DUP6 \t\t\t uint256 \n      ADD \t\t\t\\n    uint256 c = a - b\n      PUSH [tag] 210\t\t\t<= a, errorMessage);\\r\\n    ui...\n      JUMP \t\t\t<= a, errorMessage);\\r\\n    ui...\n    tag 303\t\t\t<= a, errorMessage);\\r\\n    ui...\n      JUMPDEST \t\t\t<= a, errorMessage);\\r\\n    ui...\n      SWAP2 \t\t\trequire(b <= a, errorMessage);...\n      POP \t\t\trequire(b <= a, errorMessage);...\n      POP \t\t\tage) internal pure returns (ui...\n      SWAP3 \t\t\t result is negative).\\r\\n   *\\...\n      SWAP2 \t\t\t result is negative).\\r\\n   *\\...\n      POP \t\t\t result is negative).\\r\\n   *\\...\n      POP \t\t\t result is negative).\\r\\n   *\\...\n      JUMP \t\t\t result is negative).\\r\\n   *\\...\n    tag 81\t\t\t\\n   * @dev Returns the multip...\n      JUMPDEST \t\t\t\\n   * @dev Returns the multip...\n      PUSH 0\t\t\trting \n      DUP1 \t\t\t\\r\\n   *\n      PUSH 40\t\t\tit\n      DUP4 \t\t\tart to So\n      DUP6 \t\t\t Counte\n      SUB \t\t\t   * Counterpart to Sol\n      SLT \t\t\t *\\r\\n   * Counterpart to Soli...\n      ISZERO \t\t\t\\n   *\\r\\n   * Counterpart to ...\n      PUSH [tag] 305\t\t\t\\n   *\\r\\n   * Counterpart to ...\n      JUMPI \t\t\t\\n   *\\r\\n   * Counterpart to ...\n      PUSH [tag] 306\t\t\t`*` operator.\\r\\n   *\\r\\n   * ...\n      PUSH [tag] 202\t\t\t`*` operator.\\r\\n   *\\r\\n   * ...\n      JUMP \t\t\t`*` operator.\\r\\n   *\\r\\n   * ...\n    tag 306\t\t\t`*` operator.\\r\\n   *\\r\\n   * ...\n      JUMPDEST \t\t\t`*` operator.\\r\\n   *\\r\\n   * ...\n    tag 305\t\t\t\\n   *\\r\\n   * Counterpart to ...\n      JUMPDEST \t\t\t\\n   *\\r\\n   * Counterpart to ...\n      PUSH 0\t\t\t6\n      PUSH [tag] 307\t\t\ts (uint256) {\\r\\n    // Gas op...\n      DUP6 \t\t\tis chea\n      DUP3 \t\t\ton: th\n      DUP7 \t\t\t optimiza\n      ADD \t\t\t Gas optimization: thi\n      PUSH [tag] 207\t\t\ts (uint256) {\\r\\n    // Gas op...\n      JUMP \t\t\ts (uint256) {\\r\\n    // Gas op...\n    tag 307\t\t\ts (uint256) {\\r\\n    // Gas op...\n      JUMPDEST \t\t\ts (uint256) {\\r\\n    // Gas op...\n      SWAP3 \t\t\ture returns (uint256) {\\r\\n   ...\n      POP \t\t\ture returns (uint256) {\\r\\n   ...\n      POP \t\t\tunction mul(uint256 a, uint256...\n      PUSH 20\t\t\t  \n      PUSH [tag] 308\t\t\t' is also tested.\\r\\n    // Se...\n      DUP6 \t\t\t.com/Op\n      DUP3 \t\t\t://git\n      DUP7 \t\t\t See: htt\n      ADD \t\t\t  // See: https://gith\n      PUSH [tag] 207\t\t\t' is also tested.\\r\\n    // Se...\n      JUMP \t\t\t' is also tested.\\r\\n    // Se...\n    tag 308\t\t\t' is also tested.\\r\\n    // Se...\n      JUMPDEST \t\t\t' is also tested.\\r\\n    // Se...\n      SWAP2 \t\t\tlost if 'b' is also tested.\\r\\...\n      POP \t\t\tlost if 'b' is also tested.\\r\\...\n      POP \t\t\t' not being zero, but the\\r\\n ...\n      SWAP3 \t\t\t\\n   * @dev Returns the multip...\n      POP \t\t\t\\n   * @dev Returns the multip...\n      SWAP3 \t\t\t\\n   * @dev Returns the multip...\n      SWAP1 \t\t\t\\n   * @dev Returns the multip...\n      POP \t\t\t\\n   * @dev Returns the multip...\n      JUMP \t\t\t\\n   * @dev Returns the multip...\n    tag 217\t\t\tcontracts/pull/522\\r\\n    if (...\n      JUMPDEST \t\t\tcontracts/pull/522\\r\\n    if (...\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\turn 0;\\r\\n    }\\r\\n\\r\\n    uin...\n      PUSH 0\t\t\tr\n      MSTORE \t\t\t\\n      return 0;\\r\\n    }\\r\\n...\n      PUSH 22\t\t\tow\")\n      PUSH 4\t\t\tr\n      MSTORE \t\t\tion overflow\");\n      PUSH 24\t\t\t  }\\r\n      PUSH 0\t\t\t;\n      REVERT \t\t\teturn c;\\r\\n  }\\r\\n\n    tag 89\t\t\t* @dev Returns the integer div...\n      JUMPDEST \t\t\t* @dev Returns the integer div...\n      PUSH 0\t\t\tnsigne\n      PUSH 2\t\t\tv\n      DUP3 \t\t\t  * \n      DIV \t\t\tn\\r\\n   * divi\n      SWAP1 \t\t\t Reverts on\\r\\n   * divi\n      POP \t\t\t Reverts on\\r\\n   * divi\n      PUSH 1\t\t\te\n      DUP3 \t\t\tards\n      AND \t\t\t towards zer\n      DUP1 \t\t\tterpart to Solidit\n      PUSH [tag] 311\t\t\t\\n   * Counterpart to Solidity...\n      JUMPI \t\t\t\\n   * Counterpart to Solidity...\n      PUSH 7F\t\t\tuses\n      DUP3 \t\t\tunctio\n      AND \t\t\tis function uses \n      SWAP2 \t\t\t. Note: this function uses \n      POP \t\t\t. Note: this function uses \n    tag 311\t\t\t\\n   * Counterpart to Solidity...\n      JUMPDEST \t\t\t\\n   * Counterpart to Solidity...\n      PUSH 20\t\t\tch\n      DUP3 \t\t\tas unt\n      LT \t\t\tg gas untouche\n      DUP2 \t\t\thich leaves remain\n      SUB \t\t\t (which leaves remaining gas u...\n      PUSH [tag] 312\t\t\tode (which leaves remaining ga...\n      JUMPI \t\t\tode (which leaves remaining ga...\n      PUSH [tag] 313\t\t\ty\\r\\n   * uses an in\n      PUSH [tag] 217\t\t\ty\\r\\n   * uses an in\n      JUMP \t\t\ty\\r\\n   * uses an in\n    tag 313\t\t\ty\\r\\n   * uses an in\n      JUMPDEST \t\t\ty\\r\\n   * uses an in\n    tag 312\t\t\tode (which leaves remaining ga...\n      JUMPDEST \t\t\tode (which leaves remaining ga...\n      POP \t\t\t integers. Reverts on\\r\\n   * ...\n      SWAP2 \t\t\t* @dev Returns the integer div...\n      SWAP1 \t\t\t* @dev Returns the integer div...\n      POP \t\t\t* @dev Returns the integer div...\n      JUMP \t\t\t* @dev Returns the integer div...\n    tag 218\t\t\t (consuming all remaining gas)...\n      JUMPDEST \t\t\t (consuming all remaining gas)...\n      PUSH 4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572\t\t\tnternal pure returns (uint256)...\n      PUSH 0\t\t\tb\n      DUP3 \t\t\tuint25\n      ADD \t\t\t a, uint256 b)\n      MSTORE \t\t\tuint256 a, uint256 b) internal...\n      POP \t\t\t (consuming all remaining gas)...\n      JUMP \t\t\t (consuming all remaining gas)...\n    tag 219\t\t\t(a, b, \"SafeMath: division by ...\n      JUMPDEST \t\t\t(a, b, \"SafeMath: division by ...\n      PUSH 0\t\t\tage\n      PUSH [tag] 316\t\t\t by zero. The result is rounde...\n      PUSH 20\t\t\trp\n      DUP4 \t\t\toun\n      PUSH [tag] 197\t\t\t by zero. The result is rounde...\n      JUMP \t\t\t by zero. The result is rounde...\n    tag 316\t\t\t by zero. The result is rounde...\n      JUMPDEST \t\t\t by zero. The result is rounde...\n      SWAP2 \t\t\tivision by zero. The result is...\n      POP \t\t\tivision by zero. The result is...\n      PUSH [tag] 317\t\t\tidity's `/` operator. Note: th...\n      DUP3 \t\t\tini\n      PUSH [tag] 218\t\t\tidity's `/` operator. Note: th...\n      JUMP \t\t\tidity's `/` operator. Note: th...\n    tag 317\t\t\tidity's `/` operator. Note: th...\n      JUMPDEST \t\t\tidity's `/` operator. Note: th...\n      PUSH 20\t\t\tli\n      DUP3 \t\t\tle \n      ADD \t\t\t while Solid\n      SWAP1 \t\t\touched) while Solid\n      POP \t\t\touched) while Solid\n      SWAP2 \t\t\t(a, b, \"SafeMath: division by ...\n      SWAP1 \t\t\t(a, b, \"SafeMath: division by ...\n      POP \t\t\t(a, b, \"SafeMath: division by ...\n      JUMP \t\t\t(a, b, \"SafeMath: division by ...\n    tag 120\t\t\tes an invalid opcode to revert...\n      JUMPDEST \t\t\tes an invalid opcode to revert...\n      PUSH 0\t\t\tb, s\n      PUSH 20\t\t\tl \n      DUP3 \t\t\tge) inter\n      ADD \t\t\tessage) internal p\n      SWAP1 \t\t\ty errorMessage) internal p\n      POP \t\t\ty errorMessage) internal p\n      DUP2 \t\t\tautomatic\n      DUP2 \t\t\t onl\n      SUB \t\t\tdity only automatica\n      PUSH 0\t\t\tS\n      DUP4 \t\t\t {\\r\\n    /\n      ADD \t\t\t256) {\\r\\n    // So\n      MSTORE \t\t\ts (uint256) {\\r\\n    // Solidi...\n      PUSH [tag] 319\t\t\tividing by 0\\r\\n    require(b ...\n      DUP2 \t\t\te in\n      PUSH [tag] 219\t\t\tividing by 0\\r\\n    require(b ...\n      JUMP \t\t\tividing by 0\\r\\n    require(b ...\n    tag 319\t\t\tividing by 0\\r\\n    require(b ...\n      JUMPDEST \t\t\tividing by 0\\r\\n    require(b ...\n      SWAP1 \t\t\ts when dividing by 0\\r\\n    re...\n      POP \t\t\ts when dividing by 0\\r\\n    re...\n      SWAP2 \t\t\tes an invalid opcode to revert...\n      SWAP1 \t\t\tes an invalid opcode to revert...\n      POP \t\t\tes an invalid opcode to revert...\n      JUMP \t\t\tes an invalid opcode to revert...\n    tag 220\t\t\tesn't hold\\r\\n\\r\\n    return c...\n      JUMPDEST \t\t\tesn't hold\\r\\n\\r\\n    return c...\n      PUSH 42455032303A20617070726F76652066726F6D20746865207A65726F20616464\t\t\t * Reverts when dividing by ze...\n      PUSH 0\t\t\t\\r\n      DUP3 \t\t\tmodulo\n      ADD \t\t\tger modulo),\\r\\n\n      MSTORE \t\t\ted integer modulo),\\r\\n   * Re...\n      PUSH 7265737300000000000000000000000000000000000000000000000000000000\t\t\t's `%`\n      PUSH 20\t\t\tid\n      DUP3 \t\t\tt to S\n      ADD \t\t\trpart to Solidi\n      MSTORE \t\t\t Counterpart to Solidity's `%`...\n      POP \t\t\tesn't hold\\r\\n\\r\\n    return c...\n      JUMP \t\t\tesn't hold\\r\\n\\r\\n    return c...\n    tag 221\t\t\ts function uses a `revert`\\r\\n...\n      JUMPDEST \t\t\ts function uses a `revert`\\r\\n...\n      PUSH 0\t\t\tg a\n      PUSH [tag] 322\t\t\t\\r\\n   *\\r\\n   * Requirements:...\n      PUSH 24\t\t\t  \n      DUP4 \t\t\tro.\n      PUSH [tag] 197\t\t\t\\r\\n   *\\r\\n   * Requirements:...\n      JUMP \t\t\t\\r\\n   *\\r\\n   * Requirements:...\n    tag 322\t\t\t\\r\\n   *\\r\\n   * Requirements:...\n      JUMPDEST \t\t\t\\r\\n   *\\r\\n   * Requirements:...\n      SWAP2 \t\t\tg gas).\\r\\n   *\\r\\n   * Requir...\n      POP \t\t\tg gas).\\r\\n   *\\r\\n   * Requir...\n      PUSH [tag] 323\t\t\tction mod(uint256 a, uint256 b...\n      DUP3 \t\t\tSaf\n      PUSH [tag] 220\t\t\tction mod(uint256 a, uint256 b...\n      JUMP \t\t\tction mod(uint256 a, uint256 b...\n    tag 323\t\t\tction mod(uint256 a, uint256 b...\n      JUMPDEST \t\t\tction mod(uint256 a, uint256 b...\n      PUSH 40\t\t\t  \n      DUP3 \t\t\t\");\n      ADD \t\t\tzero\");\\r\\n  }\n      SWAP1 \t\t\tulo by zero\");\\r\\n  }\n      POP \t\t\tulo by zero\");\\r\\n  }\n      SWAP2 \t\t\ts function uses a `revert`\\r\\n...\n      SWAP1 \t\t\ts function uses a `revert`\\r\\n...\n      POP \t\t\ts function uses a `revert`\\r\\n...\n      JUMP \t\t\ts function uses a `revert`\\r\\n...\n    tag 159\t\t\t  * @dev Returns the remainder...\n      JUMPDEST \t\t\t  * @dev Returns the remainder...\n      PUSH 0\t\t\tterp\n      PUSH 20\t\t\tis\n      DUP3 \t\t\tperator. \n      ADD \t\t\t%` operator. This \n      SWAP1 \t\t\tdity's `%` operator. This \n      POP \t\t\tdity's `%` operator. This \n      DUP2 \t\t\teaves rem\n      DUP2 \t\t\thich\n      SUB \t\t\te (which leaves rema\n      PUSH 0\t\t\tp\n      DUP4 \t\t\trt`\\r\\n   *\n      ADD \t\t\trevert`\\r\\n   * opc\n      MSTORE \t\t\tses a `revert`\\r\\n   * opcode ...\n      PUSH [tag] 325\t\t\td) while Solidity uses an\\r\\n ...\n      DUP2 \t\t\tdivi\n      PUSH [tag] 221\t\t\td) while Solidity uses an\\r\\n ...\n      JUMP \t\t\td) while Solidity uses an\\r\\n ...\n    tag 325\t\t\td) while Solidity uses an\\r\\n ...\n      JUMPDEST \t\t\td) while Solidity uses an\\r\\n ...\n      SWAP1 \t\t\tuntouched) while Solidity uses...\n      POP \t\t\tuntouched) while Solidity uses...\n      SWAP2 \t\t\t  * @dev Returns the remainder...\n      SWAP1 \t\t\t  * @dev Returns the remainder...\n      POP \t\t\t  * @dev Returns the remainder...\n      JUMP \t\t\t  * @dev Returns the remainder...\n    tag 222\t\t\tzero.\\r\\n   */\\r\\n  function m...\n      JUMPDEST \t\t\tzero.\\r\\n   */\\r\\n  function m...\n      PUSH 42455032303A20617070726F766520746F20746865207A65726F206164647265\t\t\tessage);\\r\\n    return a % b;\\...\n      PUSH 0\t\t\tr\n      DUP3 \t\t\t!= 0, \n      ADD \t\t\te(b != 0, erro\n      MSTORE \t\t\t require(b != 0, errorMessage)...\n      PUSH 7373000000000000000000000000000000000000000000000000000000000000\t\t\thich\n      PUSH 20\t\t\tul\n      DUP3 \t\t\tract m\n      ADD \t\t\tContract module\n      MSTORE \t\t\t* @dev Contract module which \n      POP \t\t\tzero.\\r\\n   */\\r\\n  function m...\n      JUMP \t\t\tzero.\\r\\n   */\\r\\n  function m...\n    tag 223\t\t\tsic access control mechanism, ...\n      JUMPDEST \t\t\tsic access control mechanism, ...\n      PUSH 0\t\t\t By\n      PUSH [tag] 328\t\t\tr account will be the one that...\n      PUSH 22\t\t\tn \n      DUP4 \t\t\t * \n      PUSH [tag] 197\t\t\tr account will be the one that...\n      JUMP \t\t\tr account will be the one that...\n    tag 328\t\t\tr account will be the one that...\n      JUMPDEST \t\t\tr account will be the one that...\n      SWAP2 \t\t\the owner account will be the o...\n      POP \t\t\the owner account will be the o...\n      PUSH [tag] 329\t\t\thanged with {transferOwnership...\n      DUP3 \t\t\t ma\n      PUSH [tag] 222\t\t\thanged with {transferOwnership...\n      JUMP \t\t\thanged with {transferOwnership...\n    tag 329\t\t\thanged with {transferOwnership...\n      JUMPDEST \t\t\thanged with {transferOwnership...\n      PUSH 40\t\t\t\\n \n      DUP3 \t\t\tfie\n      ADD \t\t\tmodifier\\r\\n *\n      SWAP1 \t\t\tle the modifier\\r\\n *\n      POP \t\t\tle the modifier\\r\\n *\n      SWAP2 \t\t\tsic access control mechanism, ...\n      SWAP1 \t\t\tsic access control mechanism, ...\n      POP \t\t\tsic access control mechanism, ...\n      JUMP \t\t\tsic access control mechanism, ...\n    tag 162\t\t\t, which can be applied to your...\n      JUMPDEST \t\t\t, which can be applied to your...\n      PUSH 0\t\t\tansf\n      PUSH 20\t\t\tr,\n      DUP3 \t\t\treviousOw\n      ADD \t\t\ted previousOwner, \n      SWAP1 \t\t\tss indexed previousOwner, \n      POP \t\t\tss indexed previousOwner, \n      DUP2 \t\t\t Initiali\n      DUP2 \t\t\t* @d\n      SUB \t\t\t\\n   * @dev Initializ\n      PUSH 0\t\t\t/\n      DUP4 \t\t\tner);\\r\\n\\r\\n\n      ADD \t\t\tewOwner);\\r\\n\\r\\n  /*\n      MSTORE \t\t\tdexed newOwner);\\r\\n\\r\\n  /**\\...\n      PUSH [tag] 331\t\t\ttting the deployer as the init...\n      DUP2 \t\t\tende\n      PUSH [tag] 223\t\t\ttting the deployer as the init...\n      JUMP \t\t\ttting the deployer as the init...\n    tag 331\t\t\ttting the deployer as the init...\n      JUMPDEST \t\t\ttting the deployer as the init...\n      SWAP1 \t\t\ttract setting the deployer as ...\n      POP \t\t\ttract setting the deployer as ...\n      SWAP2 \t\t\t, which can be applied to your...\n      SWAP1 \t\t\t, which can be applied to your...\n      POP \t\t\t, which can be applied to your...\n      JUMP \t\t\t, which can be applied to your...\n    tag 224\t\t\twnershipTransferred(address(0)...\n      JUMPDEST \t\t\twnershipTransferred(address(0)...\n      PUSH 42455032303A207472616E736665722066726F6D20746865207A65726F206164\t\t\tblic view returns (address) {\\...\n      PUSH 0\t\t\t)\n      DUP3 \t\t\tn owne\n      ADD \t\t\tction owner() \n      MSTORE \t\t\t\\r\\n  function owner() public ...\n      PUSH 6472657373000000000000000000000000000000000000000000000000000000\t\t\t @dev T\n      PUSH 20\t\t\t\\n \n      DUP3 \t\t\t\\r\\n  /*\n      ADD \t\t\t }\\r\\n\\r\\n  /**\\r\\n  \n      MSTORE \t\t\tner;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  ...\n      POP \t\t\twnershipTransferred(address(0)...\n      JUMP \t\t\twnershipTransferred(address(0)...\n    tag 225\t\t\td by any account other than th...\n      JUMPDEST \t\t\td by any account other than th...\n      PUSH 0\t\t\t\");\n      PUSH [tag] 334\t\t\t /**\\r\\n   * @dev Leaves the c...\n      PUSH 25\t\t\te \n      DUP4 \t\t\tnot\n      PUSH [tag] 197\t\t\t /**\\r\\n   * @dev Leaves the c...\n      JUMP \t\t\t /**\\r\\n   * @dev Leaves the c...\n    tag 334\t\t\t /**\\r\\n   * @dev Leaves the c...\n      JUMPDEST \t\t\t /**\\r\\n   * @dev Leaves the c...\n      SWAP2 \t\t\t }\\r\\n\\r\\n  /**\\r\\n   * @dev L...\n      POP \t\t\t }\\r\\n\\r\\n  /**\\r\\n   * @dev L...\n      PUSH [tag] 335\t\t\to call\\r\\n   * `onlyOwner` fun...\n      DUP3 \t\t\t*\\r\\n\n      PUSH [tag] 224\t\t\to call\\r\\n   * `onlyOwner` fun...\n      JUMP \t\t\to call\\r\\n   * `onlyOwner` fun...\n    tag 335\t\t\to call\\r\\n   * `onlyOwner` fun...\n      JUMPDEST \t\t\to call\\r\\n   * `onlyOwner` fun...\n      PUSH 40\t\t\trs\n      DUP3 \t\t\t ow\n      ADD \t\t\tcing ownersh\n      SWAP1 \t\t\t Renouncing ownersh\n      POP \t\t\t Renouncing ownersh\n      SWAP2 \t\t\td by any account other than th...\n      SWAP1 \t\t\td by any account other than th...\n      POP \t\t\td by any account other than th...\n      JUMP \t\t\td by any account other than th...\n    tag 167\t\t\te the contract without an owne...\n      JUMPDEST \t\t\te the contract without an owne...\n      PUSH 0\t\t\t {\\r\\n\n      PUSH 20\t\t\ter\n      DUP3 \t\t\tferred(_o\n      ADD \t\t\transferred(_owner,\n      SWAP1 \t\t\tnershipTransferred(_owner,\n      POP \t\t\tnershipTransferred(_owner,\n      DUP2 \t\t\t\\r\\n  /**\\r\\n\n      DUP2 \t\t\t\\n  }\n      SUB \t\t\t0);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n \n      PUSH 0\t\t\te\n      DUP4 \t\t\twner = ad\n      ADD \t\t\t  _owner = addres\n      MSTORE \t\t\t));\\r\\n    _owner = address(0)...\n      PUSH [tag] 337\t\t\t ownership of the contract to ...\n      DUP2 \t\t\tansf\n      PUSH [tag] 225\t\t\t ownership of the contract to ...\n      JUMP \t\t\t ownership of the contract to ...\n    tag 337\t\t\t ownership of the contract to ...\n      JUMPDEST \t\t\t ownership of the contract to ...\n      SWAP1 \t\t\transfers ownership of the cont...\n      POP \t\t\transfers ownership of the cont...\n      SWAP2 \t\t\te the contract without an owne...\n      SWAP1 \t\t\te the contract without an owne...\n      POP \t\t\te the contract without an owne...\n      JUMP \t\t\te the contract without an owne...\n    tag 226\t\t\tdress newOwner) public onlyOwn...\n      JUMPDEST \t\t\tdress newOwner) public onlyOwn...\n      PUSH 42455032303A207472616E7366657220746F20746865207A65726F2061646472\t\t\taccount (`newOwner`).\\r\\n   */...\n      PUSH 0\t\t\tn\n      DUP3 \t\t\tct to \n      ADD \t\t\tntract to a ne\n      MSTORE \t\t\t the contract to a new account...\n      PUSH 6573730000000000000000000000000000000000000000000000000000000000\t\t\tewOwn\n      PUSH 20\t\t\tes\n      DUP3 \t\t\thip(ad\n      ADD \t\t\tnership(address\n      MSTORE \t\t\tnsferOwnership(address newOwne\n      POP \t\t\tdress newOwner) public onlyOwn...\n      JUMP \t\t\tdress newOwner) public onlyOwn...\n    tag 227\t\t\t\\r\\n    require(newOwner != ad...\n      JUMPDEST \t\t\t\\r\\n    require(newOwner != ad...\n      PUSH 0\t\t\t = \n      PUSH [tag] 340\t\t\t\\n\\r\\ncontract BEP20Token is C...\n      PUSH 23\t\t\tfe\n      DUP4 \t\t\tng \n      PUSH [tag] 197\t\t\t\\n\\r\\ncontract BEP20Token is C...\n      JUMP \t\t\t\\n\\r\\ncontract BEP20Token is C...\n    tag 340\t\t\t\\n\\r\\ncontract BEP20Token is C...\n      JUMPDEST \t\t\t\\n\\r\\ncontract BEP20Token is C...\n      SWAP2 \t\t\t  }\\r\\n}\\r\\n\\r\\ncontract BEP20...\n      POP \t\t\t  }\\r\\n}\\r\\n\\r\\ncontract BEP20...\n      PUSH [tag] 341\t\t\tint256;\\r\\n\\r\\n  mapping (addr...\n      DUP3 \t\t\tpin\n      PUSH [tag] 226\t\t\tint256;\\r\\n\\r\\n  mapping (addr...\n      JUMP \t\t\tint256;\\r\\n\\r\\n  mapping (addr...\n    tag 341\t\t\tint256;\\r\\n\\r\\n  mapping (addr...\n      JUMPDEST \t\t\tint256;\\r\\n\\r\\n  mapping (addr...\n      PUSH 40\t\t\tiv\n      DUP3 \t\t\t)) \n      ADD \t\t\tt256)) priva\n      SWAP1 \t\t\t => uint256)) priva\n      POP \t\t\t => uint256)) priva\n      SWAP2 \t\t\t\\r\\n    require(newOwner != ad...\n      SWAP1 \t\t\t\\r\\n    require(newOwner != ad...\n      POP \t\t\t\\r\\n    require(newOwner != ad...\n      JUMP \t\t\t\\r\\n    require(newOwner != ad...\n    tag 170\t\t\tes;\\r\\n\\r\\n  uint256 private _...\n      JUMPDEST \t\t\tes;\\r\\n\\r\\n  uint256 private _...\n      PUSH 0\t\t\tBIRD\n      PUSH 20\t\t\t  \n      DUP3 \t\t\tYBIRD\";\\r\\n\n      ADD \t\t\tLUCKYBIRD\";\\r\\n    _\n      SWAP1 \t\t\tmbol = \"LUCKYBIRD\";\\r\\n    _\n      POP \t\t\tmbol = \"LUCKYBIRD\";\\r\\n    _\n      DUP2 \t\t\t000000000\n      DUP2 \t\t\t0000\n      SUB \t\t\t00000000000000000000\n      PUSH 0\t\t\t \n      DUP4 \t\t\ttotalSupp\n      ADD \t\t\t   _totalSupply =\n      MSTORE \t\t\t 18;\\r\\n    _totalSupply = 100...\n      PUSH [tag] 343\t\t\tnces[msg.sender] = _totalSuppl...\n      DUP2 \t\t\tthe \n      PUSH [tag] 227\t\t\tnces[msg.sender] = _totalSuppl...\n      JUMP \t\t\tnces[msg.sender] = _totalSuppl...\n    tag 343\t\t\tnces[msg.sender] = _totalSuppl...\n      JUMPDEST \t\t\tnces[msg.sender] = _totalSuppl...\n      SWAP1 \t\t\t   _balances[msg.sender] = _to...\n      POP \t\t\t   _balances[msg.sender] = _to...\n      SWAP2 \t\t\tes;\\r\\n\\r\\n  uint256 private _...\n      SWAP1 \t\t\tes;\\r\\n\\r\\n  uint256 private _...\n      POP \t\t\tes;\\r\\n\\r\\n  uint256 private _...\n      JUMP \t\t\tes;\\r\\n\\r\\n  uint256 private _...\n    tag 228\t\t\tr.\\r\\n   */\\r\\n  function getO...\n      JUMPDEST \t\t\tr.\\r\\n   */\\r\\n  function getO...\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\teturns (address) {\\r\\n    retu...\n      PUSH 0\t\t\tw\n      MSTORE \t\t\tnal view returns (address) {\\r...\n      PUSH 11\t\t\t*/\\r\\n\n      PUSH 4\t\t\t \n      MSTORE \t\t\tmals.\\r\\n   */\\r\\n \n      PUSH 24\t\t\t) ex\n      PUSH 0\t\t\tl\n      REVERT \t\t\t decimals() ext\n    tag 178\t\t\teturns (uint8) {\\r\\n    return...\n      JUMPDEST \t\t\teturns (uint8) {\\r\\n    return...\n      PUSH 0\t\t\t\\n  }\n      PUSH [tag] 346\t\t\t@dev Returns the tok\n      DUP3 \t\t\to\n      PUSH [tag] 208\t\t\t@dev Returns the tok\n      JUMP \t\t\t@dev Returns the tok\n    tag 346\t\t\t@dev Returns the tok\n      JUMPDEST \t\t\t@dev Returns the tok\n      SWAP2 \t\t\t   * @dev Returns the tok\n      POP \t\t\t   * @dev Returns the tok\n      PUSH [tag] 347\t\t\t */\\r\\n  function symb\n      DUP4 \t\t\tm\n      PUSH [tag] 208\t\t\t */\\r\\n  function symb\n      JUMP \t\t\t */\\r\\n  function symb\n    tag 347\t\t\t */\\r\\n  function symb\n      JUMPDEST \t\t\t */\\r\\n  function symb\n      SWAP3 \t\t\t.\\r\\n   */\\r\\n  function symb\n      POP \t\t\t.\\r\\n   */\\r\\n  function symb\n      DUP3 \t\t\tn\n      DUP3 \t\t\tt\n      SUB \t\t\tw returns\n      SWAP1 \t\t\trnal view returns\n      POP \t\t\trnal view returns\n      DUP2 \t\t\t \n      DUP2 \t\t\t {\\r\\n\n      GT \t\t\try) {\\r\\n    \n      ISZERO \t\t\temory) {\\r\\n    return _symbol...\n      PUSH [tag] 348\t\t\temory) {\\r\\n    return _symbol...\n      JUMPI \t\t\temory) {\\r\\n    return _symbol...\n      PUSH [tag] 349\t\t\turn _symbol;\\r\\n  }\\r\n      PUSH [tag] 228\t\t\turn _symbol;\\r\\n  }\\r\n      JUMP \t\t\turn _symbol;\\r\\n  }\\r\n    tag 349\t\t\turn _symbol;\\r\\n  }\\r\n      JUMPDEST \t\t\turn _symbol;\\r\\n  }\\r\n    tag 348\t\t\temory) {\\r\\n    return _symbol...\n      JUMPDEST \t\t\temory) {\\r\\n    return _symbol...\n      SWAP3 \t\t\teturns (uint8) {\\r\\n    return...\n      SWAP2 \t\t\teturns (uint8) {\\r\\n    return...\n      POP \t\t\teturns (uint8) {\\r\\n    return...\n      POP \t\t\teturns (uint8) {\\r\\n    return...\n      JUMP \t\t\teturns (uint8) {\\r\\n    return...\n    tag 181\t\t\tdev Returns the token name.\\r\\...\n      JUMPDEST \t\t\tdev Returns the token name.\\r\\...\n      PUSH 0\t\t\tcti\n      PUSH [tag] 351\t\t\tal view returns (str\n      DUP3 \t\t\tt\n      PUSH [tag] 208\t\t\tal view returns (str\n      JUMP \t\t\tal view returns (str\n    tag 351\t\t\tal view returns (str\n      JUMPDEST \t\t\tal view returns (str\n      SWAP2 \t\t\txternal view returns (str\n      POP \t\t\txternal view returns (str\n      PUSH [tag] 352\t\t\t\\n    return _name;\\r\\n\n      DUP4 \t\t\t\\r\n      PUSH [tag] 208\t\t\t\\n    return _name;\\r\\n\n      JUMP \t\t\t\\n    return _name;\\r\\n\n    tag 352\t\t\t\\n    return _name;\\r\\n\n      JUMPDEST \t\t\t\\n    return _name;\\r\\n\n      SWAP3 \t\t\ty) {\\r\\n    return _name;\\r\\n\n      POP \t\t\ty) {\\r\\n    return _name;\\r\\n\n      DUP3 \t\t\t \n      DUP3 \t\t\td\n      ADD \t\t\t * @dev S\n      SWAP1 \t\t\t/**\\r\\n   * @dev S\n      POP \t\t\t/**\\r\\n   * @dev S\n      DUP1 \t\t\tly}\n      DUP3 \t\t\tu\n      GT \t\t\talSupply}.\n      ISZERO \t\t\ttotalSupply}.\\r\\n   */\\r\\n  fu...\n      PUSH [tag] 353\t\t\ttotalSupply}.\\r\\n   */\\r\\n  fu...\n      JUMPI \t\t\ttotalSupply}.\\r\\n   */\\r\\n  fu...\n      PUSH [tag] 354\t\t\t  */\\r\\n  function t\n      PUSH [tag] 228\t\t\t  */\\r\\n  function t\n      JUMP \t\t\t  */\\r\\n  function t\n    tag 354\t\t\t  */\\r\\n  function t\n      JUMPDEST \t\t\t  */\\r\\n  function t\n    tag 353\t\t\ttotalSupply}.\\r\\n   */\\r\\n  fu...\n      JUMPDEST \t\t\ttotalSupply}.\\r\\n   */\\r\\n  fu...\n      SWAP3 \t\t\tdev Returns the token name.\\r\\...\n      SWAP2 \t\t\tdev Returns the token name.\\r\\...\n      POP \t\t\tdev Returns the token name.\\r\\...\n      POP \t\t\tdev Returns the token name.\\r\\...\n      JUMP \t\t\tdev Returns the token name.\\r\\...\n    tag 229\t\t\tternal view returns (uint256) ...\n      JUMPDEST \t\t\tternal view returns (uint256) ...\n      PUSH 536166654D6174683A206164646974696F6E206F766572666C6F770000000000\t\t\tss account) external view ret\n      PUSH 0\t\t\td\n      DUP3 \t\t\tanceOf\n      ADD \t\t\t balanceOf(add\n      MSTORE \t\t\tunction balanceOf(address acco...\n      POP \t\t\tternal view returns (uint256) ...\n      JUMP \t\t\tternal view returns (uint256) ...\n    tag 230\t\t\t {\\r\\n    return _balances[acc...\n      JUMPDEST \t\t\t {\\r\\n    return _balances[acc...\n      PUSH 0\t\t\te t\n      PUSH [tag] 357\t\t\t   * - the caller must have a ...\n      PUSH 1B\t\t\t*/\n      DUP4 \t\t\t\\r\\n \n      PUSH [tag] 197\t\t\t   * - the caller must have a ...\n      JUMP \t\t\t   * - the caller must have a ...\n    tag 357\t\t\t   * - the caller must have a ...\n      JUMPDEST \t\t\t   * - the caller must have a ...\n      SWAP2 \t\t\tress.\\r\\n   * - the caller mus...\n      POP \t\t\tress.\\r\\n   * - the caller mus...\n      PUSH [tag] 358\t\t\ton transfer(address recipient,...\n      DUP3 \t\t\tmsg\n      PUSH [tag] 229\t\t\ton transfer(address recipient,...\n      JUMP \t\t\ton transfer(address recipient,...\n    tag 358\t\t\ton transfer(address recipient,...\n      JUMPDEST \t\t\ton transfer(address recipient,...\n      PUSH 20\t\t\tt)\n      DUP3 \t\t\tamo\n      ADD \t\t\tnt, amount);\n      SWAP1 \t\t\trecipient, amount);\n      POP \t\t\trecipient, amount);\n      SWAP2 \t\t\t {\\r\\n    return _balances[acc...\n      SWAP1 \t\t\t {\\r\\n    return _balances[acc...\n      POP \t\t\t {\\r\\n    return _balances[acc...\n      JUMP \t\t\t {\\r\\n    return _balances[acc...\n    tag 184\t\t\t true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n...\n      JUMPDEST \t\t\t true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n...\n      PUSH 0\t\t\towan\n      PUSH 20\t\t\t\\r\\n\n      DUP3 \t\t\t }\\r\\n\\r\\n  /\n      ADD \t\t\t;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n \n      SWAP1 \t\t\tspender];\\r\\n  }\\r\\n\\r\\n  /**\\...\n      POP \t\t\tspender];\\r\\n  }\\r\\n\\r\\n  /**\\...\n      DUP2 \t\t\tirements:\n      DUP2 \t\t\t* Re\n      SUB \t\t\t\\n   * Requirements:\\r\n      PUSH 0\t\t\t \n      DUP4 \t\t\tpprove}.\\r\n      ADD \t\t\t20-approve}.\\r\\n   \n      MSTORE \t\t\tee {BEP20-approve}.\\r\\n   *\\r\\...\n      PUSH [tag] 360\t\t\tnder` cannot be the zero addre...\n      DUP2 \t\t\tappr\n      PUSH [tag] 230\t\t\tnder` cannot be the zero addre...\n      JUMP \t\t\tnder` cannot be the zero addre...\n    tag 360\t\t\tnder` cannot be the zero addre...\n      JUMPDEST \t\t\tnder` cannot be the zero addre...\n      SWAP1 \t\t\t* - `spender` cannot be the ze...\n      POP \t\t\t* - `spender` cannot be the ze...\n      SWAP2 \t\t\t true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n...\n      SWAP1 \t\t\t true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n...\n      POP \t\t\t true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n...\n      JUMP \t\t\t true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n...\n    tag 231\t\t\t(), spender, amount);\\r\\n    r...\n      JUMPDEST \t\t\t(), spender, amount);\\r\\n    r...\n      PUSH 42455032303A206D696E7420746F20746865207A65726F206164647265737300\t\t\tthe updated allowance. This is...\n      PUSH 0\t\t\ti\n      DUP3 \t\t\t indic\n      ADD \t\t\tvent indicatin\n      MSTORE \t\t\toval} event indicating the upd...\n      POP \t\t\t(), spender, amount);\\r\\n    r...\n      JUMP \t\t\t(), spender, amount);\\r\\n    r...\n    tag 232\t\t\ted by the EIP. See the note at...\n      JUMPDEST \t\t\ted by the EIP. See the note at...\n      PUSH 0\t\t\t.\\r\\n\n      PUSH [tag] 363\t\t\tst have a balance of at least ...\n      PUSH 1F\t\t\tha\n      DUP4 \t\t\tmus\n      PUSH [tag] 197\t\t\tst have a balance of at least ...\n      JUMP \t\t\tst have a balance of at least ...\n    tag 363\t\t\tst have a balance of at least ...\n      JUMPDEST \t\t\tst have a balance of at least ...\n      SWAP2 \t\t\tder` must have a balance of at...\n      POP \t\t\tder` must have a balance of at...\n      PUSH [tag] 364\t\t\tce for `sender`'s tokens of at...\n      DUP3 \t\t\tess\n      PUSH [tag] 231\t\t\tce for `sender`'s tokens of at...\n      JUMP \t\t\tce for `sender`'s tokens of at...\n    tag 364\t\t\tce for `sender`'s tokens of at...\n      JUMPDEST \t\t\tce for `sender`'s tokens of at...\n      PUSH 20\t\t\t, \n      DUP3 \t\t\tpie\n      ADD \t\t\trecipient, u\n      SWAP1 \t\t\tddress recipient, u\n      POP \t\t\tddress recipient, u\n      SWAP2 \t\t\ted by the EIP. See the note at...\n      SWAP1 \t\t\ted by the EIP. See the note at...\n      POP \t\t\ted by the EIP. See the note at...\n      JUMP \t\t\ted by the EIP. See the note at...\n    tag 188\t\t\tt) external returns (bool) {\\r...\n      JUMPDEST \t\t\tt) external returns (bool) {\\r...\n      PUSH 0\t\t\tsfer\n      PUSH 20\t\t\t r\n      DUP3 \t\t\tce\"));\\r\\n \n      ADD \t\t\towance\"));\\r\\n    re\n      SWAP1 \t\t\teeds allowance\"));\\r\\n    re\n      POP \t\t\teeds allowance\"));\\r\\n    re\n      DUP2 \t\t\t increase\n      DUP2 \t\t\tical\n      SUB \t\t\tAtomically increases\n      PUSH 0\t\t\td\n      DUP4 \t\t\t/**\\r\\n   *\n      ADD \t\t\t\\r\\n  /**\\r\\n   * @de\n      MSTORE \t\t\t\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @...\n      PUSH [tag] 366\t\t\tnted to `spender` by the calle...\n      DUP2 \t\t\toble\n      PUSH [tag] 232\t\t\tnted to `spender` by the calle...\n      JUMP \t\t\tnted to `spender` by the calle...\n    tag 366\t\t\tnted to `spender` by the calle...\n      JUMPDEST \t\t\tnted to `spender` by the calle...\n      SWAP1 \t\t\tance granted to `spender` by t...\n      POP \t\t\tance granted to `spender` by t...\n      SWAP2 \t\t\tt) external returns (bool) {\\r...\n      SWAP1 \t\t\tt) external returns (bool) {\\r...\n      POP \t\t\tt) external returns (bool) {\\r...\n      JUMP \t\t\tt) external returns (bool) {\\r...\n    tag 233\t\t\tn {BEP20-approve}.\\r\\n   *\\r\\n...\n      JUMPDEST \t\t\tn {BEP20-approve}.\\r\\n   *\\r\\n...\n      PUSH 4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061\t\t\t cannot be the zero address.\\r...\n      PUSH 0\t\t\td\n      DUP3 \t\t\t - `sp\n      ADD \t\t\t   * - `spende\n      MSTORE \t\t\t\\n   *\\r\\n   * - `spender` can...\n      PUSH 6464726573730000000000000000000000000000000000000000000000000000\t\t\tress spe\n      PUSH 20\t\t\te(\n      DUP3 \t\t\tAllowa\n      ADD \t\t\teaseAllowance(a\n      MSTORE \t\t\ton increaseAllowance(address s...\n      POP \t\t\tn {BEP20-approve}.\\r\\n   *\\r\\n...\n      JUMP \t\t\tn {BEP20-approve}.\\r\\n   *\\r\\n...\n    tag 234\t\t\taddedValue) public returns (bo...\n      JUMPDEST \t\t\taddedValue) public returns (bo...\n      PUSH 0\t\t\t;\\r\\n\n      PUSH [tag] 369\t\t\t @dev Atomically decreases the...\n      PUSH 26\t\t\t t\n      DUP4 \t\t\tr` \n      PUSH [tag] 197\t\t\t @dev Atomically decreases the...\n      JUMP \t\t\t @dev Atomically decreases the...\n    tag 369\t\t\t @dev Atomically decreases the...\n      JUMPDEST \t\t\t @dev Atomically decreases the...\n      SWAP2 \t\t\t*\\r\\n   * @dev Atomically decr...\n      POP \t\t\t*\\r\\n   * @dev Atomically decr...\n      PUSH [tag] 370\t\t\t\\r\\n   *\\r\\n   * This is an al...\n      DUP3 \t\t\t * \n      PUSH [tag] 233\t\t\t\\r\\n   *\\r\\n   * This is an al...\n      JUMP \t\t\t\\r\\n   *\\r\\n   * This is an al...\n    tag 370\t\t\t\\r\\n   *\\r\\n   * This is an al...\n      JUMPDEST \t\t\t\\r\\n   *\\r\\n   * This is an al...\n      PUSH 40\t\t\t20\n      DUP3 \t\t\t {B\n      ADD \t\t\td in {BEP20-\n      SWAP1 \t\t\tescribed in {BEP20-\n      POP \t\t\tescribed in {BEP20-\n      SWAP2 \t\t\taddedValue) public returns (bo...\n      SWAP1 \t\t\taddedValue) public returns (bo...\n      POP \t\t\taddedValue) public returns (bo...\n      JUMP \t\t\taddedValue) public returns (bo...\n    tag 195\t\t\t  *\\r\\n   * Emits an {Approval...\n      JUMPDEST \t\t\t  *\\r\\n   * Emits an {Approval...\n      PUSH 0\t\t\tmust\n      PUSH 20\t\t\tat\n      DUP3 \t\t\t caller o\n      ADD \t\t\t the caller of at \n      SWAP1 \t\t\tance for the caller of at \n      POP \t\t\tance for the caller of at \n      DUP2 \t\t\tion decre\n      DUP2 \t\t\t fun\n      SUB \t\t\t/\\r\\n  function decrea\n      PUSH 0\t\t\t \n      DUP4 \t\t\tedValue`.\n      ADD \t\t\tractedValue`.\\r\\n  \n      MSTORE \t\t\t* `subtractedValue`.\\r\\n   */\\...\n      PUSH [tag] 372\t\t\ts spender, uint256 subtractedV...\n      DUP2 \t\t\tnder\n      PUSH [tag] 234\t\t\ts spender, uint256 subtractedV...\n      JUMP \t\t\ts spender, uint256 subtractedV...\n    tag 372\t\t\ts spender, uint256 subtractedV...\n      JUMPDEST \t\t\ts spender, uint256 subtractedV...\n      SWAP1 \t\t\te(address spender, uint256 sub...\n      POP \t\t\te(address spender, uint256 sub...\n      SWAP2 \t\t\t  *\\r\\n   * Emits an {Approval...\n      SWAP1 \t\t\t  *\\r\\n   * Emits an {Approval...\n      POP \t\t\t  *\\r\\n   * Emits an {Approval...\n      JUMP \t\t\t  *\\r\\n   * Emits an {Approval...\n    .data\n      4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E:\n        42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n      A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73:\n        42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n      B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22:\n        42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n"
}